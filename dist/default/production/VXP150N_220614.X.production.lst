

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Jan 02 16:08:05 2023

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,delta=2
    59                           	psect	text48,local,class=CODE,merge=1,delta=2
    60                           	psect	text49,local,class=CODE,merge=1,delta=2
    61                           	psect	text50,local,class=CODE,merge=1,delta=2
    62                           	psect	text51,local,class=CODE,merge=1,delta=2
    63                           	psect	text52,local,class=CODE,merge=1,delta=2
    64                           	psect	text53,local,class=CODE,merge=1,delta=2
    65                           	psect	text54,local,class=CODE,merge=1,delta=2
    66                           	psect	text55,local,class=CODE,merge=1,delta=2
    67                           	psect	text56,local,class=CODE,merge=1,delta=2
    68                           	psect	text57,local,class=CODE,merge=1,delta=2
    69                           	psect	text58,local,class=CODE,merge=1,delta=2
    70                           	psect	text59,local,class=CODE,merge=1,delta=2
    71                           	psect	text60,local,class=CODE,merge=1,delta=2
    72                           	psect	text61,local,class=CODE,merge=1,delta=2
    73                           	psect	text62,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text64,local,class=CODE,merge=1,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  018C                     	;# 
   149  0190                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020D                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  0219                     	;# 
   192  021A                     	;# 
   193  021B                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  029E                     	;# 
   217  029F                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  0311                     	;# 
   221  0311                     	;# 
   222  0312                     	;# 
   223  0313                     	;# 
   224  0314                     	;# 
   225  0315                     	;# 
   226  0315                     	;# 
   227  0316                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  031C                     	;# 
   233  031C                     	;# 
   234  031D                     	;# 
   235  031E                     	;# 
   236  038C                     	;# 
   237  038D                     	;# 
   238  0394                     	;# 
   239  0395                     	;# 
   240  0396                     	;# 
   241  040C                     	;# 
   242  040D                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  048D                     	;# 
   250  0491                     	;# 
   251  0492                     	;# 
   252  0493                     	;# 
   253  0493                     	;# 
   254  0494                     	;# 
   255  0495                     	;# 
   256  0496                     	;# 
   257  0497                     	;# 
   258  0791                     	;# 
   259  0792                     	;# 
   260  0793                     	;# 
   261  0794                     	;# 
   262  0795                     	;# 
   263  0798                     	;# 
   264  0799                     	;# 
   265  079A                     	;# 
   266  079B                     	;# 
   267  079C                     	;# 
   268  079D                     	;# 
   269  07A0                     	;# 
   270  07A1                     	;# 
   271  07A2                     	;# 
   272  07A3                     	;# 
   273  07A4                     	;# 
   274  07A5                     	;# 
   275  07A6                     	;# 
   276  07A7                     	;# 
   277  07A8                     	;# 
   278  07A9                     	;# 
   279  07AA                     	;# 
   280  07AB                     	;# 
   281  07AC                     	;# 
   282  07AD                     	;# 
   283  07AE                     	;# 
   284  07AF                     	;# 
   285  07B0                     	;# 
   286  07B1                     	;# 
   287  07B2                     	;# 
   288  07B3                     	;# 
   289  07B4                     	;# 
   290  07B5                     	;# 
   291  07B6                     	;# 
   292  07B7                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0110                     	;# 
   361  0111                     	;# 
   362  0112                     	;# 
   363  0113                     	;# 
   364  0114                     	;# 
   365  0115                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  0118                     	;# 
   369  0119                     	;# 
   370  011A                     	;# 
   371  011B                     	;# 
   372  011D                     	;# 
   373  011E                     	;# 
   374  011F                     	;# 
   375  018C                     	;# 
   376  0190                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0193                     	;# 
   383  0194                     	;# 
   384  0195                     	;# 
   385  0196                     	;# 
   386  0199                     	;# 
   387  0199                     	;# 
   388  019A                     	;# 
   389  019A                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019C                     	;# 
   395  019C                     	;# 
   396  019D                     	;# 
   397  019D                     	;# 
   398  019E                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  019F                     	;# 
   402  020D                     	;# 
   403  0211                     	;# 
   404  0211                     	;# 
   405  0212                     	;# 
   406  0212                     	;# 
   407  0213                     	;# 
   408  0213                     	;# 
   409  0214                     	;# 
   410  0214                     	;# 
   411  0215                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0216                     	;# 
   415  0216                     	;# 
   416  0217                     	;# 
   417  0217                     	;# 
   418  0219                     	;# 
   419  021A                     	;# 
   420  021B                     	;# 
   421  021C                     	;# 
   422  021D                     	;# 
   423  021E                     	;# 
   424  021F                     	;# 
   425  028C                     	;# 
   426  028D                     	;# 
   427  0291                     	;# 
   428  0291                     	;# 
   429  0292                     	;# 
   430  0293                     	;# 
   431  0294                     	;# 
   432  0295                     	;# 
   433  0295                     	;# 
   434  0296                     	;# 
   435  0298                     	;# 
   436  0298                     	;# 
   437  0299                     	;# 
   438  029A                     	;# 
   439  029B                     	;# 
   440  029C                     	;# 
   441  029C                     	;# 
   442  029D                     	;# 
   443  029E                     	;# 
   444  029F                     	;# 
   445  030C                     	;# 
   446  030D                     	;# 
   447  0311                     	;# 
   448  0311                     	;# 
   449  0312                     	;# 
   450  0313                     	;# 
   451  0314                     	;# 
   452  0315                     	;# 
   453  0315                     	;# 
   454  0316                     	;# 
   455  0318                     	;# 
   456  0318                     	;# 
   457  0319                     	;# 
   458  031A                     	;# 
   459  031C                     	;# 
   460  031C                     	;# 
   461  031D                     	;# 
   462  031E                     	;# 
   463  038C                     	;# 
   464  038D                     	;# 
   465  0394                     	;# 
   466  0395                     	;# 
   467  0396                     	;# 
   468  040C                     	;# 
   469  040D                     	;# 
   470  0415                     	;# 
   471  0416                     	;# 
   472  0417                     	;# 
   473  041C                     	;# 
   474  041D                     	;# 
   475  041E                     	;# 
   476  048D                     	;# 
   477  0491                     	;# 
   478  0492                     	;# 
   479  0493                     	;# 
   480  0493                     	;# 
   481  0494                     	;# 
   482  0495                     	;# 
   483  0496                     	;# 
   484  0497                     	;# 
   485  0791                     	;# 
   486  0792                     	;# 
   487  0793                     	;# 
   488  0794                     	;# 
   489  0795                     	;# 
   490  0798                     	;# 
   491  0799                     	;# 
   492  079A                     	;# 
   493  079B                     	;# 
   494  079C                     	;# 
   495  079D                     	;# 
   496  07A0                     	;# 
   497  07A1                     	;# 
   498  07A2                     	;# 
   499  07A3                     	;# 
   500  07A4                     	;# 
   501  07A5                     	;# 
   502  07A6                     	;# 
   503  07A7                     	;# 
   504  07A8                     	;# 
   505  07A9                     	;# 
   506  07AA                     	;# 
   507  07AB                     	;# 
   508  07AC                     	;# 
   509  07AD                     	;# 
   510  07AE                     	;# 
   511  07AF                     	;# 
   512  07B0                     	;# 
   513  07B1                     	;# 
   514  07B2                     	;# 
   515  07B3                     	;# 
   516  07B4                     	;# 
   517  07B5                     	;# 
   518  07B6                     	;# 
   519  07B7                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  000D                     	;# 
   545  000E                     	;# 
   546  000F                     	;# 
   547  0010                     	;# 
   548  0011                     	;# 
   549  0012                     	;# 
   550  0013                     	;# 
   551  0014                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  008F                     	;# 
   567  0090                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0093                     	;# 
   571  0094                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  010C                     	;# 
   584  010D                     	;# 
   585  010E                     	;# 
   586  010F                     	;# 
   587  0110                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  011F                     	;# 
   602  018C                     	;# 
   603  0190                     	;# 
   604  0191                     	;# 
   605  0191                     	;# 
   606  0192                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0194                     	;# 
   611  0195                     	;# 
   612  0196                     	;# 
   613  0199                     	;# 
   614  0199                     	;# 
   615  019A                     	;# 
   616  019A                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019C                     	;# 
   622  019C                     	;# 
   623  019D                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  020D                     	;# 
   630  0211                     	;# 
   631  0211                     	;# 
   632  0212                     	;# 
   633  0212                     	;# 
   634  0213                     	;# 
   635  0213                     	;# 
   636  0214                     	;# 
   637  0214                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0216                     	;# 
   643  0217                     	;# 
   644  0217                     	;# 
   645  0219                     	;# 
   646  021A                     	;# 
   647  021B                     	;# 
   648  021C                     	;# 
   649  021D                     	;# 
   650  021E                     	;# 
   651  021F                     	;# 
   652  028C                     	;# 
   653  028D                     	;# 
   654  0291                     	;# 
   655  0291                     	;# 
   656  0292                     	;# 
   657  0293                     	;# 
   658  0294                     	;# 
   659  0295                     	;# 
   660  0295                     	;# 
   661  0296                     	;# 
   662  0298                     	;# 
   663  0298                     	;# 
   664  0299                     	;# 
   665  029A                     	;# 
   666  029B                     	;# 
   667  029C                     	;# 
   668  029C                     	;# 
   669  029D                     	;# 
   670  029E                     	;# 
   671  029F                     	;# 
   672  030C                     	;# 
   673  030D                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0314                     	;# 
   679  0315                     	;# 
   680  0315                     	;# 
   681  0316                     	;# 
   682  0318                     	;# 
   683  0318                     	;# 
   684  0319                     	;# 
   685  031A                     	;# 
   686  031C                     	;# 
   687  031C                     	;# 
   688  031D                     	;# 
   689  031E                     	;# 
   690  038C                     	;# 
   691  038D                     	;# 
   692  0394                     	;# 
   693  0395                     	;# 
   694  0396                     	;# 
   695  040C                     	;# 
   696  040D                     	;# 
   697  0415                     	;# 
   698  0416                     	;# 
   699  0417                     	;# 
   700  041C                     	;# 
   701  041D                     	;# 
   702  041E                     	;# 
   703  048D                     	;# 
   704  0491                     	;# 
   705  0492                     	;# 
   706  0493                     	;# 
   707  0493                     	;# 
   708  0494                     	;# 
   709  0495                     	;# 
   710  0496                     	;# 
   711  0497                     	;# 
   712  0791                     	;# 
   713  0792                     	;# 
   714  0793                     	;# 
   715  0794                     	;# 
   716  0795                     	;# 
   717  0798                     	;# 
   718  0799                     	;# 
   719  079A                     	;# 
   720  079B                     	;# 
   721  079C                     	;# 
   722  079D                     	;# 
   723  07A0                     	;# 
   724  07A1                     	;# 
   725  07A2                     	;# 
   726  07A3                     	;# 
   727  07A4                     	;# 
   728  07A5                     	;# 
   729  07A6                     	;# 
   730  07A7                     	;# 
   731  07A8                     	;# 
   732  07A9                     	;# 
   733  07AA                     	;# 
   734  07AB                     	;# 
   735  07AC                     	;# 
   736  07AD                     	;# 
   737  07AE                     	;# 
   738  07AF                     	;# 
   739  07B0                     	;# 
   740  07B1                     	;# 
   741  07B2                     	;# 
   742  07B3                     	;# 
   743  07B4                     	;# 
   744  07B5                     	;# 
   745  07B6                     	;# 
   746  07B7                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001E                     	;# 
   789  001F                     	;# 
   790  008C                     	;# 
   791  008D                     	;# 
   792  008E                     	;# 
   793  008F                     	;# 
   794  0090                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0093                     	;# 
   798  0094                     	;# 
   799  0095                     	;# 
   800  0096                     	;# 
   801  0097                     	;# 
   802  0098                     	;# 
   803  0099                     	;# 
   804  009A                     	;# 
   805  009B                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  010C                     	;# 
   811  010D                     	;# 
   812  010E                     	;# 
   813  010F                     	;# 
   814  0110                     	;# 
   815  0111                     	;# 
   816  0112                     	;# 
   817  0113                     	;# 
   818  0114                     	;# 
   819  0115                     	;# 
   820  0116                     	;# 
   821  0117                     	;# 
   822  0118                     	;# 
   823  0119                     	;# 
   824  011A                     	;# 
   825  011B                     	;# 
   826  011D                     	;# 
   827  011E                     	;# 
   828  011F                     	;# 
   829  018C                     	;# 
   830  0190                     	;# 
   831  0191                     	;# 
   832  0191                     	;# 
   833  0192                     	;# 
   834  0193                     	;# 
   835  0193                     	;# 
   836  0193                     	;# 
   837  0194                     	;# 
   838  0195                     	;# 
   839  0196                     	;# 
   840  0199                     	;# 
   841  0199                     	;# 
   842  019A                     	;# 
   843  019A                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019B                     	;# 
   848  019C                     	;# 
   849  019C                     	;# 
   850  019D                     	;# 
   851  019D                     	;# 
   852  019E                     	;# 
   853  019E                     	;# 
   854  019F                     	;# 
   855  019F                     	;# 
   856  020D                     	;# 
   857  0211                     	;# 
   858  0211                     	;# 
   859  0212                     	;# 
   860  0212                     	;# 
   861  0213                     	;# 
   862  0213                     	;# 
   863  0214                     	;# 
   864  0214                     	;# 
   865  0215                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0216                     	;# 
   869  0216                     	;# 
   870  0217                     	;# 
   871  0217                     	;# 
   872  0219                     	;# 
   873  021A                     	;# 
   874  021B                     	;# 
   875  021C                     	;# 
   876  021D                     	;# 
   877  021E                     	;# 
   878  021F                     	;# 
   879  028C                     	;# 
   880  028D                     	;# 
   881  0291                     	;# 
   882  0291                     	;# 
   883  0292                     	;# 
   884  0293                     	;# 
   885  0294                     	;# 
   886  0295                     	;# 
   887  0295                     	;# 
   888  0296                     	;# 
   889  0298                     	;# 
   890  0298                     	;# 
   891  0299                     	;# 
   892  029A                     	;# 
   893  029B                     	;# 
   894  029C                     	;# 
   895  029C                     	;# 
   896  029D                     	;# 
   897  029E                     	;# 
   898  029F                     	;# 
   899  030C                     	;# 
   900  030D                     	;# 
   901  0311                     	;# 
   902  0311                     	;# 
   903  0312                     	;# 
   904  0313                     	;# 
   905  0314                     	;# 
   906  0315                     	;# 
   907  0315                     	;# 
   908  0316                     	;# 
   909  0318                     	;# 
   910  0318                     	;# 
   911  0319                     	;# 
   912  031A                     	;# 
   913  031C                     	;# 
   914  031C                     	;# 
   915  031D                     	;# 
   916  031E                     	;# 
   917  038C                     	;# 
   918  038D                     	;# 
   919  0394                     	;# 
   920  0395                     	;# 
   921  0396                     	;# 
   922  040C                     	;# 
   923  040D                     	;# 
   924  0415                     	;# 
   925  0416                     	;# 
   926  0417                     	;# 
   927  041C                     	;# 
   928  041D                     	;# 
   929  041E                     	;# 
   930  048D                     	;# 
   931  0491                     	;# 
   932  0492                     	;# 
   933  0493                     	;# 
   934  0493                     	;# 
   935  0494                     	;# 
   936  0495                     	;# 
   937  0496                     	;# 
   938  0497                     	;# 
   939  0791                     	;# 
   940  0792                     	;# 
   941  0793                     	;# 
   942  0794                     	;# 
   943  0795                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  079B                     	;# 
   948  079C                     	;# 
   949  079D                     	;# 
   950  07A0                     	;# 
   951  07A1                     	;# 
   952  07A2                     	;# 
   953  07A3                     	;# 
   954  07A4                     	;# 
   955  07A5                     	;# 
   956  07A6                     	;# 
   957  07A7                     	;# 
   958  07A8                     	;# 
   959  07A9                     	;# 
   960  07AA                     	;# 
   961  07AB                     	;# 
   962  07AC                     	;# 
   963  07AD                     	;# 
   964  07AE                     	;# 
   965  07AF                     	;# 
   966  07B0                     	;# 
   967  07B1                     	;# 
   968  07B2                     	;# 
   969  07B3                     	;# 
   970  07B4                     	;# 
   971  07B5                     	;# 
   972  07B6                     	;# 
   973  07B7                     	;# 
   974  0FE4                     	;# 
   975  0FE5                     	;# 
   976  0FE6                     	;# 
   977  0FE7                     	;# 
   978  0FE8                     	;# 
   979  0FE9                     	;# 
   980  0FEA                     	;# 
   981  0FEB                     	;# 
   982  0FED                     	;# 
   983  0FEE                     	;# 
   984  0FEF                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0008                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  000F                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0016                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001B                     	;# 
  1014  001C                     	;# 
  1015  001E                     	;# 
  1016  001F                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  008F                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0094                     	;# 
  1026  0095                     	;# 
  1027  0096                     	;# 
  1028  0097                     	;# 
  1029  0098                     	;# 
  1030  0099                     	;# 
  1031  009A                     	;# 
  1032  009B                     	;# 
  1033  009B                     	;# 
  1034  009C                     	;# 
  1035  009D                     	;# 
  1036  009E                     	;# 
  1037  010C                     	;# 
  1038  010D                     	;# 
  1039  010E                     	;# 
  1040  010F                     	;# 
  1041  0110                     	;# 
  1042  0111                     	;# 
  1043  0112                     	;# 
  1044  0113                     	;# 
  1045  0114                     	;# 
  1046  0115                     	;# 
  1047  0116                     	;# 
  1048  0117                     	;# 
  1049  0118                     	;# 
  1050  0119                     	;# 
  1051  011A                     	;# 
  1052  011B                     	;# 
  1053  011D                     	;# 
  1054  011E                     	;# 
  1055  011F                     	;# 
  1056  018C                     	;# 
  1057  0190                     	;# 
  1058  0191                     	;# 
  1059  0191                     	;# 
  1060  0192                     	;# 
  1061  0193                     	;# 
  1062  0193                     	;# 
  1063  0193                     	;# 
  1064  0194                     	;# 
  1065  0195                     	;# 
  1066  0196                     	;# 
  1067  0199                     	;# 
  1068  0199                     	;# 
  1069  019A                     	;# 
  1070  019A                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019C                     	;# 
  1076  019C                     	;# 
  1077  019D                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  020D                     	;# 
  1084  0211                     	;# 
  1085  0211                     	;# 
  1086  0212                     	;# 
  1087  0212                     	;# 
  1088  0213                     	;# 
  1089  0213                     	;# 
  1090  0214                     	;# 
  1091  0214                     	;# 
  1092  0215                     	;# 
  1093  0215                     	;# 
  1094  0215                     	;# 
  1095  0216                     	;# 
  1096  0216                     	;# 
  1097  0217                     	;# 
  1098  0217                     	;# 
  1099  0219                     	;# 
  1100  021A                     	;# 
  1101  021B                     	;# 
  1102  021C                     	;# 
  1103  021D                     	;# 
  1104  021E                     	;# 
  1105  021F                     	;# 
  1106  028C                     	;# 
  1107  028D                     	;# 
  1108  0291                     	;# 
  1109  0291                     	;# 
  1110  0292                     	;# 
  1111  0293                     	;# 
  1112  0294                     	;# 
  1113  0295                     	;# 
  1114  0295                     	;# 
  1115  0296                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  029B                     	;# 
  1121  029C                     	;# 
  1122  029C                     	;# 
  1123  029D                     	;# 
  1124  029E                     	;# 
  1125  029F                     	;# 
  1126  030C                     	;# 
  1127  030D                     	;# 
  1128  0311                     	;# 
  1129  0311                     	;# 
  1130  0312                     	;# 
  1131  0313                     	;# 
  1132  0314                     	;# 
  1133  0315                     	;# 
  1134  0315                     	;# 
  1135  0316                     	;# 
  1136  0318                     	;# 
  1137  0318                     	;# 
  1138  0319                     	;# 
  1139  031A                     	;# 
  1140  031C                     	;# 
  1141  031C                     	;# 
  1142  031D                     	;# 
  1143  031E                     	;# 
  1144  038C                     	;# 
  1145  038D                     	;# 
  1146  0394                     	;# 
  1147  0395                     	;# 
  1148  0396                     	;# 
  1149  040C                     	;# 
  1150  040D                     	;# 
  1151  0415                     	;# 
  1152  0416                     	;# 
  1153  0417                     	;# 
  1154  041C                     	;# 
  1155  041D                     	;# 
  1156  041E                     	;# 
  1157  048D                     	;# 
  1158  0491                     	;# 
  1159  0492                     	;# 
  1160  0493                     	;# 
  1161  0493                     	;# 
  1162  0494                     	;# 
  1163  0495                     	;# 
  1164  0496                     	;# 
  1165  0497                     	;# 
  1166  0791                     	;# 
  1167  0792                     	;# 
  1168  0793                     	;# 
  1169  0794                     	;# 
  1170  0795                     	;# 
  1171  0798                     	;# 
  1172  0799                     	;# 
  1173  079A                     	;# 
  1174  079B                     	;# 
  1175  079C                     	;# 
  1176  079D                     	;# 
  1177  07A0                     	;# 
  1178  07A1                     	;# 
  1179  07A2                     	;# 
  1180  07A3                     	;# 
  1181  07A4                     	;# 
  1182  07A5                     	;# 
  1183  07A6                     	;# 
  1184  07A7                     	;# 
  1185  07A8                     	;# 
  1186  07A9                     	;# 
  1187  07AA                     	;# 
  1188  07AB                     	;# 
  1189  07AC                     	;# 
  1190  07AD                     	;# 
  1191  07AE                     	;# 
  1192  07AF                     	;# 
  1193  07B0                     	;# 
  1194  07B1                     	;# 
  1195  07B2                     	;# 
  1196  07B3                     	;# 
  1197  07B4                     	;# 
  1198  07B5                     	;# 
  1199  07B6                     	;# 
  1200  07B7                     	;# 
  1201  0FE4                     	;# 
  1202  0FE5                     	;# 
  1203  0FE6                     	;# 
  1204  0FE7                     	;# 
  1205  0FE8                     	;# 
  1206  0FE9                     	;# 
  1207  0FEA                     	;# 
  1208  0FEB                     	;# 
  1209  0FED                     	;# 
  1210  0FEE                     	;# 
  1211  0FEF                     	;# 
  1212  0000                     	;# 
  1213  0001                     	;# 
  1214  0002                     	;# 
  1215  0003                     	;# 
  1216  0004                     	;# 
  1217  0005                     	;# 
  1218  0006                     	;# 
  1219  0007                     	;# 
  1220  0008                     	;# 
  1221  0009                     	;# 
  1222  000A                     	;# 
  1223  000B                     	;# 
  1224  000C                     	;# 
  1225  000D                     	;# 
  1226  000E                     	;# 
  1227  000F                     	;# 
  1228  0010                     	;# 
  1229  0011                     	;# 
  1230  0012                     	;# 
  1231  0013                     	;# 
  1232  0014                     	;# 
  1233  0015                     	;# 
  1234  0016                     	;# 
  1235  0016                     	;# 
  1236  0017                     	;# 
  1237  0018                     	;# 
  1238  0019                     	;# 
  1239  001A                     	;# 
  1240  001B                     	;# 
  1241  001C                     	;# 
  1242  001E                     	;# 
  1243  001F                     	;# 
  1244  008C                     	;# 
  1245  008D                     	;# 
  1246  008E                     	;# 
  1247  008F                     	;# 
  1248  0090                     	;# 
  1249  0091                     	;# 
  1250  0092                     	;# 
  1251  0093                     	;# 
  1252  0094                     	;# 
  1253  0095                     	;# 
  1254  0096                     	;# 
  1255  0097                     	;# 
  1256  0098                     	;# 
  1257  0099                     	;# 
  1258  009A                     	;# 
  1259  009B                     	;# 
  1260  009B                     	;# 
  1261  009C                     	;# 
  1262  009D                     	;# 
  1263  009E                     	;# 
  1264  010C                     	;# 
  1265  010D                     	;# 
  1266  010E                     	;# 
  1267  010F                     	;# 
  1268  0110                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  011A                     	;# 
  1279  011B                     	;# 
  1280  011D                     	;# 
  1281  011E                     	;# 
  1282  011F                     	;# 
  1283  018C                     	;# 
  1284  0190                     	;# 
  1285  0191                     	;# 
  1286  0191                     	;# 
  1287  0192                     	;# 
  1288  0193                     	;# 
  1289  0193                     	;# 
  1290  0193                     	;# 
  1291  0194                     	;# 
  1292  0195                     	;# 
  1293  0196                     	;# 
  1294  0199                     	;# 
  1295  0199                     	;# 
  1296  019A                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  019C                     	;# 
  1304  019D                     	;# 
  1305  019D                     	;# 
  1306  019E                     	;# 
  1307  019E                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  020D                     	;# 
  1311  0211                     	;# 
  1312  0211                     	;# 
  1313  0212                     	;# 
  1314  0212                     	;# 
  1315  0213                     	;# 
  1316  0213                     	;# 
  1317  0214                     	;# 
  1318  0214                     	;# 
  1319  0215                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0216                     	;# 
  1323  0216                     	;# 
  1324  0217                     	;# 
  1325  0217                     	;# 
  1326  0219                     	;# 
  1327  021A                     	;# 
  1328  021B                     	;# 
  1329  021C                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  0291                     	;# 
  1336  0291                     	;# 
  1337  0292                     	;# 
  1338  0293                     	;# 
  1339  0294                     	;# 
  1340  0295                     	;# 
  1341  0295                     	;# 
  1342  0296                     	;# 
  1343  0298                     	;# 
  1344  0298                     	;# 
  1345  0299                     	;# 
  1346  029A                     	;# 
  1347  029B                     	;# 
  1348  029C                     	;# 
  1349  029C                     	;# 
  1350  029D                     	;# 
  1351  029E                     	;# 
  1352  029F                     	;# 
  1353  030C                     	;# 
  1354  030D                     	;# 
  1355  0311                     	;# 
  1356  0311                     	;# 
  1357  0312                     	;# 
  1358  0313                     	;# 
  1359  0314                     	;# 
  1360  0315                     	;# 
  1361  0315                     	;# 
  1362  0316                     	;# 
  1363  0318                     	;# 
  1364  0318                     	;# 
  1365  0319                     	;# 
  1366  031A                     	;# 
  1367  031C                     	;# 
  1368  031C                     	;# 
  1369  031D                     	;# 
  1370  031E                     	;# 
  1371  038C                     	;# 
  1372  038D                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  040C                     	;# 
  1377  040D                     	;# 
  1378  0415                     	;# 
  1379  0416                     	;# 
  1380  0417                     	;# 
  1381  041C                     	;# 
  1382  041D                     	;# 
  1383  041E                     	;# 
  1384  048D                     	;# 
  1385  0491                     	;# 
  1386  0492                     	;# 
  1387  0493                     	;# 
  1388  0493                     	;# 
  1389  0494                     	;# 
  1390  0495                     	;# 
  1391  0496                     	;# 
  1392  0497                     	;# 
  1393  0791                     	;# 
  1394  0792                     	;# 
  1395  0793                     	;# 
  1396  0794                     	;# 
  1397  0795                     	;# 
  1398  0798                     	;# 
  1399  0799                     	;# 
  1400  079A                     	;# 
  1401  079B                     	;# 
  1402  079C                     	;# 
  1403  079D                     	;# 
  1404  07A0                     	;# 
  1405  07A1                     	;# 
  1406  07A2                     	;# 
  1407  07A3                     	;# 
  1408  07A4                     	;# 
  1409  07A5                     	;# 
  1410  07A6                     	;# 
  1411  07A7                     	;# 
  1412  07A8                     	;# 
  1413  07A9                     	;# 
  1414  07AA                     	;# 
  1415  07AB                     	;# 
  1416  07AC                     	;# 
  1417  07AD                     	;# 
  1418  07AE                     	;# 
  1419  07AF                     	;# 
  1420  07B0                     	;# 
  1421  07B1                     	;# 
  1422  07B2                     	;# 
  1423  07B3                     	;# 
  1424  07B4                     	;# 
  1425  07B5                     	;# 
  1426  07B6                     	;# 
  1427  07B7                     	;# 
  1428  0FE4                     	;# 
  1429  0FE5                     	;# 
  1430  0FE6                     	;# 
  1431  0FE7                     	;# 
  1432  0FE8                     	;# 
  1433  0FE9                     	;# 
  1434  0FEA                     	;# 
  1435  0FEB                     	;# 
  1436  0FED                     	;# 
  1437  0FEE                     	;# 
  1438  0FEF                     	;# 
  1439  0000                     	;# 
  1440  0001                     	;# 
  1441  0002                     	;# 
  1442  0003                     	;# 
  1443  0004                     	;# 
  1444  0005                     	;# 
  1445  0006                     	;# 
  1446  0007                     	;# 
  1447  0008                     	;# 
  1448  0009                     	;# 
  1449  000A                     	;# 
  1450  000B                     	;# 
  1451  000C                     	;# 
  1452  000D                     	;# 
  1453  000E                     	;# 
  1454  000F                     	;# 
  1455  0010                     	;# 
  1456  0011                     	;# 
  1457  0012                     	;# 
  1458  0013                     	;# 
  1459  0014                     	;# 
  1460  0015                     	;# 
  1461  0016                     	;# 
  1462  0016                     	;# 
  1463  0017                     	;# 
  1464  0018                     	;# 
  1465  0019                     	;# 
  1466  001A                     	;# 
  1467  001B                     	;# 
  1468  001C                     	;# 
  1469  001E                     	;# 
  1470  001F                     	;# 
  1471  008C                     	;# 
  1472  008D                     	;# 
  1473  008E                     	;# 
  1474  008F                     	;# 
  1475  0090                     	;# 
  1476  0091                     	;# 
  1477  0092                     	;# 
  1478  0093                     	;# 
  1479  0094                     	;# 
  1480  0095                     	;# 
  1481  0096                     	;# 
  1482  0097                     	;# 
  1483  0098                     	;# 
  1484  0099                     	;# 
  1485  009A                     	;# 
  1486  009B                     	;# 
  1487  009B                     	;# 
  1488  009C                     	;# 
  1489  009D                     	;# 
  1490  009E                     	;# 
  1491  010C                     	;# 
  1492  010D                     	;# 
  1493  010E                     	;# 
  1494  010F                     	;# 
  1495  0110                     	;# 
  1496  0111                     	;# 
  1497  0112                     	;# 
  1498  0113                     	;# 
  1499  0114                     	;# 
  1500  0115                     	;# 
  1501  0116                     	;# 
  1502  0117                     	;# 
  1503  0118                     	;# 
  1504  0119                     	;# 
  1505  011A                     	;# 
  1506  011B                     	;# 
  1507  011D                     	;# 
  1508  011E                     	;# 
  1509  011F                     	;# 
  1510  018C                     	;# 
  1511  0190                     	;# 
  1512  0191                     	;# 
  1513  0191                     	;# 
  1514  0192                     	;# 
  1515  0193                     	;# 
  1516  0193                     	;# 
  1517  0193                     	;# 
  1518  0194                     	;# 
  1519  0195                     	;# 
  1520  0196                     	;# 
  1521  0199                     	;# 
  1522  0199                     	;# 
  1523  019A                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019C                     	;# 
  1530  019C                     	;# 
  1531  019D                     	;# 
  1532  019D                     	;# 
  1533  019E                     	;# 
  1534  019E                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  020D                     	;# 
  1538  0211                     	;# 
  1539  0211                     	;# 
  1540  0212                     	;# 
  1541  0212                     	;# 
  1542  0213                     	;# 
  1543  0213                     	;# 
  1544  0214                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0216                     	;# 
  1550  0216                     	;# 
  1551  0217                     	;# 
  1552  0217                     	;# 
  1553  0219                     	;# 
  1554  021A                     	;# 
  1555  021B                     	;# 
  1556  021C                     	;# 
  1557  021D                     	;# 
  1558  021E                     	;# 
  1559  021F                     	;# 
  1560  028C                     	;# 
  1561  028D                     	;# 
  1562  0291                     	;# 
  1563  0291                     	;# 
  1564  0292                     	;# 
  1565  0293                     	;# 
  1566  0294                     	;# 
  1567  0295                     	;# 
  1568  0295                     	;# 
  1569  0296                     	;# 
  1570  0298                     	;# 
  1571  0298                     	;# 
  1572  0299                     	;# 
  1573  029A                     	;# 
  1574  029B                     	;# 
  1575  029C                     	;# 
  1576  029C                     	;# 
  1577  029D                     	;# 
  1578  029E                     	;# 
  1579  029F                     	;# 
  1580  030C                     	;# 
  1581  030D                     	;# 
  1582  0311                     	;# 
  1583  0311                     	;# 
  1584  0312                     	;# 
  1585  0313                     	;# 
  1586  0314                     	;# 
  1587  0315                     	;# 
  1588  0315                     	;# 
  1589  0316                     	;# 
  1590  0318                     	;# 
  1591  0318                     	;# 
  1592  0319                     	;# 
  1593  031A                     	;# 
  1594  031C                     	;# 
  1595  031C                     	;# 
  1596  031D                     	;# 
  1597  031E                     	;# 
  1598  038C                     	;# 
  1599  038D                     	;# 
  1600  0394                     	;# 
  1601  0395                     	;# 
  1602  0396                     	;# 
  1603  040C                     	;# 
  1604  040D                     	;# 
  1605  0415                     	;# 
  1606  0416                     	;# 
  1607  0417                     	;# 
  1608  041C                     	;# 
  1609  041D                     	;# 
  1610  041E                     	;# 
  1611  048D                     	;# 
  1612  0491                     	;# 
  1613  0492                     	;# 
  1614  0493                     	;# 
  1615  0493                     	;# 
  1616  0494                     	;# 
  1617  0495                     	;# 
  1618  0496                     	;# 
  1619  0497                     	;# 
  1620  0791                     	;# 
  1621  0792                     	;# 
  1622  0793                     	;# 
  1623  0794                     	;# 
  1624  0795                     	;# 
  1625  0798                     	;# 
  1626  0799                     	;# 
  1627  079A                     	;# 
  1628  079B                     	;# 
  1629  079C                     	;# 
  1630  079D                     	;# 
  1631  07A0                     	;# 
  1632  07A1                     	;# 
  1633  07A2                     	;# 
  1634  07A3                     	;# 
  1635  07A4                     	;# 
  1636  07A5                     	;# 
  1637  07A6                     	;# 
  1638  07A7                     	;# 
  1639  07A8                     	;# 
  1640  07A9                     	;# 
  1641  07AA                     	;# 
  1642  07AB                     	;# 
  1643  07AC                     	;# 
  1644  07AD                     	;# 
  1645  07AE                     	;# 
  1646  07AF                     	;# 
  1647  07B0                     	;# 
  1648  07B1                     	;# 
  1649  07B2                     	;# 
  1650  07B3                     	;# 
  1651  07B4                     	;# 
  1652  07B5                     	;# 
  1653  07B6                     	;# 
  1654  07B7                     	;# 
  1655  0FE4                     	;# 
  1656  0FE5                     	;# 
  1657  0FE6                     	;# 
  1658  0FE7                     	;# 
  1659  0FE8                     	;# 
  1660  0FE9                     	;# 
  1661  0FEA                     	;# 
  1662  0FEB                     	;# 
  1663  0FED                     	;# 
  1664  0FEE                     	;# 
  1665  0FEF                     	;# 
  1666  0000                     	;# 
  1667  0001                     	;# 
  1668  0002                     	;# 
  1669  0003                     	;# 
  1670  0004                     	;# 
  1671  0005                     	;# 
  1672  0006                     	;# 
  1673  0007                     	;# 
  1674  0008                     	;# 
  1675  0009                     	;# 
  1676  000A                     	;# 
  1677  000B                     	;# 
  1678  000C                     	;# 
  1679  000D                     	;# 
  1680  000E                     	;# 
  1681  000F                     	;# 
  1682  0010                     	;# 
  1683  0011                     	;# 
  1684  0012                     	;# 
  1685  0013                     	;# 
  1686  0014                     	;# 
  1687  0015                     	;# 
  1688  0016                     	;# 
  1689  0016                     	;# 
  1690  0017                     	;# 
  1691  0018                     	;# 
  1692  0019                     	;# 
  1693  001A                     	;# 
  1694  001B                     	;# 
  1695  001C                     	;# 
  1696  001E                     	;# 
  1697  001F                     	;# 
  1698  008C                     	;# 
  1699  008D                     	;# 
  1700  008E                     	;# 
  1701  008F                     	;# 
  1702  0090                     	;# 
  1703  0091                     	;# 
  1704  0092                     	;# 
  1705  0093                     	;# 
  1706  0094                     	;# 
  1707  0095                     	;# 
  1708  0096                     	;# 
  1709  0097                     	;# 
  1710  0098                     	;# 
  1711  0099                     	;# 
  1712  009A                     	;# 
  1713  009B                     	;# 
  1714  009B                     	;# 
  1715  009C                     	;# 
  1716  009D                     	;# 
  1717  009E                     	;# 
  1718  010C                     	;# 
  1719  010D                     	;# 
  1720  010E                     	;# 
  1721  010F                     	;# 
  1722  0110                     	;# 
  1723  0111                     	;# 
  1724  0112                     	;# 
  1725  0113                     	;# 
  1726  0114                     	;# 
  1727  0115                     	;# 
  1728  0116                     	;# 
  1729  0117                     	;# 
  1730  0118                     	;# 
  1731  0119                     	;# 
  1732  011A                     	;# 
  1733  011B                     	;# 
  1734  011D                     	;# 
  1735  011E                     	;# 
  1736  011F                     	;# 
  1737  018C                     	;# 
  1738  0190                     	;# 
  1739  0191                     	;# 
  1740  0191                     	;# 
  1741  0192                     	;# 
  1742  0193                     	;# 
  1743  0193                     	;# 
  1744  0193                     	;# 
  1745  0194                     	;# 
  1746  0195                     	;# 
  1747  0196                     	;# 
  1748  0199                     	;# 
  1749  0199                     	;# 
  1750  019A                     	;# 
  1751  019A                     	;# 
  1752  019B                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  019C                     	;# 
  1758  019D                     	;# 
  1759  019D                     	;# 
  1760  019E                     	;# 
  1761  019E                     	;# 
  1762  019F                     	;# 
  1763  019F                     	;# 
  1764  020D                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  0212                     	;# 
  1768  0212                     	;# 
  1769  0213                     	;# 
  1770  0213                     	;# 
  1771  0214                     	;# 
  1772  0214                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0219                     	;# 
  1781  021A                     	;# 
  1782  021B                     	;# 
  1783  021C                     	;# 
  1784  021D                     	;# 
  1785  021E                     	;# 
  1786  021F                     	;# 
  1787  028C                     	;# 
  1788  028D                     	;# 
  1789  0291                     	;# 
  1790  0291                     	;# 
  1791  0292                     	;# 
  1792  0293                     	;# 
  1793  0294                     	;# 
  1794  0295                     	;# 
  1795  0295                     	;# 
  1796  0296                     	;# 
  1797  0298                     	;# 
  1798  0298                     	;# 
  1799  0299                     	;# 
  1800  029A                     	;# 
  1801  029B                     	;# 
  1802  029C                     	;# 
  1803  029C                     	;# 
  1804  029D                     	;# 
  1805  029E                     	;# 
  1806  029F                     	;# 
  1807  030C                     	;# 
  1808  030D                     	;# 
  1809  0311                     	;# 
  1810  0311                     	;# 
  1811  0312                     	;# 
  1812  0313                     	;# 
  1813  0314                     	;# 
  1814  0315                     	;# 
  1815  0315                     	;# 
  1816  0316                     	;# 
  1817  0318                     	;# 
  1818  0318                     	;# 
  1819  0319                     	;# 
  1820  031A                     	;# 
  1821  031C                     	;# 
  1822  031C                     	;# 
  1823  031D                     	;# 
  1824  031E                     	;# 
  1825  038C                     	;# 
  1826  038D                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  040C                     	;# 
  1831  040D                     	;# 
  1832  0415                     	;# 
  1833  0416                     	;# 
  1834  0417                     	;# 
  1835  041C                     	;# 
  1836  041D                     	;# 
  1837  041E                     	;# 
  1838  048D                     	;# 
  1839  0491                     	;# 
  1840  0492                     	;# 
  1841  0493                     	;# 
  1842  0493                     	;# 
  1843  0494                     	;# 
  1844  0495                     	;# 
  1845  0496                     	;# 
  1846  0497                     	;# 
  1847  0791                     	;# 
  1848  0792                     	;# 
  1849  0793                     	;# 
  1850  0794                     	;# 
  1851  0795                     	;# 
  1852  0798                     	;# 
  1853  0799                     	;# 
  1854  079A                     	;# 
  1855  079B                     	;# 
  1856  079C                     	;# 
  1857  079D                     	;# 
  1858  07A0                     	;# 
  1859  07A1                     	;# 
  1860  07A2                     	;# 
  1861  07A3                     	;# 
  1862  07A4                     	;# 
  1863  07A5                     	;# 
  1864  07A6                     	;# 
  1865  07A7                     	;# 
  1866  07A8                     	;# 
  1867  07A9                     	;# 
  1868  07AA                     	;# 
  1869  07AB                     	;# 
  1870  07AC                     	;# 
  1871  07AD                     	;# 
  1872  07AE                     	;# 
  1873  07AF                     	;# 
  1874  07B0                     	;# 
  1875  07B1                     	;# 
  1876  07B2                     	;# 
  1877  07B3                     	;# 
  1878  07B4                     	;# 
  1879  07B5                     	;# 
  1880  07B6                     	;# 
  1881  07B7                     	;# 
  1882  0FE4                     	;# 
  1883  0FE5                     	;# 
  1884  0FE6                     	;# 
  1885  0FE7                     	;# 
  1886  0FE8                     	;# 
  1887  0FE9                     	;# 
  1888  0FEA                     	;# 
  1889  0FEB                     	;# 
  1890  0FED                     	;# 
  1891  0FEE                     	;# 
  1892  0FEF                     	;# 
  1893  0000                     	;# 
  1894  0001                     	;# 
  1895  0002                     	;# 
  1896  0003                     	;# 
  1897  0004                     	;# 
  1898  0005                     	;# 
  1899  0006                     	;# 
  1900  0007                     	;# 
  1901  0008                     	;# 
  1902  0009                     	;# 
  1903  000A                     	;# 
  1904  000B                     	;# 
  1905  000C                     	;# 
  1906  000D                     	;# 
  1907  000E                     	;# 
  1908  000F                     	;# 
  1909  0010                     	;# 
  1910  0011                     	;# 
  1911  0012                     	;# 
  1912  0013                     	;# 
  1913  0014                     	;# 
  1914  0015                     	;# 
  1915  0016                     	;# 
  1916  0016                     	;# 
  1917  0017                     	;# 
  1918  0018                     	;# 
  1919  0019                     	;# 
  1920  001A                     	;# 
  1921  001B                     	;# 
  1922  001C                     	;# 
  1923  001E                     	;# 
  1924  001F                     	;# 
  1925  008C                     	;# 
  1926  008D                     	;# 
  1927  008E                     	;# 
  1928  008F                     	;# 
  1929  0090                     	;# 
  1930  0091                     	;# 
  1931  0092                     	;# 
  1932  0093                     	;# 
  1933  0094                     	;# 
  1934  0095                     	;# 
  1935  0096                     	;# 
  1936  0097                     	;# 
  1937  0098                     	;# 
  1938  0099                     	;# 
  1939  009A                     	;# 
  1940  009B                     	;# 
  1941  009B                     	;# 
  1942  009C                     	;# 
  1943  009D                     	;# 
  1944  009E                     	;# 
  1945  010C                     	;# 
  1946  010D                     	;# 
  1947  010E                     	;# 
  1948  010F                     	;# 
  1949  0110                     	;# 
  1950  0111                     	;# 
  1951  0112                     	;# 
  1952  0113                     	;# 
  1953  0114                     	;# 
  1954  0115                     	;# 
  1955  0116                     	;# 
  1956  0117                     	;# 
  1957  0118                     	;# 
  1958  0119                     	;# 
  1959  011A                     	;# 
  1960  011B                     	;# 
  1961  011D                     	;# 
  1962  011E                     	;# 
  1963  011F                     	;# 
  1964  018C                     	;# 
  1965  0190                     	;# 
  1966  0191                     	;# 
  1967  0191                     	;# 
  1968  0192                     	;# 
  1969  0193                     	;# 
  1970  0193                     	;# 
  1971  0193                     	;# 
  1972  0194                     	;# 
  1973  0195                     	;# 
  1974  0196                     	;# 
  1975  0199                     	;# 
  1976  0199                     	;# 
  1977  019A                     	;# 
  1978  019A                     	;# 
  1979  019B                     	;# 
  1980  019B                     	;# 
  1981  019B                     	;# 
  1982  019B                     	;# 
  1983  019C                     	;# 
  1984  019C                     	;# 
  1985  019D                     	;# 
  1986  019D                     	;# 
  1987  019E                     	;# 
  1988  019E                     	;# 
  1989  019F                     	;# 
  1990  019F                     	;# 
  1991  020D                     	;# 
  1992  0211                     	;# 
  1993  0211                     	;# 
  1994  0212                     	;# 
  1995  0212                     	;# 
  1996  0213                     	;# 
  1997  0213                     	;# 
  1998  0214                     	;# 
  1999  0214                     	;# 
  2000  0215                     	;# 
  2001  0215                     	;# 
  2002  0215                     	;# 
  2003  0216                     	;# 
  2004  0216                     	;# 
  2005  0217                     	;# 
  2006  0217                     	;# 
  2007  0219                     	;# 
  2008  021A                     	;# 
  2009  021B                     	;# 
  2010  021C                     	;# 
  2011  021D                     	;# 
  2012  021E                     	;# 
  2013  021F                     	;# 
  2014  028C                     	;# 
  2015  028D                     	;# 
  2016  0291                     	;# 
  2017  0291                     	;# 
  2018  0292                     	;# 
  2019  0293                     	;# 
  2020  0294                     	;# 
  2021  0295                     	;# 
  2022  0295                     	;# 
  2023  0296                     	;# 
  2024  0298                     	;# 
  2025  0298                     	;# 
  2026  0299                     	;# 
  2027  029A                     	;# 
  2028  029B                     	;# 
  2029  029C                     	;# 
  2030  029C                     	;# 
  2031  029D                     	;# 
  2032  029E                     	;# 
  2033  029F                     	;# 
  2034  030C                     	;# 
  2035  030D                     	;# 
  2036  0311                     	;# 
  2037  0311                     	;# 
  2038  0312                     	;# 
  2039  0313                     	;# 
  2040  0314                     	;# 
  2041  0315                     	;# 
  2042  0315                     	;# 
  2043  0316                     	;# 
  2044  0318                     	;# 
  2045  0318                     	;# 
  2046  0319                     	;# 
  2047  031A                     	;# 
  2048  031C                     	;# 
  2049  031C                     	;# 
  2050  031D                     	;# 
  2051  031E                     	;# 
  2052  038C                     	;# 
  2053  038D                     	;# 
  2054  0394                     	;# 
  2055  0395                     	;# 
  2056  0396                     	;# 
  2057  040C                     	;# 
  2058  040D                     	;# 
  2059  0415                     	;# 
  2060  0416                     	;# 
  2061  0417                     	;# 
  2062  041C                     	;# 
  2063  041D                     	;# 
  2064  041E                     	;# 
  2065  048D                     	;# 
  2066  0491                     	;# 
  2067  0492                     	;# 
  2068  0493                     	;# 
  2069  0493                     	;# 
  2070  0494                     	;# 
  2071  0495                     	;# 
  2072  0496                     	;# 
  2073  0497                     	;# 
  2074  0791                     	;# 
  2075  0792                     	;# 
  2076  0793                     	;# 
  2077  0794                     	;# 
  2078  0795                     	;# 
  2079  0798                     	;# 
  2080  0799                     	;# 
  2081  079A                     	;# 
  2082  079B                     	;# 
  2083  079C                     	;# 
  2084  079D                     	;# 
  2085  07A0                     	;# 
  2086  07A1                     	;# 
  2087  07A2                     	;# 
  2088  07A3                     	;# 
  2089  07A4                     	;# 
  2090  07A5                     	;# 
  2091  07A6                     	;# 
  2092  07A7                     	;# 
  2093  07A8                     	;# 
  2094  07A9                     	;# 
  2095  07AA                     	;# 
  2096  07AB                     	;# 
  2097  07AC                     	;# 
  2098  07AD                     	;# 
  2099  07AE                     	;# 
  2100  07AF                     	;# 
  2101  07B0                     	;# 
  2102  07B1                     	;# 
  2103  07B2                     	;# 
  2104  07B3                     	;# 
  2105  07B4                     	;# 
  2106  07B5                     	;# 
  2107  07B6                     	;# 
  2108  07B7                     	;# 
  2109  0FE4                     	;# 
  2110  0FE5                     	;# 
  2111  0FE6                     	;# 
  2112  0FE7                     	;# 
  2113  0FE8                     	;# 
  2114  0FE9                     	;# 
  2115  0FEA                     	;# 
  2116  0FEB                     	;# 
  2117  0FED                     	;# 
  2118  0FEE                     	;# 
  2119  0FEF                     	;# 
  2120  0000                     	;# 
  2121  0001                     	;# 
  2122  0002                     	;# 
  2123  0003                     	;# 
  2124  0004                     	;# 
  2125  0005                     	;# 
  2126  0006                     	;# 
  2127  0007                     	;# 
  2128  0008                     	;# 
  2129  0009                     	;# 
  2130  000A                     	;# 
  2131  000B                     	;# 
  2132  000C                     	;# 
  2133  000D                     	;# 
  2134  000E                     	;# 
  2135  000F                     	;# 
  2136  0010                     	;# 
  2137  0011                     	;# 
  2138  0012                     	;# 
  2139  0013                     	;# 
  2140  0014                     	;# 
  2141  0015                     	;# 
  2142  0016                     	;# 
  2143  0016                     	;# 
  2144  0017                     	;# 
  2145  0018                     	;# 
  2146  0019                     	;# 
  2147  001A                     	;# 
  2148  001B                     	;# 
  2149  001C                     	;# 
  2150  001E                     	;# 
  2151  001F                     	;# 
  2152  008C                     	;# 
  2153  008D                     	;# 
  2154  008E                     	;# 
  2155  008F                     	;# 
  2156  0090                     	;# 
  2157  0091                     	;# 
  2158  0092                     	;# 
  2159  0093                     	;# 
  2160  0094                     	;# 
  2161  0095                     	;# 
  2162  0096                     	;# 
  2163  0097                     	;# 
  2164  0098                     	;# 
  2165  0099                     	;# 
  2166  009A                     	;# 
  2167  009B                     	;# 
  2168  009B                     	;# 
  2169  009C                     	;# 
  2170  009D                     	;# 
  2171  009E                     	;# 
  2172  010C                     	;# 
  2173  010D                     	;# 
  2174  010E                     	;# 
  2175  010F                     	;# 
  2176  0110                     	;# 
  2177  0111                     	;# 
  2178  0112                     	;# 
  2179  0113                     	;# 
  2180  0114                     	;# 
  2181  0115                     	;# 
  2182  0116                     	;# 
  2183  0117                     	;# 
  2184  0118                     	;# 
  2185  0119                     	;# 
  2186  011A                     	;# 
  2187  011B                     	;# 
  2188  011D                     	;# 
  2189  011E                     	;# 
  2190  011F                     	;# 
  2191  018C                     	;# 
  2192  0190                     	;# 
  2193  0191                     	;# 
  2194  0191                     	;# 
  2195  0192                     	;# 
  2196  0193                     	;# 
  2197  0193                     	;# 
  2198  0193                     	;# 
  2199  0194                     	;# 
  2200  0195                     	;# 
  2201  0196                     	;# 
  2202  0199                     	;# 
  2203  0199                     	;# 
  2204  019A                     	;# 
  2205  019A                     	;# 
  2206  019B                     	;# 
  2207  019B                     	;# 
  2208  019B                     	;# 
  2209  019B                     	;# 
  2210  019C                     	;# 
  2211  019C                     	;# 
  2212  019D                     	;# 
  2213  019D                     	;# 
  2214  019E                     	;# 
  2215  019E                     	;# 
  2216  019F                     	;# 
  2217  019F                     	;# 
  2218  020D                     	;# 
  2219  0211                     	;# 
  2220  0211                     	;# 
  2221  0212                     	;# 
  2222  0212                     	;# 
  2223  0213                     	;# 
  2224  0213                     	;# 
  2225  0214                     	;# 
  2226  0214                     	;# 
  2227  0215                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0216                     	;# 
  2231  0216                     	;# 
  2232  0217                     	;# 
  2233  0217                     	;# 
  2234  0219                     	;# 
  2235  021A                     	;# 
  2236  021B                     	;# 
  2237  021C                     	;# 
  2238  021D                     	;# 
  2239  021E                     	;# 
  2240  021F                     	;# 
  2241  028C                     	;# 
  2242  028D                     	;# 
  2243  0291                     	;# 
  2244  0291                     	;# 
  2245  0292                     	;# 
  2246  0293                     	;# 
  2247  0294                     	;# 
  2248  0295                     	;# 
  2249  0295                     	;# 
  2250  0296                     	;# 
  2251  0298                     	;# 
  2252  0298                     	;# 
  2253  0299                     	;# 
  2254  029A                     	;# 
  2255  029B                     	;# 
  2256  029C                     	;# 
  2257  029C                     	;# 
  2258  029D                     	;# 
  2259  029E                     	;# 
  2260  029F                     	;# 
  2261  030C                     	;# 
  2262  030D                     	;# 
  2263  0311                     	;# 
  2264  0311                     	;# 
  2265  0312                     	;# 
  2266  0313                     	;# 
  2267  0314                     	;# 
  2268  0315                     	;# 
  2269  0315                     	;# 
  2270  0316                     	;# 
  2271  0318                     	;# 
  2272  0318                     	;# 
  2273  0319                     	;# 
  2274  031A                     	;# 
  2275  031C                     	;# 
  2276  031C                     	;# 
  2277  031D                     	;# 
  2278  031E                     	;# 
  2279  038C                     	;# 
  2280  038D                     	;# 
  2281  0394                     	;# 
  2282  0395                     	;# 
  2283  0396                     	;# 
  2284  040C                     	;# 
  2285  040D                     	;# 
  2286  0415                     	;# 
  2287  0416                     	;# 
  2288  0417                     	;# 
  2289  041C                     	;# 
  2290  041D                     	;# 
  2291  041E                     	;# 
  2292  048D                     	;# 
  2293  0491                     	;# 
  2294  0492                     	;# 
  2295  0493                     	;# 
  2296  0493                     	;# 
  2297  0494                     	;# 
  2298  0495                     	;# 
  2299  0496                     	;# 
  2300  0497                     	;# 
  2301  0791                     	;# 
  2302  0792                     	;# 
  2303  0793                     	;# 
  2304  0794                     	;# 
  2305  0795                     	;# 
  2306  0798                     	;# 
  2307  0799                     	;# 
  2308  079A                     	;# 
  2309  079B                     	;# 
  2310  079C                     	;# 
  2311  079D                     	;# 
  2312  07A0                     	;# 
  2313  07A1                     	;# 
  2314  07A2                     	;# 
  2315  07A3                     	;# 
  2316  07A4                     	;# 
  2317  07A5                     	;# 
  2318  07A6                     	;# 
  2319  07A7                     	;# 
  2320  07A8                     	;# 
  2321  07A9                     	;# 
  2322  07AA                     	;# 
  2323  07AB                     	;# 
  2324  07AC                     	;# 
  2325  07AD                     	;# 
  2326  07AE                     	;# 
  2327  07AF                     	;# 
  2328  07B0                     	;# 
  2329  07B1                     	;# 
  2330  07B2                     	;# 
  2331  07B3                     	;# 
  2332  07B4                     	;# 
  2333  07B5                     	;# 
  2334  07B6                     	;# 
  2335  07B7                     	;# 
  2336  0FE4                     	;# 
  2337  0FE5                     	;# 
  2338  0FE6                     	;# 
  2339  0FE7                     	;# 
  2340  0FE8                     	;# 
  2341  0FE9                     	;# 
  2342  0FEA                     	;# 
  2343  0FEB                     	;# 
  2344  0FED                     	;# 
  2345  0FEE                     	;# 
  2346  0FEF                     	;# 
  2347  0000                     	;# 
  2348  0001                     	;# 
  2349  0002                     	;# 
  2350  0003                     	;# 
  2351  0004                     	;# 
  2352  0005                     	;# 
  2353  0006                     	;# 
  2354  0007                     	;# 
  2355  0008                     	;# 
  2356  0009                     	;# 
  2357  000A                     	;# 
  2358  000B                     	;# 
  2359  000C                     	;# 
  2360  000D                     	;# 
  2361  000E                     	;# 
  2362  000F                     	;# 
  2363  0010                     	;# 
  2364  0011                     	;# 
  2365  0012                     	;# 
  2366  0013                     	;# 
  2367  0014                     	;# 
  2368  0015                     	;# 
  2369  0016                     	;# 
  2370  0016                     	;# 
  2371  0017                     	;# 
  2372  0018                     	;# 
  2373  0019                     	;# 
  2374  001A                     	;# 
  2375  001B                     	;# 
  2376  001C                     	;# 
  2377  001E                     	;# 
  2378  001F                     	;# 
  2379  008C                     	;# 
  2380  008D                     	;# 
  2381  008E                     	;# 
  2382  008F                     	;# 
  2383  0090                     	;# 
  2384  0091                     	;# 
  2385  0092                     	;# 
  2386  0093                     	;# 
  2387  0094                     	;# 
  2388  0095                     	;# 
  2389  0096                     	;# 
  2390  0097                     	;# 
  2391  0098                     	;# 
  2392  0099                     	;# 
  2393  009A                     	;# 
  2394  009B                     	;# 
  2395  009B                     	;# 
  2396  009C                     	;# 
  2397  009D                     	;# 
  2398  009E                     	;# 
  2399  010C                     	;# 
  2400  010D                     	;# 
  2401  010E                     	;# 
  2402  010F                     	;# 
  2403  0110                     	;# 
  2404  0111                     	;# 
  2405  0112                     	;# 
  2406  0113                     	;# 
  2407  0114                     	;# 
  2408  0115                     	;# 
  2409  0116                     	;# 
  2410  0117                     	;# 
  2411  0118                     	;# 
  2412  0119                     	;# 
  2413  011A                     	;# 
  2414  011B                     	;# 
  2415  011D                     	;# 
  2416  011E                     	;# 
  2417  011F                     	;# 
  2418  018C                     	;# 
  2419  0190                     	;# 
  2420  0191                     	;# 
  2421  0191                     	;# 
  2422  0192                     	;# 
  2423  0193                     	;# 
  2424  0193                     	;# 
  2425  0193                     	;# 
  2426  0194                     	;# 
  2427  0195                     	;# 
  2428  0196                     	;# 
  2429  0199                     	;# 
  2430  0199                     	;# 
  2431  019A                     	;# 
  2432  019A                     	;# 
  2433  019B                     	;# 
  2434  019B                     	;# 
  2435  019B                     	;# 
  2436  019B                     	;# 
  2437  019C                     	;# 
  2438  019C                     	;# 
  2439  019D                     	;# 
  2440  019D                     	;# 
  2441  019E                     	;# 
  2442  019E                     	;# 
  2443  019F                     	;# 
  2444  019F                     	;# 
  2445  020D                     	;# 
  2446  0211                     	;# 
  2447  0211                     	;# 
  2448  0212                     	;# 
  2449  0212                     	;# 
  2450  0213                     	;# 
  2451  0213                     	;# 
  2452  0214                     	;# 
  2453  0214                     	;# 
  2454  0215                     	;# 
  2455  0215                     	;# 
  2456  0215                     	;# 
  2457  0216                     	;# 
  2458  0216                     	;# 
  2459  0217                     	;# 
  2460  0217                     	;# 
  2461  0219                     	;# 
  2462  021A                     	;# 
  2463  021B                     	;# 
  2464  021C                     	;# 
  2465  021D                     	;# 
  2466  021E                     	;# 
  2467  021F                     	;# 
  2468  028C                     	;# 
  2469  028D                     	;# 
  2470  0291                     	;# 
  2471  0291                     	;# 
  2472  0292                     	;# 
  2473  0293                     	;# 
  2474  0294                     	;# 
  2475  0295                     	;# 
  2476  0295                     	;# 
  2477  0296                     	;# 
  2478  0298                     	;# 
  2479  0298                     	;# 
  2480  0299                     	;# 
  2481  029A                     	;# 
  2482  029B                     	;# 
  2483  029C                     	;# 
  2484  029C                     	;# 
  2485  029D                     	;# 
  2486  029E                     	;# 
  2487  029F                     	;# 
  2488  030C                     	;# 
  2489  030D                     	;# 
  2490  0311                     	;# 
  2491  0311                     	;# 
  2492  0312                     	;# 
  2493  0313                     	;# 
  2494  0314                     	;# 
  2495  0315                     	;# 
  2496  0315                     	;# 
  2497  0316                     	;# 
  2498  0318                     	;# 
  2499  0318                     	;# 
  2500  0319                     	;# 
  2501  031A                     	;# 
  2502  031C                     	;# 
  2503  031C                     	;# 
  2504  031D                     	;# 
  2505  031E                     	;# 
  2506  038C                     	;# 
  2507  038D                     	;# 
  2508  0394                     	;# 
  2509  0395                     	;# 
  2510  0396                     	;# 
  2511  040C                     	;# 
  2512  040D                     	;# 
  2513  0415                     	;# 
  2514  0416                     	;# 
  2515  0417                     	;# 
  2516  041C                     	;# 
  2517  041D                     	;# 
  2518  041E                     	;# 
  2519  048D                     	;# 
  2520  0491                     	;# 
  2521  0492                     	;# 
  2522  0493                     	;# 
  2523  0493                     	;# 
  2524  0494                     	;# 
  2525  0495                     	;# 
  2526  0496                     	;# 
  2527  0497                     	;# 
  2528  0791                     	;# 
  2529  0792                     	;# 
  2530  0793                     	;# 
  2531  0794                     	;# 
  2532  0795                     	;# 
  2533  0798                     	;# 
  2534  0799                     	;# 
  2535  079A                     	;# 
  2536  079B                     	;# 
  2537  079C                     	;# 
  2538  079D                     	;# 
  2539  07A0                     	;# 
  2540  07A1                     	;# 
  2541  07A2                     	;# 
  2542  07A3                     	;# 
  2543  07A4                     	;# 
  2544  07A5                     	;# 
  2545  07A6                     	;# 
  2546  07A7                     	;# 
  2547  07A8                     	;# 
  2548  07A9                     	;# 
  2549  07AA                     	;# 
  2550  07AB                     	;# 
  2551  07AC                     	;# 
  2552  07AD                     	;# 
  2553  07AE                     	;# 
  2554  07AF                     	;# 
  2555  07B0                     	;# 
  2556  07B1                     	;# 
  2557  07B2                     	;# 
  2558  07B3                     	;# 
  2559  07B4                     	;# 
  2560  07B5                     	;# 
  2561  07B6                     	;# 
  2562  07B7                     	;# 
  2563  0FE4                     	;# 
  2564  0FE5                     	;# 
  2565  0FE6                     	;# 
  2566  0FE7                     	;# 
  2567  0FE8                     	;# 
  2568  0FE9                     	;# 
  2569  0FEA                     	;# 
  2570  0FEB                     	;# 
  2571  0FED                     	;# 
  2572  0FEE                     	;# 
  2573  0FEF                     	;# 
  2574  000B                     _INTCONbits	set	11
  2575  0011                     _PIR1bits	set	17
  2576  0014                     _PIR4bits	set	20
  2577  000C                     _PORTA	set	12
  2578  000D                     _PORTB	set	13
  2579  000E                     _PORTC	set	14
  2580  000F                     _PORTD	set	15
  2581  0010                     _PORTE	set	16
  2582  001C                     _T2CONbits	set	28
  2583  0015                     _TMR0	set	21
  2584  001B                     _PR2	set	27
  2585  005F                     _GIE	set	95
  2586  009D                     _ADCON0bits	set	157
  2587  009E                     _ADCON1bits	set	158
  2588  009C                     _ADRESH	set	156
  2589  009B                     _ADRESL	set	155
  2590  0095                     _OPTION_REGbits	set	149
  2591  0099                     _OSCCONbits	set	153
  2592  008C                     _TRISA	set	140
  2593  008D                     _TRISB	set	141
  2594  008E                     _TRISC	set	142
  2595  008F                     _TRISD	set	143
  2596  0090                     _TRISE	set	144
  2597  0097                     _WDTCONbits	set	151
  2598  011D                     _APFCONbits	set	285
  2599  010C                     _LATA	set	268
  2600  010D                     _LATB	set	269
  2601  010D                     _LATBbits	set	269
  2602  010E                     _LATC	set	270
  2603  010E                     _LATCbits	set	270
  2604  010F                     _LATD	set	271
  2605  010F                     _LATDbits	set	271
  2606  0110                     _LATE	set	272
  2607  0110                     _LATEbits	set	272
  2608  018C                     _ANSELA	set	396
  2609  0190                     _ANSELE	set	400
  2610  0212                     _SSP1ADD	set	530
  2611  0211                     _SSP1BUF	set	529
  2612  0215                     _SSP1CON1bits	set	533
  2613  0216                     _SSP1CON2	set	534
  2614  0216                     _SSP1CON2bits	set	534
  2615  0214                     _SSP1STAT	set	532
  2616  0214                     _SSP1STATbits	set	532
  2617  021A                     _SSP2ADD	set	538
  2618  0219                     _SSP2BUF	set	537
  2619  021D                     _SSP2CON1bits	set	541
  2620  021E                     _SSP2CON2	set	542
  2621  021E                     _SSP2CON2bits	set	542
  2622  021C                     _SSP2STAT	set	540
  2623  021C                     _SSP2STATbits	set	540
  2624  020D                     _WPUB	set	525
  2625  029A                     _CCP2CONbits	set	666
  2626  0298                     _CCPR2L	set	664
  2627  029E                     _CCPTMRS0bits	set	670
  2628  028C                     _PORTF	set	652
  2629  028C                     _PORTFbits	set	652
  2630  028D                     _PORTG	set	653
  2631  0313                     _CCP3CONbits	set	787
  2632  0311                     _CCPR3L	set	785
  2633  030C                     _TRISF	set	780
  2634  030D                     _TRISG	set	781
  2635  038C                     _LATF	set	908
  2636  038D                     _LATG	set	909
  2637  040C                     _ANSELF	set	1036
  2638  040D                     _ANSELG	set	1037
  2639  0417                     _T4CONbits	set	1047
  2640  0416                     _PR4	set	1046
  2641  048D                     _WPUG	set	1165
  2642                           
  2643                           ; #config settings
  2644  0000                     
  2645                           	psect	cinit
  2646  0026                     start_initialization:	
  2647  0026                     __initialization:	
  2648                           
  2649                           ; Clear objects allocated to BANK1
  2650  0026  30A0               	movlw	low __pbssBANK1
  2651  0027  0084               	movwf	4
  2652  0028  3000               	movlw	high __pbssBANK1
  2653  0029  0085               	movwf	5
  2654  002A  3045               	movlw	69
  2655  002B  3197  27EC  3180   	fcall	clear_ram0
  2656                           
  2657                           ; Clear objects allocated to BANK2
  2658  002E  3020               	movlw	low __pbssBANK2
  2659  002F  0084               	movwf	4
  2660  0030  3001               	movlw	high __pbssBANK2
  2661  0031  0085               	movwf	5
  2662  0032  3012               	movlw	18
  2663  0033  3197  27EC         	fcall	clear_ram0
  2664  0035                     end_of_initialization:	
  2665                           ;End of C runtime variable initialization code
  2666                           
  2667  0035                     __end_of__initialization:	
  2668  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2669  0036  0020               	movlb	0
  2670  0037  3197  2FF9         	ljmp	_main	;jump to C main() function
  2671                           
  2672                           	psect	bssBANK1
  2673  00A0                     __pbssBANK1:	
  2674  00A0                     _cmd:	
  2675  00A0                     	ds	17
  2676  00B1                     _timer0_millis:	
  2677  00B1                     	ds	4
  2678  00B5                     _Timer:	
  2679  00B5                     	ds	48
  2680                           
  2681                           	psect	bssBANK2
  2682  0120                     __pbssBANK2:	
  2683  0120                     _buttons:	
  2684  0120                     	ds	18
  2685                           
  2686                           	psect	clrtext
  2687  17EC                     clear_ram0:	
  2688                           ;	Called with FSR0 containing the base address, and
  2689                           ;	WREG with the size to clear
  2690                           
  2691  17EC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2692  17ED                     clrloop0:	
  2693  17ED  0180               	clrf	0	;clear RAM location pointed to by FSR
  2694  17EE  3101               	addfsr 0,1
  2695  17EF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2696  17F0  2FED               	goto	clrloop0	;have we reached the end yet?
  2697  17F1  3400               	retlw	0	;all done for this memory range, return
  2698                           
  2699                           	psect	cstackBANK1
  2700  00E5                     __pcstackBANK1:	
  2701  00E5                     processButtons@isPressed:	
  2702                           
  2703                           ; 2 bytes @ 0x0
  2704  00E5                     	ds	2
  2705  00E7                     processButtons@i:	
  2706                           
  2707                           ; 1 bytes @ 0x2
  2708  00E7                     	ds	1
  2709                           
  2710                           	psect	cstackCOMMON
  2711  0070                     __pcstackCOMMON:	
  2712  0070                     ?_apInit:	
  2713  0070                     ?_apMain:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0070                     ?_I2CStart:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0070                     ?_I2CSend:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0070                     ?_I2CAck:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0070                     ?_I2CStop:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0070                     ?_I2CWait:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0070                     ?_init_millis:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0070                     ?_I2CWait_2:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0070                     ?_pwmStart_ccp3:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0070                     ?_pwmStart_ccp2:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0070                     ?_timerEventStart:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0070                     ?_pwmStop_ccp3:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0070                     ?_pwmStop_ccp2:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0070                     ?_timerGetTick:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0070                     ?_processButtons:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0070                     ?_initPort:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0070                     ?_initTimer:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0070                     ?_buttons_init:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0070                     ?_timerProc:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ?_timerInterruptProc:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ?_main:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ?_I2CStart_2:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_I2CStop_2:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     ?_I2CAck_2:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     ?_I2CSend_2:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788  0070                     ?_adcInit:	
  2789                           ; 1 bytes @ 0x0
  2790                           
  2791  0070                     ?_event_btn_Expose:	
  2792                           ; 1 bytes @ 0x0
  2793                           
  2794  0070                     ?_event_btn_Stop:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797  0070                     ?_event_timer_Button:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  0070                     ?_event_expose:	
  2801                           ; 1 bytes @ 0x0
  2802                           
  2803  0070                     ?_event_display:	
  2804                           ; 1 bytes @ 0x0
  2805                           
  2806  0070                     ?_event_rst:	
  2807                           ; 1 bytes @ 0x0
  2808                           
  2809  0070                     ?_event_anodeCurrent:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812  0070                     ?_isr:	
  2813                           ; 1 bytes @ 0x0
  2814                           
  2815  0070                     timerInterruptProc@ch_count:	
  2816                           ; 1 bytes @ 0x0
  2817                           
  2818                           
  2819                           ; 1 bytes @ 0x0
  2820  0070                     	ds	1
  2821  0071                     ??_timerInterruptProc:	
  2822                           
  2823                           ; 1 bytes @ 0x1
  2824  0071                     	ds	8
  2825  0079                     timerInterruptProc@time:	
  2826                           
  2827                           ; 1 bytes @ 0x9
  2828  0079                     	ds	1
  2829  007A                     timerInterruptProc@i:	
  2830                           
  2831                           ; 1 bytes @ 0xA
  2832  007A                     	ds	1
  2833  007B                     ??_isr:	
  2834                           
  2835                           ; 1 bytes @ 0xB
  2836  007B                     	ds	2
  2837                           
  2838                           	psect	cstackBANK0
  2839  0020                     __pcstackBANK0:	
  2840  0020                     ?___ftge:	
  2841  0020                     ??_init_millis:	
  2842                           ; 1 bit 
  2843                           
  2844  0020                     ??_pwmStart_ccp3:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0020                     ??_pwmStart_ccp2:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0020                     ??_timerEventStart:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0020                     ??_pwmStop_ccp3:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0020                     ??_pwmStop_ccp2:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0020                     ?_timerTickClear:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0020                     ??_timerGetTick:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0020                     ??_initPort:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0020                     ??_initTimer:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0020                     ?_timerInit:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0020                     ??_buttons_init:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0020                     ?_buttons_setFuncs:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0020                     ??_adcInit:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0020                     ?___bmul:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0020                     ?_adcRead:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0020                     ?___wmul:	
  2890                           ; 2 bytes @ 0x0
  2891                           
  2892  0020                     ?___lwdiv:	
  2893                           ; 2 bytes @ 0x0
  2894                           
  2895  0020                     ?___ftpack:	
  2896                           ; 2 bytes @ 0x0
  2897                           
  2898  0020                     ?_millis:	
  2899                           ; 3 bytes @ 0x0
  2900                           
  2901  0020                     ?_get_millis:	
  2902                           ; 4 bytes @ 0x0
  2903                           
  2904  0020                     timerEventStart@time:	
  2905                           ; 4 bytes @ 0x0
  2906                           
  2907  0020                     timerGetTick@time:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0020                     timerTickClear@start:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0020                     ___bmul@multiplicand:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0020                     buttons_setFuncs@btn1:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0020                     timerInit@timeSet:	
  2920                           ; 2 bytes @ 0x0
  2921                           
  2922  0020                     ___wmul@multiplier:	
  2923                           ; 2 bytes @ 0x0
  2924                           
  2925  0020                     ___lwdiv@divisor:	
  2926                           ; 2 bytes @ 0x0
  2927                           
  2928  0020                     ___ftpack@arg:	
  2929                           ; 2 bytes @ 0x0
  2930                           
  2931  0020                     ___ftge@ff1:	
  2932                           ; 3 bytes @ 0x0
  2933                           
  2934  0020                     get_millis@now:	
  2935                           ; 3 bytes @ 0x0
  2936                           
  2937                           
  2938                           ; 4 bytes @ 0x0
  2939  0020                     	ds	1
  2940  0021                     ??_timerTickClear:	
  2941  0021                     ??___bmul:	
  2942                           ; 1 bytes @ 0x1
  2943                           
  2944                           
  2945                           ; 1 bytes @ 0x1
  2946  0021                     	ds	1
  2947  0022                     ??_adcRead:	
  2948  0022                     timerTickClear@time:	
  2949                           ; 1 bytes @ 0x2
  2950                           
  2951  0022                     ___bmul@product:	
  2952                           ; 1 bytes @ 0x2
  2953                           
  2954  0022                     buttons_setFuncs@btn2:	
  2955                           ; 1 bytes @ 0x2
  2956                           
  2957  0022                     timerInit@func:	
  2958                           ; 2 bytes @ 0x2
  2959                           
  2960  0022                     ___wmul@multiplicand:	
  2961                           ; 2 bytes @ 0x2
  2962                           
  2963  0022                     ___lwdiv@dividend:	
  2964                           ; 2 bytes @ 0x2
  2965                           
  2966                           
  2967                           ; 2 bytes @ 0x2
  2968  0022                     	ds	1
  2969  0023                     ??_event_expose:	
  2970  0023                     ??_event_rst:	
  2971                           ; 1 bytes @ 0x3
  2972                           
  2973  0023                     adcRead@channel:	
  2974                           ; 1 bytes @ 0x3
  2975                           
  2976  0023                     ___bmul@multiplier:	
  2977                           ; 1 bytes @ 0x3
  2978                           
  2979  0023                     ___ftpack@exp:	
  2980                           ; 1 bytes @ 0x3
  2981                           
  2982  0023                     ___ftge@ff2:	
  2983                           ; 1 bytes @ 0x3
  2984                           
  2985                           
  2986                           ; 3 bytes @ 0x3
  2987  0023                     	ds	1
  2988  0024                     ??_millis:	
  2989  0024                     ??_timerInit:	
  2990                           ; 1 bytes @ 0x4
  2991                           
  2992  0024                     ??_buttons_setFuncs:	
  2993                           ; 1 bytes @ 0x4
  2994                           
  2995  0024                     ??___wmul:	
  2996                           ; 1 bytes @ 0x4
  2997                           
  2998  0024                     ??___lwdiv:	
  2999                           ; 1 bytes @ 0x4
  3000                           
  3001  0024                     timerInit@time:	
  3002                           ; 1 bytes @ 0x4
  3003                           
  3004  0024                     ___ftpack@sign:	
  3005                           ; 1 bytes @ 0x4
  3006                           
  3007  0024                     ___wmul@product:	
  3008                           ; 1 bytes @ 0x4
  3009                           
  3010  0024                     millis@ms:	
  3011                           ; 2 bytes @ 0x4
  3012                           
  3013  0024                     get_millis@prev_now:	
  3014                           ; 4 bytes @ 0x4
  3015                           
  3016                           
  3017                           ; 4 bytes @ 0x4
  3018  0024                     	ds	1
  3019  0025                     ??___ftpack:	
  3020  0025                     ___lwdiv@quotient:	
  3021                           ; 1 bytes @ 0x5
  3022                           
  3023                           
  3024                           ; 2 bytes @ 0x5
  3025  0025                     	ds	1
  3026  0026                     ??___ftge:	
  3027  0026                     ?___aldiv:	
  3028                           ; 1 bytes @ 0x6
  3029                           
  3030  0026                     ___aldiv@divisor:	
  3031                           ; 4 bytes @ 0x6
  3032                           
  3033                           
  3034                           ; 4 bytes @ 0x6
  3035  0026                     	ds	1
  3036  0027                     ___lwdiv@counter:	
  3037                           
  3038                           ; 1 bytes @ 0x7
  3039  0027                     	ds	1
  3040  0028                     ??_get_millis:	
  3041  0028                     ?___lwmod:	
  3042                           ; 1 bytes @ 0x8
  3043                           
  3044  0028                     ?___awtoft:	
  3045                           ; 2 bytes @ 0x8
  3046                           
  3047  0028                     ?___ftadd:	
  3048                           ; 3 bytes @ 0x8
  3049                           
  3050  0028                     ?___lwtoft:	
  3051                           ; 3 bytes @ 0x8
  3052                           
  3053  0028                     ___awtoft@c:	
  3054                           ; 3 bytes @ 0x8
  3055                           
  3056  0028                     ___lwmod@divisor:	
  3057                           ; 2 bytes @ 0x8
  3058                           
  3059  0028                     ___lwtoft@c:	
  3060                           ; 2 bytes @ 0x8
  3061                           
  3062  0028                     ___ftadd@f1:	
  3063                           ; 2 bytes @ 0x8
  3064                           
  3065                           
  3066                           ; 3 bytes @ 0x8
  3067  0028                     	ds	2
  3068  002A                     ___lwmod@dividend:	
  3069  002A                     ___aldiv@dividend:	
  3070                           ; 2 bytes @ 0xA
  3071                           
  3072                           
  3073                           ; 4 bytes @ 0xA
  3074  002A                     	ds	1
  3075  002B                     ??___awtoft:	
  3076  002B                     ??___lwtoft:	
  3077                           ; 1 bytes @ 0xB
  3078                           
  3079  002B                     ___ftadd@f2:	
  3080                           ; 1 bytes @ 0xB
  3081                           
  3082                           
  3083                           ; 3 bytes @ 0xB
  3084  002B                     	ds	1
  3085  002C                     ??___lwmod:	
  3086  002C                     ?___ftdiv:	
  3087                           ; 1 bytes @ 0xC
  3088                           
  3089  002C                     ___ftdiv@f2:	
  3090                           ; 3 bytes @ 0xC
  3091                           
  3092                           
  3093                           ; 3 bytes @ 0xC
  3094  002C                     	ds	1
  3095  002D                     ___awtoft@sign:	
  3096  002D                     ___lwmod@counter:	
  3097                           ; 1 bytes @ 0xD
  3098                           
  3099                           
  3100                           ; 1 bytes @ 0xD
  3101  002D                     	ds	1
  3102  002E                     ??___aldiv:	
  3103  002E                     ??___ftadd:	
  3104                           ; 1 bytes @ 0xE
  3105                           
  3106                           
  3107                           ; 1 bytes @ 0xE
  3108  002E                     	ds	1
  3109  002F                     ___aldiv@counter:	
  3110  002F                     ___ftdiv@f1:	
  3111                           ; 1 bytes @ 0xF
  3112                           
  3113                           
  3114                           ; 3 bytes @ 0xF
  3115  002F                     	ds	1
  3116  0030                     ??_I2CAck:	
  3117  0030                     ??_I2CWait:	
  3118                           ; 1 bytes @ 0x10
  3119                           
  3120  0030                     ??_I2CWait_2:	
  3121                           ; 1 bytes @ 0x10
  3122                           
  3123  0030                     ??_I2CAck_2:	
  3124                           ; 1 bytes @ 0x10
  3125                           
  3126  0030                     ___aldiv@sign:	
  3127                           ; 1 bytes @ 0x10
  3128                           
  3129  0030                     I2CAck@now:	
  3130                           ; 1 bytes @ 0x10
  3131                           
  3132  0030                     I2CWait@now:	
  3133                           ; 4 bytes @ 0x10
  3134                           
  3135  0030                     I2CAck_2@now:	
  3136                           ; 4 bytes @ 0x10
  3137                           
  3138  0030                     I2CWait_2@now:	
  3139                           ; 4 bytes @ 0x10
  3140                           
  3141                           
  3142                           ; 4 bytes @ 0x10
  3143  0030                     	ds	1
  3144  0031                     ___aldiv@quotient:	
  3145                           
  3146                           ; 4 bytes @ 0x11
  3147  0031                     	ds	1
  3148  0032                     ??___ftdiv:	
  3149  0032                     ___ftadd@sign:	
  3150                           ; 1 bytes @ 0x12
  3151                           
  3152                           
  3153                           ; 1 bytes @ 0x12
  3154  0032                     	ds	1
  3155  0033                     ___ftadd@exp2:	
  3156                           
  3157                           ; 1 bytes @ 0x13
  3158  0033                     	ds	1
  3159  0034                     ___ftadd@exp1:	
  3160  0034                     I2CAck@prev:	
  3161                           ; 1 bytes @ 0x14
  3162                           
  3163  0034                     I2CWait@prev:	
  3164                           ; 4 bytes @ 0x14
  3165                           
  3166  0034                     I2CAck_2@prev:	
  3167                           ; 4 bytes @ 0x14
  3168                           
  3169  0034                     I2CWait_2@prev:	
  3170                           ; 4 bytes @ 0x14
  3171                           
  3172                           
  3173                           ; 4 bytes @ 0x14
  3174  0034                     	ds	1
  3175  0035                     ?_I2CInit:	
  3176  0035                     ?_I2CInit_2:	
  3177                           ; 1 bytes @ 0x15
  3178                           
  3179  0035                     ?___ftsub:	
  3180                           ; 1 bytes @ 0x15
  3181                           
  3182  0035                     I2CInit@freq:	
  3183                           ; 3 bytes @ 0x15
  3184                           
  3185  0035                     I2CInit_2@freq:	
  3186                           ; 2 bytes @ 0x15
  3187                           
  3188  0035                     ___ftsub@f2:	
  3189                           ; 2 bytes @ 0x15
  3190                           
  3191                           
  3192                           ; 3 bytes @ 0x15
  3193  0035                     	ds	1
  3194  0036                     ___ftdiv@cntr:	
  3195                           
  3196                           ; 1 bytes @ 0x16
  3197  0036                     	ds	1
  3198  0037                     ??_I2CInit:	
  3199  0037                     ??_I2CInit_2:	
  3200                           ; 1 bytes @ 0x17
  3201                           
  3202  0037                     ___ftdiv@f3:	
  3203                           ; 1 bytes @ 0x17
  3204                           
  3205                           
  3206                           ; 3 bytes @ 0x17
  3207  0037                     	ds	1
  3208  0038                     ??_I2CStart:	
  3209  0038                     ??_I2CSend:	
  3210                           ; 1 bytes @ 0x18
  3211                           
  3212  0038                     ??_I2CStop:	
  3213                           ; 1 bytes @ 0x18
  3214                           
  3215  0038                     ??_I2CStart_2:	
  3216                           ; 1 bytes @ 0x18
  3217                           
  3218  0038                     ??_I2CStop_2:	
  3219                           ; 1 bytes @ 0x18
  3220                           
  3221  0038                     ??_I2CSend_2:	
  3222                           ; 1 bytes @ 0x18
  3223                           
  3224  0038                     I2CSend@dat:	
  3225                           ; 1 bytes @ 0x18
  3226                           
  3227  0038                     I2CSend_2@dat:	
  3228                           ; 1 bytes @ 0x18
  3229                           
  3230  0038                     ___ftsub@f1:	
  3231                           ; 1 bytes @ 0x18
  3232                           
  3233                           
  3234                           ; 3 bytes @ 0x18
  3235  0038                     	ds	1
  3236  0039                     ?_I2C_AS1115_Write:	
  3237  0039                     ?_I2C_DAC_Write:	
  3238                           ; 1 bytes @ 0x19
  3239                           
  3240  0039                     I2C_AS1115_Write@data:	
  3241                           ; 1 bytes @ 0x19
  3242                           
  3243  0039                     I2C_DAC_Write@data:	
  3244                           ; 1 bytes @ 0x19
  3245                           
  3246                           
  3247                           ; 1 bytes @ 0x19
  3248  0039                     	ds	1
  3249  003A                     ??_I2C_AS1115_Write:	
  3250  003A                     ??_I2C_DAC_Write:	
  3251                           ; 1 bytes @ 0x1A
  3252                           
  3253  003A                     I2C_AS1115_Write@cmd:	
  3254                           ; 1 bytes @ 0x1A
  3255                           
  3256  003A                     ___ftdiv@exp:	
  3257                           ; 1 bytes @ 0x1A
  3258                           
  3259                           
  3260                           ; 1 bytes @ 0x1A
  3261  003A                     	ds	1
  3262  003B                     ??___ftsub:	
  3263  003B                     ___ftdiv@sign:	
  3264                           ; 1 bytes @ 0x1B
  3265                           
  3266                           
  3267                           ; 1 bytes @ 0x1B
  3268  003B                     	ds	1
  3269  003C                     ?___ftmul:	
  3270  003C                     I2C_DAC_Write@address:	
  3271                           ; 3 bytes @ 0x1C
  3272                           
  3273  003C                     ___ftmul@f1:	
  3274                           ; 1 bytes @ 0x1C
  3275                           
  3276                           
  3277                           ; 3 bytes @ 0x1C
  3278  003C                     	ds	1
  3279  003D                     ??_event_btn_Stop:	
  3280                           
  3281                           ; 1 bytes @ 0x1D
  3282  003D                     	ds	1
  3283  003E                     event_btn_Stop@ret:	
  3284                           
  3285                           ; 1 bytes @ 0x1E
  3286  003E                     	ds	1
  3287  003F                     event_btn_Stop@temp:	
  3288  003F                     ___ftmul@f2:	
  3289                           ; 2 bytes @ 0x1F
  3290                           
  3291                           
  3292                           ; 3 bytes @ 0x1F
  3293  003F                     	ds	2
  3294  0041                     ??_apInit:	
  3295                           
  3296                           ; 1 bytes @ 0x21
  3297  0041                     	ds	1
  3298  0042                     ??___ftmul:	
  3299  0042                     apInit@D_temp:	
  3300                           ; 1 bytes @ 0x22
  3301                           
  3302                           
  3303                           ; 2 bytes @ 0x22
  3304  0042                     	ds	4
  3305  0046                     ___ftmul@exp:	
  3306                           
  3307                           ; 1 bytes @ 0x26
  3308  0046                     	ds	1
  3309  0047                     ___ftmul@f3_as_product:	
  3310                           
  3311                           ; 3 bytes @ 0x27
  3312  0047                     	ds	3
  3313  004A                     ___ftmul@cntr:	
  3314                           
  3315                           ; 1 bytes @ 0x2A
  3316  004A                     	ds	1
  3317  004B                     ___ftmul@sign:	
  3318                           
  3319                           ; 1 bytes @ 0x2B
  3320  004B                     	ds	1
  3321  004C                     ?___fttol:	
  3322  004C                     ___fttol@f1:	
  3323                           ; 4 bytes @ 0x2C
  3324                           
  3325                           
  3326                           ; 3 bytes @ 0x2C
  3327  004C                     	ds	4
  3328  0050                     ??___fttol:	
  3329                           
  3330                           ; 1 bytes @ 0x30
  3331  0050                     	ds	4
  3332  0054                     ___fttol@sign1:	
  3333                           
  3334                           ; 1 bytes @ 0x34
  3335  0054                     	ds	1
  3336  0055                     ___fttol@lval:	
  3337                           
  3338                           ; 4 bytes @ 0x35
  3339  0055                     	ds	4
  3340  0059                     ___fttol@exp1:	
  3341                           
  3342                           ; 1 bytes @ 0x39
  3343  0059                     	ds	1
  3344  005A                     ?_pwmInit_ccp3:	
  3345  005A                     ?_pwmInit_ccp2:	
  3346                           ; 1 bytes @ 0x3A
  3347                           
  3348  005A                     ?_disp_kv:	
  3349                           ; 1 bytes @ 0x3A
  3350                           
  3351  005A                     ?_disp_ma_result:	
  3352                           ; 1 bytes @ 0x3A
  3353                           
  3354  005A                     ?_adcTodac:	
  3355                           ; 1 bytes @ 0x3A
  3356                           
  3357  005A                     disp_ma_result@data:	
  3358                           ; 2 bytes @ 0x3A
  3359                           
  3360  005A                     disp_kv@data:	
  3361                           ; 2 bytes @ 0x3A
  3362                           
  3363  005A                     adcTodac@data:	
  3364                           ; 2 bytes @ 0x3A
  3365                           
  3366  005A                     pwmInit_ccp2@freq:	
  3367                           ; 2 bytes @ 0x3A
  3368                           
  3369  005A                     pwmInit_ccp3@freq:	
  3370                           ; 2 bytes @ 0x3A
  3371                           
  3372                           
  3373                           ; 2 bytes @ 0x3A
  3374  005A                     	ds	2
  3375  005C                     ??_adcTodac:	
  3376  005C                     ??_disp_kv:	
  3377                           ; 1 bytes @ 0x3C
  3378                           
  3379  005C                     ??_disp_ma_result:	
  3380                           ; 1 bytes @ 0x3C
  3381                           
  3382  005C                     adcTodac@temp:	
  3383                           ; 1 bytes @ 0x3C
  3384                           
  3385  005C                     pwmInit_ccp2@duty:	
  3386                           ; 3 bytes @ 0x3C
  3387                           
  3388  005C                     pwmInit_ccp3@duty:	
  3389                           ; 3 bytes @ 0x3C
  3390                           
  3391                           
  3392                           ; 3 bytes @ 0x3C
  3393  005C                     	ds	1
  3394  005D                     disp_ma_result@temp:	
  3395  005D                     disp_kv@temp:	
  3396                           ; 3 bytes @ 0x3D
  3397                           
  3398                           
  3399                           ; 3 bytes @ 0x3D
  3400  005D                     	ds	2
  3401  005F                     ??_pwmInit_ccp3:	
  3402  005F                     ??_pwmInit_ccp2:	
  3403                           ; 1 bytes @ 0x3F
  3404                           
  3405                           
  3406                           ; 1 bytes @ 0x3F
  3407  005F                     	ds	1
  3408  0060                     disp_ma_result@temp2:	
  3409  0060                     disp_kv@temp2:	
  3410                           ; 2 bytes @ 0x40
  3411                           
  3412                           
  3413                           ; 2 bytes @ 0x40
  3414  0060                     	ds	1
  3415  0061                     pwmInit_ccp2@ccpr1l_ccp1con:	
  3416  0061                     pwmInit_ccp3@ccpr3l_ccp3con:	
  3417                           ; 2 bytes @ 0x41
  3418                           
  3419                           
  3420                           ; 2 bytes @ 0x41
  3421  0061                     	ds	1
  3422  0062                     ??_event_display:	
  3423                           
  3424                           ; 1 bytes @ 0x42
  3425  0062                     	ds	1
  3426  0063                     ??_event_btn_Expose:	
  3427  0063                     ??_event_anodeCurrent:	
  3428                           ; 1 bytes @ 0x43
  3429                           
  3430                           
  3431                           ; 1 bytes @ 0x43
  3432  0063                     	ds	1
  3433  0064                     event_btn_Expose@ret:	
  3434                           
  3435                           ; 1 bytes @ 0x44
  3436  0064                     	ds	1
  3437  0065                     event_btn_Expose@temp:	
  3438                           
  3439                           ; 2 bytes @ 0x45
  3440  0065                     	ds	2
  3441  0067                     ?_processButton:	
  3442  0067                     processButton@isPressed:	
  3443                           ; 1 bytes @ 0x47
  3444                           
  3445                           
  3446                           ; 1 bytes @ 0x47
  3447  0067                     	ds	1
  3448  0068                     ??_processButton:	
  3449                           
  3450                           ; 1 bytes @ 0x48
  3451  0068                     	ds	4
  3452  006C                     processButton@button:	
  3453                           
  3454                           ; 1 bytes @ 0x4C
  3455  006C                     	ds	1
  3456  006D                     ??_processButtons:	
  3457                           
  3458                           ; 1 bytes @ 0x4D
  3459  006D                     	ds	2
  3460  006F                     ??_timerProc:	
  3461  006F                     ??_event_timer_Button:	
  3462                           ; 1 bytes @ 0x4F
  3463                           
  3464  006F                     timerProc@time:	
  3465                           ; 1 bytes @ 0x4F
  3466                           
  3467                           
  3468                           ; 1 bytes @ 0x4F
  3469  006F                     	ds	1
  3470  0070                     ??_apMain:	
  3471  0070                     ??_main:	
  3472                           ; 1 bytes @ 0x50
  3473                           
  3474                           
  3475                           	psect	maintext
  3476  17F9                     __pmaintext:	
  3477                           ; 1 bytes @ 0x50
  3478 ;;
  3479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3480 ;;
  3481 ;; *************** function _main *****************
  3482 ;; Defined at:
  3483 ;;		line 11 in file "main.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : B1F/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels required when called:   12
  3503 ;; This function calls:
  3504 ;;		_apInit
  3505 ;;		_apMain
  3506 ;; This function is called by:
  3507 ;;		Startup code after reset
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _main
  3513  17F9                     _main:	
  3514                           
  3515                           ;main.c: 13: apInit();
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3519  17F9  3184  2408  3197   	fcall	_apInit
  3520                           
  3521                           ;main.c: 15: apMain();
  3522  17FC  3188  20F2         	fcall	_apMain
  3523  17FE  3180  2824         	ljmp	start
  3524  1800                     __end_of_main:	
  3525                           
  3526                           	psect	text1
  3527  08F2                     __ptext1:	
  3528 ;; *************** function _apMain *****************
  3529 ;; Defined at:
  3530 ;;		line 236 in file "ap.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:   11
  3551 ;; This function calls:
  3552 ;;		_timerProc
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _apMain
  3560  08F2                     _apMain:	
  3561  08F2                     l357:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _apMain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3564                           ;ap.c: 240: while(1)
  3565                           
  3566                           
  3567                           ;ap.c: 241: {
  3568                           ;ap.c: 242: timerProc(&Timer[e_button]);
  3569  08F2  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  3570  08F3  3188  2041  3188   	fcall	_timerProc
  3571                           
  3572                           ;ap.c: 243: timerProc(&Timer[e_expose]);
  3573  08F6  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  3574  08F7  3188  2041  3188   	fcall	_timerProc
  3575                           
  3576                           ;ap.c: 244: timerProc(&Timer[e_display]);
  3577  08FA  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  3578  08FB  3188  2041  3188   	fcall	_timerProc
  3579                           
  3580                           ;ap.c: 245: timerProc(&Timer[e_rst]);
  3581  08FE  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  3582  08FF  3188  2041  3188   	fcall	_timerProc
  3583                           
  3584                           ;ap.c: 246: timerProc(&Timer[e_anodeCurrent]);
  3585  0902  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  3586  0903  3188  2041  3188   	fcall	_timerProc
  3587  0906  0064               	clrwdt	;# 
  3588  0907  28F2               	goto	l357
  3589  0908                     __end_of_apMain:	
  3590                           
  3591                           	psect	text2
  3592  0841                     __ptext2:	
  3593 ;; *************** function _timerProc *****************
  3594 ;; Defined at:
  3595 ;;		line 19 in file "timer.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  time            1    wreg     PTR struct .
  3598 ;;		 -> Timer(48), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  time            1   79[BANK0 ] PTR struct .
  3601 ;;		 -> Timer(48), 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;Total ram usage:        1 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:   10
  3618 ;; This function calls:
  3619 ;;		_event_anodeCurrent
  3620 ;;		_event_display
  3621 ;;		_event_expose
  3622 ;;		_event_rst
  3623 ;;		_event_timer_Button
  3624 ;; This function is called by:
  3625 ;;		_apMain
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           
  3630                           ;psect for function _timerProc
  3631  0841                     _timerProc:	
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _timerProc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3635                           ;timerProc@time stored from wreg
  3636  0841  0020               	movlb	0	; select bank0
  3637  0842  00EF               	movwf	timerProc@time
  3638                           
  3639                           ;timer.c: 21: time->timeProc();
  3640  0843  086F               	movf	timerProc@time,w
  3641  0844  3E06               	addlw	6
  3642  0845  0086               	movwf	6
  3643  0846  0187               	clrf	7
  3644  0847  3F41               	moviw [1]fsr1
  3645  0848  008A               	movwf	10
  3646  0849  3F40               	moviw [0]fsr1
  3647  084A  000A               	callw
  3648  084B  3188               	pagesel	$
  3649  084C  0008               	return
  3650  084D                     __end_of_timerProc:	
  3651                           
  3652                           	psect	text3
  3653  0258                     __ptext3:	
  3654 ;; *************** function _event_anodeCurrent *****************
  3655 ;; Defined at:
  3656 ;;		line 148 in file "ap.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    5
  3677 ;; This function calls:
  3678 ;;		___ftadd
  3679 ;;		___ftge
  3680 ;;		___ftsub
  3681 ;;		_pwmInit_ccp2
  3682 ;;		_timerGetTick
  3683 ;;		_timerTickClear
  3684 ;; This function is called by:
  3685 ;;		_apInit
  3686 ;;		_timerProc
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _event_anodeCurrent
  3692  0258                     _event_anodeCurrent:	
  3693                           
  3694                           ;ap.c: 150: if(timerGetTick(&Timer[e_anodeCurrent]))
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _event_anodeCurrent: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3698  0258  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  3699  0259  3197  27F2  3182   	fcall	_timerGetTick
  3700  025C  3A00               	xorlw	0
  3701  025D  1903               	skipnz
  3702  025E  0008               	return
  3703                           
  3704                           ;ap.c: 151: {
  3705                           ;ap.c: 152: timerTickClear(&Timer[e_anodeCurrent],1);
  3706  025F  0020               	movlb	0	; select bank0
  3707  0260  01A0               	clrf	timerTickClear@start
  3708  0261  0AA0               	incf	timerTickClear@start,f
  3709  0262  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  3710  0263  3188  20C8  3182   	fcall	_timerTickClear
  3711                           
  3712                           ;ap.c: 154: if(cmd.f_anodeCurrent_serch)
  3713  0266  0021               	movlb	1	; select bank1
  3714  0267  0830               	movf	(_cmd^(0+128)+16),w
  3715  0268  1903               	btfsc	3,2
  3716  0269  2AC4               	goto	l2682
  3717                           
  3718                           ;ap.c: 155: {
  3719                           ;ap.c: 156: if(cmd.v_adc_mA > cmd.v_adc_mA_Adj + 10)
  3720  026A  0822               	movf	(_cmd^(0+128)+2),w
  3721  026B  3E0A               	addlw	10
  3722  026C  0020               	movlb	0	; select bank0
  3723  026D  00E3               	movwf	??_event_anodeCurrent
  3724  026E  3000               	movlw	0
  3725  026F  0021               	movlb	1	; select bank1
  3726  0270  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  3727  0271  0020               	movlb	0	; select bank0
  3728  0272  00E4               	movwf	??_event_anodeCurrent+1
  3729  0273  0021               	movlb	1	; select bank1
  3730  0274  0829               	movf	((_cmd+1)^(0+128)+8),w
  3731  0275  0020               	movlb	0	; select bank0
  3732  0276  0264               	subwf	??_event_anodeCurrent+1,w
  3733  0277  1D03               	skipz
  3734  0278  2A7D               	goto	u2835
  3735  0279  0021               	movlb	1	; select bank1
  3736  027A  0828               	movf	(_cmd^(0+128)+8),w
  3737  027B  0020               	movlb	0	; select bank0
  3738  027C  0263               	subwf	??_event_anodeCurrent,w
  3739  027D                     u2835:	
  3740  027D  1803               	skipnc
  3741  027E  2A9E               	goto	l2678
  3742                           
  3743                           ;ap.c: 157: {
  3744                           ;ap.c: 158: cmd.c_anodeCurrent_cnt -= 0.1;
  3745  027F  30CD               	movlw	205
  3746  0280  00B5               	movwf	___ftsub@f2
  3747  0281  30CC               	movlw	204
  3748  0282  00B6               	movwf	___ftsub@f2+1
  3749  0283  303D               	movlw	61
  3750  0284  00B7               	movwf	___ftsub@f2+2
  3751  0285  300D               	movlw	13
  3752  0286  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3753  0287  0086               	movwf	6
  3754  0288  0187               	clrf	7
  3755  0289  3F40               	moviw [0]fsr1
  3756  028A  00B8               	movwf	___ftsub@f1
  3757  028B  3F41               	moviw [1]fsr1
  3758  028C  00B9               	movwf	___ftsub@f1+1
  3759  028D  3F42               	moviw [2]fsr1
  3760  028E  00BA               	movwf	___ftsub@f1+2
  3761  028F  3189  213D  3182   	fcall	___ftsub
  3762  0292  0020               	movlb	0	; select bank0
  3763  0293  0835               	movf	?___ftsub,w
  3764  0294  0021               	movlb	1	; select bank1
  3765  0295  00AD               	movwf	(_cmd^(0+128)+13)
  3766  0296  0020               	movlb	0	; select bank0
  3767  0297  0836               	movf	?___ftsub+1,w
  3768  0298  0021               	movlb	1	; select bank1
  3769  0299  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3770  029A  0020               	movlb	0	; select bank0
  3771  029B  0837               	movf	?___ftsub+2,w
  3772  029C  0021               	movlb	1	; select bank1
  3773  029D  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3774  029E                     l2678:	
  3775                           
  3776                           ;ap.c: 159: }if(cmd.v_adc_mA < cmd.v_adc_mA_Adj - 10)
  3777  029E  0021               	movlb	1	; select bank1
  3778  029F  0822               	movf	(_cmd^(0+128)+2),w
  3779  02A0  3EF6               	addlw	246
  3780  02A1  0020               	movlb	0	; select bank0
  3781  02A2  00E3               	movwf	??_event_anodeCurrent
  3782  02A3  30FF               	movlw	255
  3783  02A4  0021               	movlb	1	; select bank1
  3784  02A5  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  3785  02A6  0020               	movlb	0	; select bank0
  3786  02A7  00E4               	movwf	??_event_anodeCurrent+1
  3787  02A8  0864               	movf	??_event_anodeCurrent+1,w
  3788  02A9  0021               	movlb	1	; select bank1
  3789  02AA  0229               	subwf	((_cmd+1)^(0+128)+8),w
  3790  02AB  1D03               	skipz
  3791  02AC  2AB1               	goto	u2845
  3792  02AD  0020               	movlb	0	; select bank0
  3793  02AE  0863               	movf	??_event_anodeCurrent,w
  3794  02AF  0021               	movlb	1	; select bank1
  3795  02B0  0228               	subwf	(_cmd^(0+128)+8),w
  3796  02B1                     u2845:	
  3797  02B1  1803               	skipnc
  3798  02B2  2AE4               	goto	l348
  3799                           
  3800                           ;ap.c: 160: {
  3801                           ;ap.c: 161: cmd.c_anodeCurrent_cnt += 0.1;
  3802  02B3  30CD               	movlw	205
  3803  02B4  0020               	movlb	0	; select bank0
  3804  02B5  00A8               	movwf	___ftadd@f1
  3805  02B6  30CC               	movlw	204
  3806  02B7  00A9               	movwf	___ftadd@f1+1
  3807  02B8  303D               	movlw	61
  3808  02B9  00AA               	movwf	___ftadd@f1+2
  3809  02BA  300D               	movlw	13
  3810  02BB  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3811  02BC  0086               	movwf	6
  3812  02BD  0187               	clrf	7
  3813  02BE  3F40               	moviw [0]fsr1
  3814  02BF  00AB               	movwf	___ftadd@f2
  3815  02C0  3F41               	moviw [1]fsr1
  3816  02C1  00AC               	movwf	___ftadd@f2+1
  3817  02C2  3F42               	moviw [2]fsr1
  3818  02C3  2AD4               	goto	L1
  3819  02C4                     l2682:	
  3820                           ;ap.c: 162: }
  3821                           ;ap.c: 163: }else{
  3822                           
  3823                           
  3824                           ;ap.c: 164: cmd.c_anodeCurrent_cnt +=0.1;
  3825  02C4  30CD               	movlw	205
  3826  02C5  0020               	movlb	0	; select bank0
  3827  02C6  00A8               	movwf	___ftadd@f1
  3828  02C7  30CC               	movlw	204
  3829  02C8  00A9               	movwf	___ftadd@f1+1
  3830  02C9  303D               	movlw	61
  3831  02CA  00AA               	movwf	___ftadd@f1+2
  3832  02CB  300D               	movlw	13
  3833  02CC  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3834  02CD  0086               	movwf	6
  3835  02CE  0187               	clrf	7
  3836  02CF  3F40               	moviw [0]fsr1
  3837  02D0  00AB               	movwf	___ftadd@f2
  3838  02D1  3F41               	moviw [1]fsr1
  3839  02D2  00AC               	movwf	___ftadd@f2+1
  3840  02D3  3F42               	moviw [2]fsr1
  3841  02D4                     L1:	
  3842  02D4  00AD               	movwf	___ftadd@f2+2
  3843  02D5  3181  2162  3182   	fcall	___ftadd
  3844  02D8  0020               	movlb	0	; select bank0
  3845  02D9  0828               	movf	?___ftadd,w
  3846  02DA  0021               	movlb	1	; select bank1
  3847  02DB  00AD               	movwf	(_cmd^(0+128)+13)
  3848  02DC  0020               	movlb	0	; select bank0
  3849  02DD  0829               	movf	?___ftadd+1,w
  3850  02DE  0021               	movlb	1	; select bank1
  3851  02DF  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3852  02E0  0020               	movlb	0	; select bank0
  3853  02E1  082A               	movf	?___ftadd+2,w
  3854  02E2  0021               	movlb	1	; select bank1
  3855  02E3  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3856  02E4                     l348:	
  3857                           
  3858                           ;ap.c: 165: }
  3859                           ;ap.c: 167: if(cmd.c_anodeCurrent_cnt > 95)
  3860  02E4  3000               	movlw	0
  3861  02E5  0020               	movlb	0	; select bank0
  3862  02E6  00A0               	movwf	___ftge@ff1
  3863  02E7  30BE               	movlw	190
  3864  02E8  00A1               	movwf	___ftge@ff1+1
  3865  02E9  3042               	movlw	66
  3866  02EA  00A2               	movwf	___ftge@ff1+2
  3867  02EB  300D               	movlw	13
  3868  02EC  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3869  02ED  0086               	movwf	6
  3870  02EE  0187               	clrf	7
  3871  02EF  3F40               	moviw [0]fsr1
  3872  02F0  00A3               	movwf	___ftge@ff2
  3873  02F1  3F41               	moviw [1]fsr1
  3874  02F2  00A4               	movwf	___ftge@ff2+1
  3875  02F3  3F42               	moviw [2]fsr1
  3876  02F4  00A5               	movwf	___ftge@ff2+2
  3877  02F5  318B  232B  3182   	fcall	___ftge
  3878  02F8  1803               	btfsc	3,0
  3879  02F9  2B01               	goto	l2686
  3880                           
  3881                           ;ap.c: 168: {
  3882                           ;ap.c: 169: cmd.c_anodeCurrent_cnt = 95;
  3883  02FA  3000               	movlw	0
  3884  02FB  0021               	movlb	1	; select bank1
  3885  02FC  00AD               	movwf	(_cmd^(0+128)+13)
  3886  02FD  30BE               	movlw	190
  3887  02FE  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3888  02FF  3042               	movlw	66
  3889  0300  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3890  0301                     l2686:	
  3891                           
  3892                           ;ap.c: 170: }if(cmd.c_anodeCurrent_cnt < 5)
  3893  0301  300D               	movlw	13
  3894  0302  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3895  0303  0086               	movwf	6
  3896  0304  0187               	clrf	7
  3897  0305  3F40               	moviw [0]fsr1
  3898  0306  0020               	movlb	0	; select bank0
  3899  0307  00A0               	movwf	___ftge@ff1
  3900  0308  3F41               	moviw [1]fsr1
  3901  0309  00A1               	movwf	___ftge@ff1+1
  3902  030A  3F42               	moviw [2]fsr1
  3903  030B  00A2               	movwf	___ftge@ff1+2
  3904  030C  3000               	movlw	0
  3905  030D  00A3               	movwf	___ftge@ff2
  3906  030E  30A0               	movlw	160
  3907  030F  00A4               	movwf	___ftge@ff2+1
  3908  0310  3040               	movlw	64
  3909  0311  00A5               	movwf	___ftge@ff2+2
  3910  0312  318B  232B  3182   	fcall	___ftge
  3911  0315  1803               	btfsc	3,0
  3912  0316  2B1E               	goto	l2690
  3913                           
  3914                           ;ap.c: 171: {
  3915                           ;ap.c: 172: cmd.c_anodeCurrent_cnt = 5;
  3916  0317  3000               	movlw	0
  3917  0318  0021               	movlb	1	; select bank1
  3918  0319  00AD               	movwf	(_cmd^(0+128)+13)
  3919  031A  30A0               	movlw	160
  3920  031B  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3921  031C  3040               	movlw	64
  3922  031D  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3923  031E                     l2690:	
  3924                           
  3925                           ;ap.c: 173: }
  3926                           ;ap.c: 175: pwmInit_ccp2(1000,cmd.c_anodeCurrent_cnt);
  3927  031E  30E8               	movlw	232
  3928  031F  0020               	movlb	0	; select bank0
  3929  0320  00DA               	movwf	pwmInit_ccp2@freq
  3930  0321  3003               	movlw	3
  3931  0322  00DB               	movwf	pwmInit_ccp2@freq+1
  3932  0323  300D               	movlw	13
  3933  0324  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3934  0325  0086               	movwf	6
  3935  0326  0187               	clrf	7
  3936  0327  3F40               	moviw [0]fsr1
  3937  0328  00DC               	movwf	pwmInit_ccp2@duty
  3938  0329  3F41               	moviw [1]fsr1
  3939  032A  00DD               	movwf	pwmInit_ccp2@duty+1
  3940  032B  3F42               	moviw [2]fsr1
  3941  032C  00DE               	movwf	pwmInit_ccp2@duty+2
  3942  032D  318F  2766         	fcall	_pwmInit_ccp2
  3943  032F  0008               	return
  3944  0330                     __end_of_event_anodeCurrent:	
  3945                           
  3946                           	psect	text4
  3947  0885                     __ptext4:	
  3948 ;; *************** function _event_rst *****************
  3949 ;; Defined at:
  3950 ;;		line 136 in file "ap.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    3
  3971 ;; This function calls:
  3972 ;;		_timerGetTick
  3973 ;;		_timerTickClear
  3974 ;; This function is called by:
  3975 ;;		_apInit
  3976 ;;		_timerProc
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _event_rst
  3982  0885                     _event_rst:	
  3983                           
  3984                           ;ap.c: 138: if(timerGetTick(&Timer[e_rst]))
  3985                           
  3986                           ;incstack = 0
  3987                           ; Regs used in _event_rst: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3988  0885  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  3989  0886  3197  27F2  3188   	fcall	_timerGetTick
  3990  0889  3A00               	xorlw	0
  3991  088A  1903               	skipnz
  3992  088B  0008               	return
  3993                           
  3994                           ;ap.c: 139: {
  3995                           ;ap.c: 140: timerTickClear(&Timer[e_rst],0);
  3996  088C  0020               	movlb	0	; select bank0
  3997  088D  01A0               	clrf	timerTickClear@start
  3998  088E  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  3999  088F  3188  20C8         	fcall	_timerTickClear
  4000                           
  4001                           ;ap.c: 142: LATBbits.LATB4 = 1;
  4002  0891  0022               	movlb	2	; select bank2
  4003  0892  160D               	bsf	13,4	;volatile
  4004  0893  0008               	return
  4005  0894                     __end_of_event_rst:	
  4006                           
  4007                           	psect	text5
  4008  0330                     __ptext5:	
  4009 ;; *************** function _event_display *****************
  4010 ;; Defined at:
  4011 ;;		line 89 in file "ap.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    7
  4032 ;; This function calls:
  4033 ;;		_I2C_AS1115_Write
  4034 ;;		_adcRead
  4035 ;;		_disp_kv
  4036 ;;		_disp_ma_result
  4037 ;;		_timerEventStart
  4038 ;;		_timerGetTick
  4039 ;;		_timerTickClear
  4040 ;; This function is called by:
  4041 ;;		_apInit
  4042 ;;		_timerProc
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _event_display
  4048  0330                     _event_display:	
  4049                           
  4050                           ;ap.c: 91: if(timerGetTick(&Timer[e_display]))
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _event_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4054  0330  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  4055  0331  3197  27F2  3183   	fcall	_timerGetTick
  4056  0334  3A00               	xorlw	0
  4057  0335  1903               	skipnz
  4058  0336  0008               	return
  4059                           
  4060                           ;ap.c: 92: {
  4061                           ;ap.c: 93: timerTickClear(&Timer[e_display],1);
  4062  0337  0020               	movlb	0	; select bank0
  4063  0338  01A0               	clrf	timerTickClear@start
  4064  0339  0AA0               	incf	timerTickClear@start,f
  4065  033A  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  4066  033B  3188  20C8  3183   	fcall	_timerTickClear
  4067                           
  4068                           ;ap.c: 95: I2C_AS1115_Write(SHUTDOWN,NORMAL_OPERATION);
  4069  033E  0020               	movlb	0	; select bank0
  4070  033F  01B9               	clrf	I2C_AS1115_Write@data
  4071  0340  0AB9               	incf	I2C_AS1115_Write@data,f
  4072  0341  300C               	movlw	12
  4073  0342  3189  215B  3183   	fcall	_I2C_AS1115_Write
  4074                           
  4075                           ;ap.c: 96: I2C_AS1115_Write(GLOBAL_INTENSITY,7);
  4076  0345  3007               	movlw	7
  4077  0346  0020               	movlb	0	; select bank0
  4078  0347  00E2               	movwf	??_event_display
  4079  0348  0862               	movf	??_event_display,w
  4080  0349  00B9               	movwf	I2C_AS1115_Write@data
  4081  034A  300A               	movlw	10
  4082  034B  3189  215B  3183   	fcall	_I2C_AS1115_Write
  4083                           
  4084                           ;ap.c: 97: I2C_AS1115_Write(DECODE_MODE,0x3F);
  4085  034E  303F               	movlw	63
  4086  034F  0020               	movlb	0	; select bank0
  4087  0350  00E2               	movwf	??_event_display
  4088  0351  0862               	movf	??_event_display,w
  4089  0352  00B9               	movwf	I2C_AS1115_Write@data
  4090  0353  3009               	movlw	9
  4091  0354  3189  215B  3183   	fcall	_I2C_AS1115_Write
  4092                           
  4093                           ;ap.c: 98: I2C_AS1115_Write(SCAN_LIMIT,0x05);
  4094  0357  3005               	movlw	5
  4095  0358  0020               	movlb	0	; select bank0
  4096  0359  00E2               	movwf	??_event_display
  4097  035A  0862               	movf	??_event_display,w
  4098  035B  00B9               	movwf	I2C_AS1115_Write@data
  4099  035C  300B               	movlw	11
  4100  035D  3189  215B  3183   	fcall	_I2C_AS1115_Write
  4101                           
  4102                           ;ap.c: 100: if(cmd.f_XRAY_ON)
  4103  0360  0021               	movlb	1	; select bank1
  4104  0361  082C               	movf	(_cmd^(0+128)+12),w
  4105  0362  1903               	btfsc	3,2
  4106  0363  2BD9               	goto	l2658
  4107                           
  4108                           ;ap.c: 101: {
  4109                           ;ap.c: 102: cmd.v_adc_kV = adcRead(3);
  4110  0364  3003               	movlw	3
  4111  0365  318A  220B  3183   	fcall	_adcRead
  4112  0368  0020               	movlb	0	; select bank0
  4113  0369  0821               	movf	?_adcRead+1,w
  4114  036A  0021               	movlb	1	; select bank1
  4115  036B  00A7               	movwf	((_cmd+1)^(0+128)+6)
  4116  036C  0020               	movlb	0	; select bank0
  4117  036D  0820               	movf	?_adcRead,w
  4118  036E  0021               	movlb	1	; select bank1
  4119  036F  00A6               	movwf	(_cmd^(0+128)+6)
  4120                           
  4121                           ;ap.c: 103: cmd.v_adc_mA = adcRead(4);
  4122  0370  3004               	movlw	4
  4123  0371  318A  220B  3183   	fcall	_adcRead
  4124  0374  0020               	movlb	0	; select bank0
  4125  0375  0821               	movf	?_adcRead+1,w
  4126  0376  0021               	movlb	1	; select bank1
  4127  0377  00A9               	movwf	((_cmd+1)^(0+128)+8)
  4128  0378  0020               	movlb	0	; select bank0
  4129  0379  0820               	movf	?_adcRead,w
  4130  037A  0021               	movlb	1	; select bank1
  4131  037B  00A8               	movwf	(_cmd^(0+128)+8)
  4132                           
  4133                           ;ap.c: 104: disp_kv(cmd.v_adc_kV);
  4134  037C  0827               	movf	((_cmd+1)^(0+128)+6),w
  4135  037D  0020               	movlb	0	; select bank0
  4136  037E  00DB               	movwf	disp_kv@data+1
  4137  037F  0021               	movlb	1	; select bank1
  4138  0380  0826               	movf	(_cmd^(0+128)+6),w
  4139  0381  0020               	movlb	0	; select bank0
  4140  0382  00DA               	movwf	disp_kv@data
  4141  0383  3180  2039  3183   	fcall	_disp_kv
  4142                           
  4143                           ;ap.c: 105: disp_ma_result(cmd.v_adc_mA);
  4144  0386  0021               	movlb	1	; select bank1
  4145  0387  0829               	movf	((_cmd+1)^(0+128)+8),w
  4146  0388  0020               	movlb	0	; select bank0
  4147  0389  00DB               	movwf	disp_ma_result@data+1
  4148  038A  0021               	movlb	1	; select bank1
  4149  038B  0828               	movf	(_cmd^(0+128)+8),w
  4150  038C  0020               	movlb	0	; select bank0
  4151  038D  00DA               	movwf	disp_ma_result@data
  4152  038E  3186  263B  3183   	fcall	_disp_ma_result
  4153                           
  4154                           ;ap.c: 107: if(cmd.v_adc_mA > cmd.f_anodeCurrent_serch)
  4155  0391  0021               	movlb	1	; select bank1
  4156  0392  0830               	movf	(_cmd^(0+128)+16),w
  4157  0393  0020               	movlb	0	; select bank0
  4158  0394  00E2               	movwf	??_event_display
  4159  0395  01E3               	clrf	??_event_display+1
  4160  0396  0021               	movlb	1	; select bank1
  4161  0397  0829               	movf	((_cmd+1)^(0+128)+8),w
  4162  0398  0020               	movlb	0	; select bank0
  4163  0399  0263               	subwf	??_event_display+1,w
  4164  039A  1D03               	skipz
  4165  039B  2BA0               	goto	u2775
  4166  039C  0021               	movlb	1	; select bank1
  4167  039D  0828               	movf	(_cmd^(0+128)+8),w
  4168  039E  0020               	movlb	0	; select bank0
  4169  039F  0262               	subwf	??_event_display,w
  4170  03A0                     u2775:	
  4171  03A0  1803               	skipnc
  4172  03A1  2BA7               	goto	l2650
  4173                           
  4174                           ;ap.c: 108: {
  4175                           ;ap.c: 109: timerTickClear(&Timer[e_anodeCurrent],0);
  4176  03A2  01A0               	clrf	timerTickClear@start
  4177  03A3  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4178  03A4  3188  20C8  3183   	fcall	_timerTickClear
  4179  03A7                     l2650:	
  4180                           
  4181                           ;ap.c: 110: }
  4182                           ;ap.c: 112: if(cmd.v_adc_mA > (cmd.v_adc_mA_Adj) + 20 || cmd.v_adc_mA < (cmd.v_adc_mA_Ad
      +                          j) - 20)
  4183  03A7  0021               	movlb	1	; select bank1
  4184  03A8  0822               	movf	(_cmd^(0+128)+2),w
  4185  03A9  3E14               	addlw	20
  4186  03AA  0020               	movlb	0	; select bank0
  4187  03AB  00E2               	movwf	??_event_display
  4188  03AC  3000               	movlw	0
  4189  03AD  0021               	movlb	1	; select bank1
  4190  03AE  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  4191  03AF  0020               	movlb	0	; select bank0
  4192  03B0  00E3               	movwf	??_event_display+1
  4193  03B1  0021               	movlb	1	; select bank1
  4194  03B2  0829               	movf	((_cmd+1)^(0+128)+8),w
  4195  03B3  0020               	movlb	0	; select bank0
  4196  03B4  0263               	subwf	??_event_display+1,w
  4197  03B5  1D03               	skipz
  4198  03B6  2BBB               	goto	u2785
  4199  03B7  0021               	movlb	1	; select bank1
  4200  03B8  0828               	movf	(_cmd^(0+128)+8),w
  4201  03B9  0020               	movlb	0	; select bank0
  4202  03BA  0262               	subwf	??_event_display,w
  4203  03BB                     u2785:	
  4204  03BB  1C03               	skipc
  4205  03BC  2BD2               	goto	l2654
  4206  03BD  0021               	movlb	1	; select bank1
  4207  03BE  0822               	movf	(_cmd^(0+128)+2),w
  4208  03BF  3EEC               	addlw	236
  4209  03C0  0020               	movlb	0	; select bank0
  4210  03C1  00E2               	movwf	??_event_display
  4211  03C2  30FF               	movlw	255
  4212  03C3  0021               	movlb	1	; select bank1
  4213  03C4  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  4214  03C5  0020               	movlb	0	; select bank0
  4215  03C6  00E3               	movwf	??_event_display+1
  4216  03C7  0863               	movf	??_event_display+1,w
  4217  03C8  0021               	movlb	1	; select bank1
  4218  03C9  0229               	subwf	((_cmd+1)^(0+128)+8),w
  4219  03CA  1D03               	skipz
  4220  03CB  2BD0               	goto	u2795
  4221  03CC  0020               	movlb	0	; select bank0
  4222  03CD  0862               	movf	??_event_display,w
  4223  03CE  0021               	movlb	1	; select bank1
  4224  03CF  0228               	subwf	(_cmd^(0+128)+8),w
  4225  03D0                     u2795:	
  4226  03D0  1803               	skipnc
  4227  03D1  0008               	return
  4228  03D2                     l2654:	
  4229                           
  4230                           ;ap.c: 113: {
  4231                           ;ap.c: 114: timerEventStart(&Timer[e_anodeCurrent]);
  4232  03D2  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4233  03D3  3188  2008         	fcall	_timerEventStart
  4234                           
  4235                           ;ap.c: 115: cmd.f_anodeCurrent_serch = 1;
  4236  03D5  0021               	movlb	1	; select bank1
  4237  03D6  01B0               	clrf	(_cmd^(0+128)+16)
  4238  03D7  0AB0               	incf	(_cmd^(0+128)+16),f
  4239                           
  4240                           ;ap.c: 116: }
  4241                           ;ap.c: 118: }else
  4242  03D8  0008               	return
  4243  03D9                     l2658:	
  4244                           
  4245                           ;ap.c: 119: {
  4246                           ;ap.c: 120: cmd.v_adc_kV_Adj = adcRead(2);
  4247  03D9  3002               	movlw	2
  4248  03DA  318A  220B  3183   	fcall	_adcRead
  4249  03DD  0020               	movlb	0	; select bank0
  4250  03DE  0821               	movf	?_adcRead+1,w
  4251  03DF  0021               	movlb	1	; select bank1
  4252  03E0  00A5               	movwf	((_cmd+1)^(0+128)+4)
  4253  03E1  0020               	movlb	0	; select bank0
  4254  03E2  0820               	movf	?_adcRead,w
  4255  03E3  0021               	movlb	1	; select bank1
  4256  03E4  00A4               	movwf	(_cmd^(0+128)+4)
  4257                           
  4258                           ;ap.c: 121: cmd.v_adc_mA_Adj = adcRead(1);
  4259  03E5  3001               	movlw	1
  4260  03E6  318A  220B  3183   	fcall	_adcRead
  4261  03E9  0020               	movlb	0	; select bank0
  4262  03EA  0821               	movf	?_adcRead+1,w
  4263  03EB  0021               	movlb	1	; select bank1
  4264  03EC  00A3               	movwf	((_cmd+1)^(0+128)+2)
  4265  03ED  0020               	movlb	0	; select bank0
  4266  03EE  0820               	movf	?_adcRead,w
  4267  03EF  0021               	movlb	1	; select bank1
  4268  03F0  00A2               	movwf	(_cmd^(0+128)+2)
  4269                           
  4270                           ;ap.c: 126: disp_kv(cmd.v_adc_kV_Adj);
  4271  03F1  0825               	movf	((_cmd+1)^(0+128)+4),w
  4272  03F2  0020               	movlb	0	; select bank0
  4273  03F3  00DB               	movwf	disp_kv@data+1
  4274  03F4  0021               	movlb	1	; select bank1
  4275  03F5  0824               	movf	(_cmd^(0+128)+4),w
  4276  03F6  0020               	movlb	0	; select bank0
  4277  03F7  00DA               	movwf	disp_kv@data
  4278  03F8  3180  2039  3183   	fcall	_disp_kv
  4279                           
  4280                           ;ap.c: 127: disp_ma_result(cmd.v_adc_mA_Adj);
  4281  03FB  0021               	movlb	1	; select bank1
  4282  03FC  0823               	movf	((_cmd+1)^(0+128)+2),w
  4283  03FD  0020               	movlb	0	; select bank0
  4284  03FE  00DB               	movwf	disp_ma_result@data+1
  4285  03FF  0021               	movlb	1	; select bank1
  4286  0400  0822               	movf	(_cmd^(0+128)+2),w
  4287  0401  0020               	movlb	0	; select bank0
  4288  0402  00DA               	movwf	disp_ma_result@data
  4289  0403  3186  263B         	fcall	_disp_ma_result
  4290                           
  4291                           ;ap.c: 128: cmd.f_anodeCurrent_serch = 0;
  4292  0405  0021               	movlb	1	; select bank1
  4293  0406  01B0               	clrf	(_cmd^(0+128)+16)
  4294  0407  0008               	return
  4295  0408                     __end_of_event_display:	
  4296                           
  4297                           	psect	text6
  4298  0877                     __ptext6:	
  4299 ;; *************** function _event_expose *****************
  4300 ;; Defined at:
  4301 ;;		line 81 in file "ap.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    3
  4322 ;; This function calls:
  4323 ;;		_timerGetTick
  4324 ;;		_timerTickClear
  4325 ;; This function is called by:
  4326 ;;		_apInit
  4327 ;;		_timerProc
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _event_expose
  4333  0877                     _event_expose:	
  4334                           
  4335                           ;ap.c: 83: if(timerGetTick(&Timer[e_expose]))
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _event_expose: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4339  0877  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  4340  0878  3197  27F2  3188   	fcall	_timerGetTick
  4341  087B  3A00               	xorlw	0
  4342  087C  1903               	skipnz
  4343  087D  0008               	return
  4344                           
  4345                           ;ap.c: 84: {
  4346                           ;ap.c: 85: timerTickClear(&Timer[e_expose],1);
  4347  087E  0020               	movlb	0	; select bank0
  4348  087F  01A0               	clrf	timerTickClear@start
  4349  0880  0AA0               	incf	timerTickClear@start,f
  4350  0881  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  4351  0882  3188  20C8         	fcall	_timerTickClear
  4352  0884  0008               	return
  4353  0885                     __end_of_event_expose:	
  4354                           
  4355                           	psect	text7
  4356  08A5                     __ptext7:	
  4357 ;; *************** function _event_timer_Button *****************
  4358 ;; Defined at:
  4359 ;;		line 71 in file "ap.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    9
  4380 ;; This function calls:
  4381 ;;		_processButtons
  4382 ;;		_timerGetTick
  4383 ;;		_timerTickClear
  4384 ;; This function is called by:
  4385 ;;		_apInit
  4386 ;;		_timerProc
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           
  4391                           ;psect for function _event_timer_Button
  4392  08A5                     _event_timer_Button:	
  4393                           
  4394                           ;ap.c: 73: if(timerGetTick(&Timer[e_button]))
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in _event_timer_Button: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4398  08A5  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  4399  08A6  3197  27F2  3188   	fcall	_timerGetTick
  4400  08A9  3A00               	xorlw	0
  4401  08AA  1903               	skipnz
  4402  08AB  0008               	return
  4403                           
  4404                           ;ap.c: 74: {
  4405                           ;ap.c: 75: timerTickClear(&Timer[e_button],1);
  4406  08AC  0020               	movlb	0	; select bank0
  4407  08AD  01A0               	clrf	timerTickClear@start
  4408  08AE  0AA0               	incf	timerTickClear@start,f
  4409  08AF  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  4410  08B0  3188  20C8  3188   	fcall	_timerTickClear
  4411                           
  4412                           ;ap.c: 77: processButtons();
  4413  08B3  318A  228E         	fcall	_processButtons
  4414  08B5  0008               	return
  4415  08B6                     __end_of_event_timer_Button:	
  4416                           
  4417                           	psect	text8
  4418  0A8E                     __ptext8:	
  4419 ;; *************** function _processButtons *****************
  4420 ;; Defined at:
  4421 ;;		line 32 in file "button.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  i               1    2[BANK1 ] unsigned char 
  4426 ;;  isPressed       2    0[BANK1 ] unsigned char [2]
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;Total ram usage:        5 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    8
  4443 ;; This function calls:
  4444 ;;		___bmul
  4445 ;;		_processButton
  4446 ;; This function is called by:
  4447 ;;		_event_timer_Button
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _processButtons
  4453  0A8E                     _processButtons:	
  4454                           
  4455                           ;button.c: 35: bool isPressed[BTN_COUNT];
  4456                           ;button.c: 36: isPressed[BTN_1] = PORTFbits.RF1;
  4457                           
  4458                           ;incstack = 0
  4459                           ; Regs used in _processButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4460  0A8E  3000               	movlw	0
  4461  0A8F  0025               	movlb	5	; select bank5
  4462  0A90  188C               	btfsc	12,1	;volatile
  4463  0A91  3001               	movlw	1
  4464  0A92  0021               	movlb	1	; select bank1
  4465  0A93  00E5               	movwf	processButtons@isPressed^(0+128)
  4466                           
  4467                           ;button.c: 37: isPressed[BTN_2] = PORTFbits.RF0;
  4468  0A94  3000               	movlw	0
  4469  0A95  0025               	movlb	5	; select bank5
  4470  0A96  180C               	btfsc	12,0	;volatile
  4471  0A97  3001               	movlw	1
  4472  0A98  0021               	movlb	1	; select bank1
  4473  0A99  00E6               	movwf	(processButtons@isPressed^(0+128)+1)
  4474                           
  4475                           ;button.c: 40: for(byte i=BTN_COUNT;i--;)
  4476  0A9A  3002               	movlw	2
  4477  0A9B  0020               	movlb	0	; select bank0
  4478  0A9C  00ED               	movwf	??_processButtons
  4479  0A9D  086D               	movf	??_processButtons,w
  4480  0A9E  0021               	movlb	1	; select bank1
  4481  0A9F  00E7               	movwf	processButtons@i^(0+128)
  4482  0AA0                     l2590:	
  4483  0AA0  3001               	movlw	1
  4484  0AA1  0021               	movlb	1	; select bank1
  4485  0AA2  02E7               	subwf	processButtons@i^(0+128),f
  4486  0AA3  0A67               	incf	processButtons@i^(0+128),w
  4487  0AA4  1903               	btfsc	3,2
  4488  0AA5  0008               	return
  4489                           
  4490                           ;button.c: 41: processButton(&buttons[i], isPressed[i]);
  4491  0AA6  0867               	movf	processButtons@i^(0+128),w
  4492  0AA7  3EE5               	addlw	(low (processButtons@isPressed| 0))& (0+255)
  4493  0AA8  0086               	movwf	6
  4494  0AA9  0187               	clrf	7
  4495  0AAA  0801               	movf	1,w
  4496  0AAB  0020               	movlb	0	; select bank0
  4497  0AAC  00ED               	movwf	??_processButtons
  4498  0AAD  086D               	movf	??_processButtons,w
  4499  0AAE  00E7               	movwf	processButton@isPressed
  4500  0AAF  3009               	movlw	9
  4501  0AB0  00EE               	movwf	??_processButtons+1
  4502  0AB1  086E               	movf	??_processButtons+1,w
  4503  0AB2  00A0               	movwf	___bmul@multiplicand
  4504  0AB3  0021               	movlb	1	; select bank1
  4505  0AB4  0867               	movf	processButtons@i^(0+128),w
  4506  0AB5  3188  20B6  318A   	fcall	___bmul
  4507  0AB8  3E20               	addlw	(low (_buttons| (0+256)))& (0+255)
  4508  0AB9  318E  2663  318A   	fcall	_processButton
  4509  0ABC  2AA0               	goto	l2590
  4510  0ABD                     __end_of_processButtons:	
  4511                           
  4512                           	psect	text9
  4513  0E63                     __ptext9:	
  4514 ;; *************** function _processButton *****************
  4515 ;; Defined at:
  4516 ;;		line 44 in file "button.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  button          1    wreg     PTR struct .
  4519 ;;		 -> buttons(18), 
  4520 ;;  isPressed       1   71[BANK0 ] unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  button          1   76[BANK0 ] PTR struct .
  4523 ;;		 -> buttons(18), 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4533 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;Total ram usage:        6 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    7
  4540 ;; This function calls:
  4541 ;;		_event_btn_Expose
  4542 ;;		_event_btn_Stop
  4543 ;; This function is called by:
  4544 ;;		_processButtons
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _processButton
  4550  0E63                     _processButton:	
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _processButton: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4554                           ;processButton@button stored from wreg
  4555  0E63  0020               	movlb	0	; select bank0
  4556  0E64  00EC               	movwf	processButton@button
  4557                           
  4558                           ;button.c: 46: button->counter <<= 1;
  4559  0E65  086C               	movf	processButton@button,w
  4560  0E66  3E05               	addlw	5
  4561  0E67  0086               	movwf	6
  4562  0E68  3001               	movlw	1	; select bank2/3
  4563  0E69  0087               	movwf	7
  4564  0E6A  1003               	clrc
  4565  0E6B  0D81               	rlf	1,f
  4566                           
  4567                           ;button.c: 47: if(isPressed)
  4568  0E6C  0867               	movf	processButton@isPressed,w
  4569  0E6D  1903               	btfsc	3,2
  4570  0E6E  2ECF               	goto	l2398
  4571                           
  4572                           ;button.c: 48: {
  4573                           ;button.c: 49: button->counter |= 1;
  4574  0E6F  086C               	movf	processButton@button,w
  4575  0E70  3E05               	addlw	5
  4576  0E71  0086               	movwf	6
  4577  0E72  3001               	movlw	1	; select bank2/3
  4578  0E73  0087               	movwf	7
  4579  0E74  1401               	bsf	1,0
  4580                           
  4581                           ;button.c: 52: {
  4582                           ;button.c: 54: if(!button->processed)
  4583  0E75  086C               	movf	processButton@button,w
  4584  0E76  3E04               	addlw	4
  4585  0E77  0086               	movwf	6
  4586  0E78  3001               	movlw	1	; select bank2/3
  4587  0E79  0087               	movwf	7
  4588  0E7A  0801               	movf	1,w
  4589  0E7B  1D03               	btfss	3,2
  4590  0E7C  2EC3               	goto	l412
  4591                           
  4592                           ;button.c: 55: {
  4593                           ;button.c: 56: if(button->pressedTime <= button->pressCnt)
  4594  0E7D  086C               	movf	processButton@button,w
  4595  0E7E  0086               	movwf	6
  4596  0E7F  3001               	movlw	1	; select bank2/3
  4597  0E80  0087               	movwf	7
  4598  0E81  3F40               	moviw [0]fsr1
  4599  0E82  00E8               	movwf	??_processButton
  4600  0E83  3F41               	moviw [1]fsr1
  4601  0E84  00E9               	movwf	??_processButton+1
  4602  0E85  086C               	movf	processButton@button,w
  4603  0E86  3E02               	addlw	2
  4604  0E87  0086               	movwf	6
  4605  0E88  3001               	movlw	1	; select bank2/3
  4606  0E89  0087               	movwf	7
  4607  0E8A  3F40               	moviw [0]fsr1
  4608  0E8B  00EA               	movwf	??_processButton+2
  4609  0E8C  3F41               	moviw [1]fsr1
  4610  0E8D  00EB               	movwf	??_processButton+3
  4611  0E8E  0869               	movf	??_processButton+1,w
  4612  0E8F  026B               	subwf	??_processButton+3,w
  4613  0E90  1D03               	skipz
  4614  0E91  2E94               	goto	u2205
  4615  0E92  0868               	movf	??_processButton,w
  4616  0E93  026A               	subwf	??_processButton+2,w
  4617  0E94                     u2205:	
  4618  0E94  1C03               	skipc
  4619  0E95  2EC3               	goto	l412
  4620                           
  4621                           ;button.c: 57: {
  4622                           ;button.c: 58: button->processed = 1;
  4623  0E96  086C               	movf	processButton@button,w
  4624  0E97  3E04               	addlw	4
  4625  0E98  0086               	movwf	6
  4626  0E99  3001               	movlw	1	; select bank2/3
  4627  0E9A  0087               	movwf	7
  4628  0E9B  0181               	clrf	1
  4629  0E9C  0A81               	incf	1,f
  4630                           
  4631                           ;button.c: 61: if(!button->funcDone && button->onPress != (0) && button->onPress() )
  4632  0E9D  086C               	movf	processButton@button,w
  4633  0E9E  3E06               	addlw	6
  4634  0E9F  0086               	movwf	6
  4635  0EA0  3001               	movlw	1	; select bank2/3
  4636  0EA1  0087               	movwf	7
  4637  0EA2  0801               	movf	1,w
  4638  0EA3  1D03               	btfss	3,2
  4639  0EA4  2EC3               	goto	l412
  4640  0EA5  086C               	movf	processButton@button,w
  4641  0EA6  3E07               	addlw	7
  4642  0EA7  0086               	movwf	6
  4643  0EA8  3001               	movlw	1	; select bank2/3
  4644  0EA9  0087               	movwf	7
  4645  0EAA  0016               	moviw fsr1++
  4646  0EAB  0401               	iorwf	1,w
  4647  0EAC  1903               	btfsc	3,2
  4648  0EAD  2EC3               	goto	l412
  4649  0EAE  086C               	movf	processButton@button,w
  4650  0EAF  3E07               	addlw	7
  4651  0EB0  0086               	movwf	6
  4652  0EB1  3001               	movlw	1	; select bank2/3
  4653  0EB2  0087               	movwf	7
  4654  0EB3  3F41               	moviw [1]fsr1
  4655  0EB4  008A               	movwf	10
  4656  0EB5  3F40               	moviw [0]fsr1
  4657  0EB6  000A               	callw
  4658  0EB7  318E               	pagesel	$
  4659  0EB8  3A00               	xorlw	0
  4660  0EB9  1903               	skipnz
  4661  0EBA  2EC3               	goto	l412
  4662                           
  4663                           ;button.c: 62: {
  4664                           ;button.c: 63: button->funcDone = 1;
  4665  0EBB  0020               	movlb	0	; select bank0
  4666  0EBC  086C               	movf	processButton@button,w
  4667  0EBD  3E06               	addlw	6
  4668  0EBE  0086               	movwf	6
  4669  0EBF  3001               	movlw	1	; select bank2/3
  4670  0EC0  0087               	movwf	7
  4671  0EC1  0181               	clrf	1
  4672  0EC2  0A81               	incf	1,f
  4673  0EC3                     l412:	
  4674                           
  4675                           ;button.c: 64: }
  4676                           ;button.c: 66: }
  4677                           ;button.c: 67: }
  4678                           ;button.c: 69: button->pressCnt ++;
  4679  0EC3  0020               	movlb	0	; select bank0
  4680  0EC4  086C               	movf	processButton@button,w
  4681  0EC5  3E02               	addlw	2
  4682  0EC6  0086               	movwf	6
  4683  0EC7  3001               	movlw	1	; select bank2/3
  4684  0EC8  0087               	movwf	7
  4685  0EC9  3001               	movlw	1
  4686  0ECA  0781               	addwf	1,f
  4687  0ECB  3141               	addfsr 1,1
  4688  0ECC  1803               	skipnc
  4689  0ECD  0A81               	incf	1,f
  4690                           
  4691                           ;button.c: 70: }
  4692                           ;button.c: 71: }
  4693  0ECE  0008               	return
  4694  0ECF                     l2398:	
  4695                           
  4696                           ;button.c: 72: else
  4697                           ;button.c: 73: {
  4698                           ;button.c: 76: {
  4699                           ;button.c: 77: button->processed = 0;
  4700  0ECF  086C               	movf	processButton@button,w
  4701  0ED0  3E04               	addlw	4
  4702  0ED1  0086               	movwf	6
  4703  0ED2  3001               	movlw	1	; select bank2/3
  4704  0ED3  0087               	movwf	7
  4705  0ED4  0181               	clrf	1
  4706                           
  4707                           ;button.c: 78: button->funcDone = 0;
  4708  0ED5  086C               	movf	processButton@button,w
  4709  0ED6  3E06               	addlw	6
  4710  0ED7  0086               	movwf	6
  4711  0ED8  3001               	movlw	1	; select bank2/3
  4712  0ED9  0087               	movwf	7
  4713  0EDA  0181               	clrf	1
  4714                           
  4715                           ;button.c: 79: button->pressCnt = 0;
  4716  0EDB  086C               	movf	processButton@button,w
  4717  0EDC  3E02               	addlw	2
  4718  0EDD  0086               	movwf	6
  4719  0EDE  3001               	movlw	1	; select bank2/3
  4720  0EDF  0087               	movwf	7
  4721  0EE0  3000               	movlw	0
  4722  0EE1  3FC0               	movwi [0]fsr1
  4723  0EE2  3FC1               	movwi [1]fsr1
  4724  0EE3  0008               	return
  4725  0EE4                     __end_of_processButton:	
  4726                           
  4727                           	psect	text10
  4728  09BE                     __ptext10:	
  4729 ;; *************** function _event_btn_Stop *****************
  4730 ;; Defined at:
  4731 ;;		line 46 in file "ap.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  temp            2   31[BANK0 ] unsigned int 
  4736 ;;  ret             1   30[BANK0 ] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      unsigned char 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;Total ram usage:        4 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    6
  4753 ;; This function calls:
  4754 ;;		_I2C_DAC_Write
  4755 ;;		_pwmStop_ccp2
  4756 ;;		_pwmStop_ccp3
  4757 ;;		_timerTickClear
  4758 ;; This function is called by:
  4759 ;;		_apInit
  4760 ;;		_processButton
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _event_btn_Stop
  4766  09BE                     _event_btn_Stop:	
  4767                           
  4768                           ;ap.c: 48: bool ret = 1;
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _event_btn_Stop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4772  09BE  0020               	movlb	0	; select bank0
  4773  09BF  01BE               	clrf	event_btn_Stop@ret
  4774  09C0  0ABE               	incf	event_btn_Stop@ret,f
  4775                           
  4776                           ;ap.c: 50: uint16_t temp;
  4777                           ;ap.c: 52: LATCbits.LATC0 = 1;
  4778  09C1  0022               	movlb	2	; select bank2
  4779  09C2  140E               	bsf	14,0	;volatile
  4780                           
  4781                           ;ap.c: 53: LATCbits.LATC1 = 1;
  4782  09C3  148E               	bsf	14,1	;volatile
  4783                           
  4784                           ;ap.c: 55: temp = 0;
  4785  09C4  0020               	movlb	0	; select bank0
  4786  09C5  01BF               	clrf	event_btn_Stop@temp
  4787  09C6  01C0               	clrf	event_btn_Stop@temp+1
  4788                           
  4789                           ;ap.c: 56: I2C_DAC_Write(0x00,&temp);
  4790  09C7  303F               	movlw	(low (event_btn_Stop@temp| 0))& (0+255)
  4791  09C8  00BD               	movwf	??_event_btn_Stop
  4792  09C9  083D               	movf	??_event_btn_Stop,w
  4793  09CA  00B9               	movwf	I2C_DAC_Write@data
  4794  09CB  3000               	movlw	0
  4795  09CC  318A  22F2  3189   	fcall	_I2C_DAC_Write
  4796                           
  4797                           ;ap.c: 57: pwmStop_ccp3();
  4798  09CF  3188  2000  3189   	fcall	_pwmStop_ccp3
  4799                           
  4800                           ;ap.c: 59: pwmStop_ccp2();
  4801  09D2  3197  27E6  3189   	fcall	_pwmStop_ccp2
  4802                           
  4803                           ;ap.c: 60: timerTickClear(&Timer[e_anodeCurrent],0);
  4804  09D5  0020               	movlb	0	; select bank0
  4805  09D6  01A0               	clrf	timerTickClear@start
  4806  09D7  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4807  09D8  3188  20C8         	fcall	_timerTickClear
  4808                           
  4809                           ;ap.c: 62: LATDbits.LATD3 = 0;
  4810  09DA  0022               	movlb	2	; select bank2
  4811  09DB  118F               	bcf	15,3	;volatile
  4812                           
  4813                           ;ap.c: 63: LATEbits.LATE3 = 1;
  4814  09DC  1590               	bsf	16,3	;volatile
  4815                           
  4816                           ;ap.c: 65: cmd.f_XRAY_ON = 0;
  4817  09DD  0021               	movlb	1	; select bank1
  4818  09DE  01AC               	clrf	(_cmd^(0+128)+12)
  4819                           
  4820                           ;ap.c: 67: return ret;
  4821  09DF  0020               	movlb	0	; select bank0
  4822  09E0  083E               	movf	event_btn_Stop@ret,w
  4823  09E1  0008               	return
  4824  09E2                     __end_of_event_btn_Stop:	
  4825                           
  4826                           	psect	text11
  4827  0D2E                     __ptext11:	
  4828 ;; *************** function _event_btn_Expose *****************
  4829 ;; Defined at:
  4830 ;;		line 9 in file "ap.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  temp            2   69[BANK0 ] unsigned int 
  4835 ;;  ret             1   68[BANK0 ] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      unsigned char 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;Total ram usage:        4 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    6
  4852 ;; This function calls:
  4853 ;;		_I2C_DAC_Write
  4854 ;;		_adcTodac
  4855 ;;		_pwmInit_ccp2
  4856 ;;		_pwmInit_ccp3
  4857 ;;		_pwmStart_ccp2
  4858 ;;		_pwmStart_ccp3
  4859 ;;		_timerEventStart
  4860 ;; This function is called by:
  4861 ;;		_apInit
  4862 ;;		_processButton
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _event_btn_Expose
  4868  0D2E                     _event_btn_Expose:	
  4869                           
  4870                           ;ap.c: 11: bool ret = 1;
  4871                           
  4872                           ;incstack = 0
  4873                           ; Regs used in _event_btn_Expose: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4874  0D2E  0020               	movlb	0	; select bank0
  4875  0D2F  01E4               	clrf	event_btn_Expose@ret
  4876  0D30  0AE4               	incf	event_btn_Expose@ret,f
  4877                           
  4878                           ;ap.c: 13: uint16_t temp;
  4879                           ;ap.c: 17: if(!cmd.f_XRAY_ON)
  4880  0D31  0021               	movlb	1	; select bank1
  4881  0D32  082C               	movf	(_cmd^(0+128)+12),w
  4882  0D33  1D03               	btfss	3,2
  4883  0D34  2D80               	goto	l2356
  4884                           
  4885                           ;ap.c: 18: {
  4886                           ;ap.c: 19: temp = adcTodac(cmd.v_adc_kV_Adj);
  4887  0D35  0825               	movf	((_cmd+1)^(0+128)+4),w
  4888  0D36  0020               	movlb	0	; select bank0
  4889  0D37  00DB               	movwf	adcTodac@data+1
  4890  0D38  0021               	movlb	1	; select bank1
  4891  0D39  0824               	movf	(_cmd^(0+128)+4),w
  4892  0D3A  0020               	movlb	0	; select bank0
  4893  0D3B  00DA               	movwf	adcTodac@data
  4894  0D3C  318A  2261  318D   	fcall	_adcTodac
  4895  0D3F  0020               	movlb	0	; select bank0
  4896  0D40  085B               	movf	?_adcTodac+1,w
  4897  0D41  00E6               	movwf	event_btn_Expose@temp+1
  4898  0D42  085A               	movf	?_adcTodac,w
  4899  0D43  00E5               	movwf	event_btn_Expose@temp
  4900                           
  4901                           ;ap.c: 20: I2C_DAC_Write(0x00, &temp);
  4902  0D44  3065               	movlw	(low (event_btn_Expose@temp| 0))& (0+255)
  4903  0D45  00E3               	movwf	??_event_btn_Expose
  4904  0D46  0863               	movf	??_event_btn_Expose,w
  4905  0D47  00B9               	movwf	I2C_DAC_Write@data
  4906  0D48  3000               	movlw	0
  4907  0D49  318A  22F2  318D   	fcall	_I2C_DAC_Write
  4908                           
  4909                           ;ap.c: 21: pwmInit_ccp3(1000, 50);
  4910  0D4C  30E8               	movlw	232
  4911  0D4D  0020               	movlb	0	; select bank0
  4912  0D4E  00DA               	movwf	pwmInit_ccp3@freq
  4913  0D4F  3003               	movlw	3
  4914  0D50  00DB               	movwf	pwmInit_ccp3@freq+1
  4915  0D51  3000               	movlw	0
  4916  0D52  00DC               	movwf	pwmInit_ccp3@duty
  4917  0D53  3048               	movlw	72
  4918  0D54  00DD               	movwf	pwmInit_ccp3@duty+1
  4919  0D55  3042               	movlw	66
  4920  0D56  00DE               	movwf	pwmInit_ccp3@duty+2
  4921  0D57  3186  26DD  318D   	fcall	_pwmInit_ccp3
  4922                           
  4923                           ;ap.c: 22: pwmStart_ccp3();
  4924  0D5A  3188  2069  318D   	fcall	_pwmStart_ccp3
  4925                           
  4926                           ;ap.c: 24: cmd.c_anodeCurrent_cnt = 5;
  4927  0D5D  3000               	movlw	0
  4928  0D5E  0021               	movlb	1	; select bank1
  4929  0D5F  00AD               	movwf	(_cmd^(0+128)+13)
  4930  0D60  30A0               	movlw	160
  4931  0D61  00AE               	movwf	((_cmd+1)^(0+128)+13)
  4932  0D62  3040               	movlw	64
  4933  0D63  00AF               	movwf	((_cmd+2)^(0+128)+13)
  4934                           
  4935                           ;ap.c: 25: pwmInit_ccp2(1000, 0);
  4936  0D64  30E8               	movlw	232
  4937  0D65  0020               	movlb	0	; select bank0
  4938  0D66  00DA               	movwf	pwmInit_ccp2@freq
  4939  0D67  3003               	movlw	3
  4940  0D68  00DB               	movwf	pwmInit_ccp2@freq+1
  4941  0D69  3000               	movlw	0
  4942  0D6A  00DC               	movwf	pwmInit_ccp2@duty
  4943  0D6B  3000               	movlw	0
  4944  0D6C  00DD               	movwf	pwmInit_ccp2@duty+1
  4945  0D6D  3000               	movlw	0
  4946  0D6E  00DE               	movwf	pwmInit_ccp2@duty+2
  4947  0D6F  318F  2766  318D   	fcall	_pwmInit_ccp2
  4948                           
  4949                           ;ap.c: 26: pwmStart_ccp2();
  4950  0D72  3188  205B  318D   	fcall	_pwmStart_ccp2
  4951                           
  4952                           ;ap.c: 27: timerEventStart(&Timer[e_anodeCurrent]);
  4953  0D75  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4954  0D76  3188  2008         	fcall	_timerEventStart
  4955                           
  4956                           ;ap.c: 32: LATDbits.LATD3 = 1;
  4957  0D78  0022               	movlb	2	; select bank2
  4958  0D79  158F               	bsf	15,3	;volatile
  4959                           
  4960                           ;ap.c: 33: LATEbits.LATE3 = 0;
  4961  0D7A  1190               	bcf	16,3	;volatile
  4962                           
  4963                           ;ap.c: 35: LATCbits.LATC0 = 0;
  4964  0D7B  100E               	bcf	14,0	;volatile
  4965                           
  4966                           ;ap.c: 36: LATCbits.LATC1 = 0;
  4967  0D7C  108E               	bcf	14,1	;volatile
  4968                           
  4969                           ;ap.c: 38: cmd.f_XRAY_ON = 1;
  4970  0D7D  0021               	movlb	1	; select bank1
  4971  0D7E  01AC               	clrf	(_cmd^(0+128)+12)
  4972  0D7F  0AAC               	incf	(_cmd^(0+128)+12),f
  4973  0D80                     l2356:	
  4974                           
  4975                           ;ap.c: 40: }
  4976                           ;ap.c: 42: return ret;
  4977  0D80  0020               	movlb	0	; select bank0
  4978  0D81  0864               	movf	event_btn_Expose@ret,w
  4979  0D82  0008               	return
  4980  0D83                     __end_of_event_btn_Expose:	
  4981                           
  4982                           	psect	text12
  4983  0869                     __ptext12:	
  4984 ;; *************** function _pwmStart_ccp3 *****************
  4985 ;; Defined at:
  4986 ;;		line 87 in file "pwm.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    2
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_event_btn_Expose
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _pwmStart_ccp3
  5016  0869                     _pwmStart_ccp3:	
  5017                           
  5018                           ;pwm.c: 90: CCP3CONbits.CCP3M3 = 1;
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _pwmStart_ccp3: [wreg+status,2+status,0]
  5022  0869  0026               	movlb	6	; select bank6
  5023  086A  1593               	bsf	19,3	;volatile
  5024                           
  5025                           ;pwm.c: 91: CCP3CONbits.CCP3M2 = 1;
  5026  086B  1513               	bsf	19,2	;volatile
  5027                           
  5028                           ;pwm.c: 92: CCP3CONbits.CCP3M1 = 0;
  5029  086C  1093               	bcf	19,1	;volatile
  5030                           
  5031                           ;pwm.c: 93: CCP3CONbits.CCP3M0 = 0;
  5032  086D  1013               	bcf	19,0	;volatile
  5033                           
  5034                           ;pwm.c: 95: T4CONbits.T4CKPS = 0b10;
  5035  086E  0028               	movlb	8	; select bank8
  5036  086F  0817               	movf	23,w	;volatile
  5037  0870  39FC               	andlw	-4
  5038  0871  3802               	iorlw	2
  5039  0872  0097               	movwf	23	;volatile
  5040                           
  5041                           ;pwm.c: 96: T4CONbits.T4OUTPS = 0b0000;
  5042  0873  3087               	movlw	-121
  5043  0874  0597               	andwf	23,f	;volatile
  5044                           
  5045                           ;pwm.c: 97: T4CONbits.TMR4ON = 1;
  5046  0875  1517               	bsf	23,2	;volatile
  5047  0876  0008               	return
  5048  0877                     __end_of_pwmStart_ccp3:	
  5049                           
  5050                           	psect	text13
  5051  085B                     __ptext13:	
  5052 ;; *************** function _pwmStart_ccp2 *****************
  5053 ;; Defined at:
  5054 ;;		line 47 in file "pwm.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;		None
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;Total ram usage:        0 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    2
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_event_btn_Expose
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function _pwmStart_ccp2
  5084  085B                     _pwmStart_ccp2:	
  5085                           
  5086                           ;pwm.c: 49: CCP2CONbits.CCP2M = 0b1100;
  5087                           
  5088                           ;incstack = 0
  5089                           ; Regs used in _pwmStart_ccp2: [wreg+status,2+status,0]
  5090  085B  0025               	movlb	5	; select bank5
  5091  085C  081A               	movf	26,w	;volatile
  5092  085D  39F0               	andlw	-16
  5093  085E  380C               	iorlw	12
  5094  085F  009A               	movwf	26	;volatile
  5095                           
  5096                           ;pwm.c: 51: T2CONbits.T2CKPS = 0b10;
  5097  0860  0020               	movlb	0	; select bank0
  5098  0861  081C               	movf	28,w	;volatile
  5099  0862  39FC               	andlw	-4
  5100  0863  3802               	iorlw	2
  5101  0864  009C               	movwf	28	;volatile
  5102                           
  5103                           ;pwm.c: 52: T2CONbits.T2OUTPS = 0b0000;
  5104  0865  3087               	movlw	-121
  5105  0866  059C               	andwf	28,f	;volatile
  5106                           
  5107                           ;pwm.c: 53: T2CONbits.TMR2ON = 1;
  5108  0867  151C               	bsf	28,2	;volatile
  5109  0868  0008               	return
  5110  0869                     __end_of_pwmStart_ccp2:	
  5111                           
  5112                           	psect	text14
  5113  06DD                     __ptext14:	
  5114 ;; *************** function _pwmInit_ccp3 *****************
  5115 ;; Defined at:
  5116 ;;		line 62 in file "pwm.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  freq            2   58[BANK0 ] unsigned int 
  5119 ;;  duty            3   60[BANK0 ] float 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  ccpr3l_ccp3c    2   65[BANK0 ] unsigned int 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      void 
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0, pclath, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5131 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;Total ram usage:        9 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    4
  5138 ;; This function calls:
  5139 ;;		___aldiv
  5140 ;;		___awtoft
  5141 ;;		___ftdiv
  5142 ;;		___ftmul
  5143 ;;		___fttol
  5144 ;; This function is called by:
  5145 ;;		_event_btn_Expose
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           
  5150                           ;psect for function _pwmInit_ccp3
  5151  06DD                     _pwmInit_ccp3:	
  5152                           
  5153                           ;pwm.c: 64: unsigned int ccpr3l_ccp3con;
  5154                           ;pwm.c: 67: CCP3CONbits.CCP3M3 = 1;
  5155                           
  5156                           ;incstack = 0
  5157                           ; Regs used in _pwmInit_ccp3: [wreg+status,2+status,0+pclath+cstack]
  5158  06DD  0026               	movlb	6	; select bank6
  5159  06DE  1593               	bsf	19,3	;volatile
  5160                           
  5161                           ;pwm.c: 68: CCP3CONbits.CCP3M2 = 1;
  5162  06DF  1513               	bsf	19,2	;volatile
  5163                           
  5164                           ;pwm.c: 69: CCP3CONbits.CCP3M1 = 0;
  5165  06E0  1093               	bcf	19,1	;volatile
  5166                           
  5167                           ;pwm.c: 70: CCP3CONbits.CCP3M0 = 0;
  5168  06E1  1013               	bcf	19,0	;volatile
  5169                           
  5170                           ;pwm.c: 72: CCP3CONbits.P3M1 = 0;
  5171  06E2  1393               	bcf	19,7	;volatile
  5172                           
  5173                           ;pwm.c: 73: CCP3CONbits.P3M0 = 0;
  5174  06E3  1313               	bcf	19,6	;volatile
  5175                           
  5176                           ;pwm.c: 75: CCPTMRS0bits.C3TSEL = 0b01;
  5177  06E4  0025               	movlb	5	; select bank5
  5178  06E5  081E               	movf	30,w	;volatile
  5179  06E6  39CF               	andlw	-49
  5180  06E7  3810               	iorlw	16
  5181  06E8  009E               	movwf	30	;volatile
  5182                           
  5183                           ;pwm.c: 78: PR4 = (4000000 / (4*freq*16)) - 1;
  5184  06E9  0020               	movlb	0	; select bank0
  5185  06EA  085B               	movf	pwmInit_ccp3@freq+1,w
  5186  06EB  00E0               	movwf	??_pwmInit_ccp3+1
  5187  06EC  085A               	movf	pwmInit_ccp3@freq,w
  5188  06ED  00DF               	movwf	??_pwmInit_ccp3
  5189  06EE  35DF               	lslf	??_pwmInit_ccp3,f
  5190  06EF  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5191  06F0  35DF               	lslf	??_pwmInit_ccp3,f
  5192  06F1  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5193  06F2  0EDF               	swapf	??_pwmInit_ccp3,f
  5194  06F3  0EE0               	swapf	??_pwmInit_ccp3+1,f
  5195  06F4  30F0               	movlw	240
  5196  06F5  05E0               	andwf	??_pwmInit_ccp3+1,f
  5197  06F6  085F               	movf	??_pwmInit_ccp3,w
  5198  06F7  390F               	andlw	15
  5199  06F8  04E0               	iorwf	??_pwmInit_ccp3+1,f
  5200  06F9  30F0               	movlw	240
  5201  06FA  05DF               	andwf	??_pwmInit_ccp3,f
  5202  06FB  085F               	movf	??_pwmInit_ccp3,w
  5203  06FC  00A6               	movwf	___aldiv@divisor
  5204  06FD  0860               	movf	??_pwmInit_ccp3+1,w
  5205  06FE  00A7               	movwf	___aldiv@divisor+1
  5206  06FF  01A8               	clrf	___aldiv@divisor+2
  5207  0700  01A9               	clrf	___aldiv@divisor+3
  5208  0701  3000               	movlw	0
  5209  0702  00AD               	movwf	___aldiv@dividend+3
  5210  0703  303D               	movlw	61
  5211  0704  00AC               	movwf	___aldiv@dividend+2
  5212  0705  3009               	movlw	9
  5213  0706  00AB               	movwf	___aldiv@dividend+1
  5214  0707  3000               	movlw	0
  5215  0708  00AA               	movwf	___aldiv@dividend
  5216  0709  318E  26E4  3186   	fcall	___aldiv
  5217  070C  0020               	movlb	0	; select bank0
  5218  070D  0826               	movf	?___aldiv,w
  5219  070E  3EFF               	addlw	255
  5220  070F  0028               	movlb	8	; select bank8
  5221  0710  0096               	movwf	22	;volatile
  5222                           
  5223                           ;pwm.c: 79: ccpr3l_ccp3con =(4*(PR4+1))*((float)duty/100);
  5224  0711  0816               	movf	22,w	;volatile
  5225  0712  0020               	movlb	0	; select bank0
  5226  0713  00DF               	movwf	??_pwmInit_ccp3
  5227  0714  01E0               	clrf	??_pwmInit_ccp3+1
  5228  0715  35DF               	lslf	??_pwmInit_ccp3,f
  5229  0716  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5230  0717  35DF               	lslf	??_pwmInit_ccp3,f
  5231  0718  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5232  0719  085F               	movf	??_pwmInit_ccp3,w
  5233  071A  3E04               	addlw	4
  5234  071B  00A8               	movwf	___awtoft@c
  5235  071C  3000               	movlw	0
  5236  071D  3D60               	addwfc	??_pwmInit_ccp3+1,w
  5237  071E  00A9               	movwf	___awtoft@c+1
  5238  071F  3189  219C  3186   	fcall	___awtoft
  5239  0722  0020               	movlb	0	; select bank0
  5240  0723  0828               	movf	?___awtoft,w
  5241  0724  00BF               	movwf	___ftmul@f2
  5242  0725  0829               	movf	?___awtoft+1,w
  5243  0726  00C0               	movwf	___ftmul@f2+1
  5244  0727  082A               	movf	?___awtoft+2,w
  5245  0728  00C1               	movwf	___ftmul@f2+2
  5246  0729  085C               	movf	pwmInit_ccp3@duty,w
  5247  072A  00AF               	movwf	___ftdiv@f1
  5248  072B  085D               	movf	pwmInit_ccp3@duty+1,w
  5249  072C  00B0               	movwf	___ftdiv@f1+1
  5250  072D  085E               	movf	pwmInit_ccp3@duty+2,w
  5251  072E  00B1               	movwf	___ftdiv@f1+2
  5252  072F  3000               	movlw	0
  5253  0730  00AC               	movwf	___ftdiv@f2
  5254  0731  30C8               	movlw	200
  5255  0732  00AD               	movwf	___ftdiv@f2+1
  5256  0733  3042               	movlw	66
  5257  0734  00AE               	movwf	___ftdiv@f2+2
  5258  0735  3185  2592  3186   	fcall	___ftdiv
  5259  0738  0020               	movlb	0	; select bank0
  5260  0739  082C               	movf	?___ftdiv,w
  5261  073A  00BC               	movwf	___ftmul@f1
  5262  073B  082D               	movf	?___ftdiv+1,w
  5263  073C  00BD               	movwf	___ftmul@f1+1
  5264  073D  082E               	movf	?___ftdiv+2,w
  5265  073E  00BE               	movwf	___ftmul@f1+2
  5266  073F  3184  24DE  3186   	fcall	___ftmul
  5267  0742  0020               	movlb	0	; select bank0
  5268  0743  083C               	movf	?___ftmul,w
  5269  0744  00CC               	movwf	___fttol@f1
  5270  0745  083D               	movf	?___ftmul+1,w
  5271  0746  00CD               	movwf	___fttol@f1+1
  5272  0747  083E               	movf	?___ftmul+2,w
  5273  0748  00CE               	movwf	___fttol@f1+2
  5274  0749  3187  2778  3186   	fcall	___fttol
  5275  074C  0020               	movlb	0	; select bank0
  5276  074D  084D               	movf	?___fttol+1,w
  5277  074E  00E2               	movwf	pwmInit_ccp3@ccpr3l_ccp3con+1
  5278  074F  084C               	movf	?___fttol,w
  5279  0750  00E1               	movwf	pwmInit_ccp3@ccpr3l_ccp3con
  5280                           
  5281                           ;pwm.c: 81: CCPR3L = (ccpr3l_ccp3con ) >> 2;
  5282  0751  0862               	movf	pwmInit_ccp3@ccpr3l_ccp3con+1,w
  5283  0752  00E0               	movwf	??_pwmInit_ccp3+1
  5284  0753  0861               	movf	pwmInit_ccp3@ccpr3l_ccp3con,w
  5285  0754  00DF               	movwf	??_pwmInit_ccp3
  5286  0755  36E0               	lsrf	??_pwmInit_ccp3+1,f
  5287  0756  0CDF               	rrf	??_pwmInit_ccp3,f
  5288  0757  36E0               	lsrf	??_pwmInit_ccp3+1,f
  5289  0758  0CDF               	rrf	??_pwmInit_ccp3,f
  5290  0759  085F               	movf	??_pwmInit_ccp3,w
  5291  075A  0026               	movlb	6	; select bank6
  5292  075B  0091               	movwf	17	;volatile
  5293                           
  5294                           ;pwm.c: 82: CCP3CONbits.DC3B0 = ccpr3l_ccp3con & 0x0001;
  5295  075C  0020               	movlb	0	; select bank0
  5296  075D  0861               	movf	pwmInit_ccp3@ccpr3l_ccp3con,w
  5297  075E  3901               	andlw	1
  5298  075F  00DF               	movwf	??_pwmInit_ccp3
  5299  0760  0EDF               	swapf	??_pwmInit_ccp3,f
  5300  0761  0026               	movlb	6	; select bank6
  5301  0762  0813               	movf	19,w	;volatile
  5302  0763  0020               	movlb	0	; select bank0
  5303  0764  065F               	xorwf	??_pwmInit_ccp3,w
  5304  0765  39EF               	andlw	-17
  5305  0766  065F               	xorwf	??_pwmInit_ccp3,w
  5306  0767  0026               	movlb	6	; select bank6
  5307  0768  0093               	movwf	19	;volatile
  5308                           
  5309                           ;pwm.c: 83: CCP3CONbits.DC3B1 = ccpr3l_ccp3con & 0x0010;
  5310  0769  0020               	movlb	0	; select bank0
  5311  076A  0861               	movf	pwmInit_ccp3@ccpr3l_ccp3con,w
  5312  076B  3910               	andlw	16
  5313  076C  00DF               	movwf	??_pwmInit_ccp3
  5314  076D  0EDF               	swapf	??_pwmInit_ccp3,f
  5315  076E  0DDF               	rlf	??_pwmInit_ccp3,f
  5316  076F  0026               	movlb	6	; select bank6
  5317  0770  0813               	movf	19,w	;volatile
  5318  0771  0020               	movlb	0	; select bank0
  5319  0772  065F               	xorwf	??_pwmInit_ccp3,w
  5320  0773  39DF               	andlw	-33
  5321  0774  065F               	xorwf	??_pwmInit_ccp3,w
  5322  0775  0026               	movlb	6	; select bank6
  5323  0776  0093               	movwf	19	;volatile
  5324  0777  0008               	return
  5325  0778                     __end_of_pwmInit_ccp3:	
  5326                           
  5327                           	psect	text15
  5328  0A61                     __ptext15:	
  5329 ;; *************** function _adcTodac *****************
  5330 ;; Defined at:
  5331 ;;		line 82 in file "app.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  data            2   58[BANK0 ] unsigned int 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  temp            3   60[BANK0 ] unsigned int 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  2   58[BANK0 ] int 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, pclath, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;Total ram usage:        5 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    4
  5352 ;; This function calls:
  5353 ;;		___ftmul
  5354 ;;		___fttol
  5355 ;;		___lwtoft
  5356 ;; This function is called by:
  5357 ;;		_event_btn_Expose
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _adcTodac
  5363  0A61                     _adcTodac:	
  5364                           
  5365                           ;app.c: 84: long double temp;
  5366                           ;app.c: 87: temp = data * 3.8;
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _adcTodac: [wreg+status,2+status,0+pclath+cstack]
  5370  0A61  3033               	movlw	51
  5371  0A62  0020               	movlb	0	; select bank0
  5372  0A63  00BC               	movwf	___ftmul@f1
  5373  0A64  3073               	movlw	115
  5374  0A65  00BD               	movwf	___ftmul@f1+1
  5375  0A66  3040               	movlw	64
  5376  0A67  00BE               	movwf	___ftmul@f1+2
  5377  0A68  085B               	movf	adcTodac@data+1,w
  5378  0A69  00A9               	movwf	___lwtoft@c+1
  5379  0A6A  085A               	movf	adcTodac@data,w
  5380  0A6B  00A8               	movwf	___lwtoft@c
  5381  0A6C  3188  20DD  318A   	fcall	___lwtoft
  5382  0A6F  0020               	movlb	0	; select bank0
  5383  0A70  0828               	movf	?___lwtoft,w
  5384  0A71  00BF               	movwf	___ftmul@f2
  5385  0A72  0829               	movf	?___lwtoft+1,w
  5386  0A73  00C0               	movwf	___ftmul@f2+1
  5387  0A74  082A               	movf	?___lwtoft+2,w
  5388  0A75  00C1               	movwf	___ftmul@f2+2
  5389  0A76  3184  24DE  318A   	fcall	___ftmul
  5390  0A79  0020               	movlb	0	; select bank0
  5391  0A7A  083C               	movf	?___ftmul,w
  5392  0A7B  00DC               	movwf	adcTodac@temp
  5393  0A7C  083D               	movf	?___ftmul+1,w
  5394  0A7D  00DD               	movwf	adcTodac@temp+1
  5395  0A7E  083E               	movf	?___ftmul+2,w
  5396  0A7F  00DE               	movwf	adcTodac@temp+2
  5397                           
  5398                           ;app.c: 90: return (int)temp;
  5399  0A80  085C               	movf	adcTodac@temp,w
  5400  0A81  00CC               	movwf	___fttol@f1
  5401  0A82  085D               	movf	adcTodac@temp+1,w
  5402  0A83  00CD               	movwf	___fttol@f1+1
  5403  0A84  085E               	movf	adcTodac@temp+2,w
  5404  0A85  00CE               	movwf	___fttol@f1+2
  5405  0A86  3187  2778         	fcall	___fttol
  5406  0A88  0020               	movlb	0	; select bank0
  5407  0A89  084D               	movf	?___fttol+1,w
  5408  0A8A  00DB               	movwf	?_adcTodac+1
  5409  0A8B  084C               	movf	?___fttol,w
  5410  0A8C  00DA               	movwf	?_adcTodac
  5411  0A8D  0008               	return
  5412  0A8E                     __end_of_adcTodac:	
  5413                           
  5414                           	psect	text16
  5415  08B6                     __ptext16:	
  5416 ;; *************** function ___bmul *****************
  5417 ;; Defined at:
  5418 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  multiplier      1    wreg     unsigned char 
  5421 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5424 ;;  product         1    2[BANK0 ] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      unsigned char 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5434 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;Total ram usage:        4 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    2
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_processButtons
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function ___bmul
  5450  08B6                     ___bmul:	
  5451                           
  5452                           ;incstack = 0
  5453                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5454                           ;___bmul@multiplier stored from wreg
  5455  08B6  0020               	movlb	0	; select bank0
  5456  08B7  00A3               	movwf	___bmul@multiplier
  5457  08B8  01A2               	clrf	___bmul@product
  5458  08B9                     l2416:	
  5459  08B9  1C23               	btfss	___bmul@multiplier,0
  5460  08BA  28BF               	goto	l2420
  5461  08BB  0820               	movf	___bmul@multiplicand,w
  5462  08BC  00A1               	movwf	??___bmul
  5463  08BD  0821               	movf	??___bmul,w
  5464  08BE  07A2               	addwf	___bmul@product,f
  5465  08BF                     l2420:	
  5466  08BF  1003               	clrc
  5467  08C0  0DA0               	rlf	___bmul@multiplicand,f
  5468  08C1  1003               	clrc
  5469  08C2  0CA3               	rrf	___bmul@multiplier,f
  5470  08C3  0823               	movf	___bmul@multiplier,w
  5471  08C4  1D03               	btfss	3,2
  5472  08C5  28B9               	goto	l2416
  5473  08C6  0822               	movf	___bmul@product,w
  5474  08C7  0008               	return
  5475  08C8                     __end_of___bmul:	
  5476                           
  5477                           	psect	text17
  5478  063B                     __ptext17:	
  5479 ;; *************** function _disp_ma_result *****************
  5480 ;; Defined at:
  5481 ;;		line 43 in file "app.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  data            2   58[BANK0 ] unsigned int 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  temp            3   61[BANK0 ] float 
  5486 ;;  temp2           2   64[BANK0 ] unsigned int 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0, pclath, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;Total ram usage:        8 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    6
  5503 ;; This function calls:
  5504 ;;		_I2C_AS1115_Write
  5505 ;;		___ftdiv
  5506 ;;		___ftmul
  5507 ;;		___fttol
  5508 ;;		___lwdiv
  5509 ;;		___lwmod
  5510 ;;		___lwtoft
  5511 ;;		___wmul
  5512 ;; This function is called by:
  5513 ;;		_event_display
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           
  5518                           ;psect for function _disp_ma_result
  5519  063B                     _disp_ma_result:	
  5520                           
  5521                           ;app.c: 45: float temp;
  5522                           ;app.c: 46: uint16_t temp2=0;
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in _disp_ma_result: [wreg+status,2+status,0+pclath+cstack]
  5526  063B  0020               	movlb	0	; select bank0
  5527  063C  01E0               	clrf	disp_ma_result@temp2
  5528  063D  01E1               	clrf	disp_ma_result@temp2+1
  5529                           
  5530                           ;app.c: 48: temp = (float)(data*10)/811;
  5531  063E  30C0               	movlw	192
  5532  063F  00AC               	movwf	___ftdiv@f2
  5533  0640  304A               	movlw	74
  5534  0641  00AD               	movwf	___ftdiv@f2+1
  5535  0642  3044               	movlw	68
  5536  0643  00AE               	movwf	___ftdiv@f2+2
  5537  0644  085B               	movf	disp_ma_result@data+1,w
  5538  0645  00A1               	movwf	___wmul@multiplier+1
  5539  0646  085A               	movf	disp_ma_result@data,w
  5540  0647  00A0               	movwf	___wmul@multiplier
  5541  0648  300A               	movlw	10
  5542  0649  00A2               	movwf	___wmul@multiplicand
  5543  064A  3000               	movlw	0
  5544  064B  00A3               	movwf	___wmul@multiplicand+1
  5545  064C  3189  2121  3186   	fcall	___wmul
  5546  064F  0020               	movlb	0	; select bank0
  5547  0650  0821               	movf	?___wmul+1,w
  5548  0651  00A9               	movwf	___lwtoft@c+1
  5549  0652  0820               	movf	?___wmul,w
  5550  0653  00A8               	movwf	___lwtoft@c
  5551  0654  3188  20DD  3186   	fcall	___lwtoft
  5552  0657  0020               	movlb	0	; select bank0
  5553  0658  0828               	movf	?___lwtoft,w
  5554  0659  00AF               	movwf	___ftdiv@f1
  5555  065A  0829               	movf	?___lwtoft+1,w
  5556  065B  00B0               	movwf	___ftdiv@f1+1
  5557  065C  082A               	movf	?___lwtoft+2,w
  5558  065D  00B1               	movwf	___ftdiv@f1+2
  5559  065E  3185  2592  3186   	fcall	___ftdiv
  5560  0661  0020               	movlb	0	; select bank0
  5561  0662  082C               	movf	?___ftdiv,w
  5562  0663  00DD               	movwf	disp_ma_result@temp
  5563  0664  082D               	movf	?___ftdiv+1,w
  5564  0665  00DE               	movwf	disp_ma_result@temp+1
  5565  0666  082E               	movf	?___ftdiv+2,w
  5566  0667  00DF               	movwf	disp_ma_result@temp+2
  5567                           
  5568                           ;app.c: 49: temp2 = (uint16_t)(temp*10);
  5569  0668  085D               	movf	disp_ma_result@temp,w
  5570  0669  00BF               	movwf	___ftmul@f2
  5571  066A  085E               	movf	disp_ma_result@temp+1,w
  5572  066B  00C0               	movwf	___ftmul@f2+1
  5573  066C  085F               	movf	disp_ma_result@temp+2,w
  5574  066D  00C1               	movwf	___ftmul@f2+2
  5575  066E  3000               	movlw	0
  5576  066F  00BC               	movwf	___ftmul@f1
  5577  0670  3020               	movlw	32
  5578  0671  00BD               	movwf	___ftmul@f1+1
  5579  0672  3041               	movlw	65
  5580  0673  00BE               	movwf	___ftmul@f1+2
  5581  0674  3184  24DE  3186   	fcall	___ftmul
  5582  0677  0020               	movlb	0	; select bank0
  5583  0678  083C               	movf	?___ftmul,w
  5584  0679  00CC               	movwf	___fttol@f1
  5585  067A  083D               	movf	?___ftmul+1,w
  5586  067B  00CD               	movwf	___fttol@f1+1
  5587  067C  083E               	movf	?___ftmul+2,w
  5588  067D  00CE               	movwf	___fttol@f1+2
  5589  067E  3187  2778  3186   	fcall	___fttol
  5590  0681  0020               	movlb	0	; select bank0
  5591  0682  084D               	movf	?___fttol+1,w
  5592  0683  00E1               	movwf	disp_ma_result@temp2+1
  5593  0684  084C               	movf	?___fttol,w
  5594  0685  00E0               	movwf	disp_ma_result@temp2
  5595                           
  5596                           ;app.c: 52: I2C_AS1115_Write(DIGIT3,(temp2/100)%10);
  5597  0686  300A               	movlw	10
  5598  0687  00A8               	movwf	___lwmod@divisor
  5599  0688  3000               	movlw	0
  5600  0689  00A9               	movwf	___lwmod@divisor+1
  5601  068A  3064               	movlw	100
  5602  068B  00A0               	movwf	___lwdiv@divisor
  5603  068C  3000               	movlw	0
  5604  068D  00A1               	movwf	___lwdiv@divisor+1
  5605  068E  0861               	movf	disp_ma_result@temp2+1,w
  5606  068F  00A3               	movwf	___lwdiv@dividend+1
  5607  0690  0860               	movf	disp_ma_result@temp2,w
  5608  0691  00A2               	movwf	___lwdiv@dividend
  5609  0692  318A  22BD  3186   	fcall	___lwdiv
  5610  0695  0020               	movlb	0	; select bank0
  5611  0696  0821               	movf	?___lwdiv+1,w
  5612  0697  00AB               	movwf	___lwmod@dividend+1
  5613  0698  0820               	movf	?___lwdiv,w
  5614  0699  00AA               	movwf	___lwmod@dividend
  5615  069A  318A  2234  3186   	fcall	___lwmod
  5616  069D  0020               	movlb	0	; select bank0
  5617  069E  0828               	movf	?___lwmod,w
  5618  069F  00DC               	movwf	??_disp_ma_result
  5619  06A0  085C               	movf	??_disp_ma_result,w
  5620  06A1  00B9               	movwf	I2C_AS1115_Write@data
  5621  06A2  3004               	movlw	4
  5622  06A3  3189  215B  3186   	fcall	_I2C_AS1115_Write
  5623                           
  5624                           ;app.c: 53: I2C_AS1115_Write(DIGIT4,(temp2/10)%10 | 0x80);
  5625  06A6  300A               	movlw	10
  5626  06A7  0020               	movlb	0	; select bank0
  5627  06A8  00A8               	movwf	___lwmod@divisor
  5628  06A9  3000               	movlw	0
  5629  06AA  00A9               	movwf	___lwmod@divisor+1
  5630  06AB  300A               	movlw	10
  5631  06AC  00A0               	movwf	___lwdiv@divisor
  5632  06AD  3000               	movlw	0
  5633  06AE  00A1               	movwf	___lwdiv@divisor+1
  5634  06AF  0861               	movf	disp_ma_result@temp2+1,w
  5635  06B0  00A3               	movwf	___lwdiv@dividend+1
  5636  06B1  0860               	movf	disp_ma_result@temp2,w
  5637  06B2  00A2               	movwf	___lwdiv@dividend
  5638  06B3  318A  22BD  3186   	fcall	___lwdiv
  5639  06B6  0020               	movlb	0	; select bank0
  5640  06B7  0821               	movf	?___lwdiv+1,w
  5641  06B8  00AB               	movwf	___lwmod@dividend+1
  5642  06B9  0820               	movf	?___lwdiv,w
  5643  06BA  00AA               	movwf	___lwmod@dividend
  5644  06BB  318A  2234  3186   	fcall	___lwmod
  5645  06BE  0020               	movlb	0	; select bank0
  5646  06BF  0828               	movf	?___lwmod,w
  5647  06C0  3880               	iorlw	128
  5648  06C1  00DC               	movwf	??_disp_ma_result
  5649  06C2  085C               	movf	??_disp_ma_result,w
  5650  06C3  00B9               	movwf	I2C_AS1115_Write@data
  5651  06C4  3005               	movlw	5
  5652  06C5  3189  215B  3186   	fcall	_I2C_AS1115_Write
  5653                           
  5654                           ;app.c: 54: I2C_AS1115_Write(DIGIT5,temp2%10);
  5655  06C8  300A               	movlw	10
  5656  06C9  0020               	movlb	0	; select bank0
  5657  06CA  00A8               	movwf	___lwmod@divisor
  5658  06CB  3000               	movlw	0
  5659  06CC  00A9               	movwf	___lwmod@divisor+1
  5660  06CD  0861               	movf	disp_ma_result@temp2+1,w
  5661  06CE  00AB               	movwf	___lwmod@dividend+1
  5662  06CF  0860               	movf	disp_ma_result@temp2,w
  5663  06D0  00AA               	movwf	___lwmod@dividend
  5664  06D1  318A  2234  3186   	fcall	___lwmod
  5665  06D4  0020               	movlb	0	; select bank0
  5666  06D5  0828               	movf	?___lwmod,w
  5667  06D6  00DC               	movwf	??_disp_ma_result
  5668  06D7  085C               	movf	??_disp_ma_result,w
  5669  06D8  00B9               	movwf	I2C_AS1115_Write@data
  5670  06D9  3006               	movlw	6
  5671  06DA  3189  215B         	fcall	_I2C_AS1115_Write
  5672  06DC  0008               	return
  5673  06DD                     __end_of_disp_ma_result:	
  5674                           
  5675                           	psect	text18
  5676  0039                     __ptext18:	
  5677 ;; *************** function _disp_kv *****************
  5678 ;; Defined at:
  5679 ;;		line 58 in file "app.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  data            2   58[BANK0 ] unsigned int 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  temp            3   61[BANK0 ] float 
  5684 ;;  temp2           2   64[BANK0 ] unsigned int 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2, status,0, pclath, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;Total ram usage:        8 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    6
  5701 ;; This function calls:
  5702 ;;		_I2C_AS1115_Write
  5703 ;;		___ftdiv
  5704 ;;		___ftge
  5705 ;;		___ftmul
  5706 ;;		___fttol
  5707 ;;		___lwdiv
  5708 ;;		___lwmod
  5709 ;;		___lwtoft
  5710 ;;		___wmul
  5711 ;; This function is called by:
  5712 ;;		_event_display
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           
  5717                           ;psect for function _disp_kv
  5718  0039                     _disp_kv:	
  5719                           
  5720                           ;app.c: 60: float temp;
  5721                           ;app.c: 61: uint16_t temp2=0;
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _disp_kv: [wreg+status,2+status,0+pclath+cstack]
  5725  0039  0020               	movlb	0	; select bank0
  5726  003A  01E0               	clrf	disp_kv@temp2
  5727  003B  01E1               	clrf	disp_kv@temp2+1
  5728                           
  5729                           ;app.c: 63: temp = (float)(data*15)/811;
  5730  003C  30C0               	movlw	192
  5731  003D  00AC               	movwf	___ftdiv@f2
  5732  003E  304A               	movlw	74
  5733  003F  00AD               	movwf	___ftdiv@f2+1
  5734  0040  3044               	movlw	68
  5735  0041  00AE               	movwf	___ftdiv@f2+2
  5736  0042  085B               	movf	disp_kv@data+1,w
  5737  0043  00A1               	movwf	___wmul@multiplier+1
  5738  0044  085A               	movf	disp_kv@data,w
  5739  0045  00A0               	movwf	___wmul@multiplier
  5740  0046  300F               	movlw	15
  5741  0047  00A2               	movwf	___wmul@multiplicand
  5742  0048  3000               	movlw	0
  5743  0049  00A3               	movwf	___wmul@multiplicand+1
  5744  004A  3189  2121  3180   	fcall	___wmul
  5745  004D  0020               	movlb	0	; select bank0
  5746  004E  0821               	movf	?___wmul+1,w
  5747  004F  00A9               	movwf	___lwtoft@c+1
  5748  0050  0820               	movf	?___wmul,w
  5749  0051  00A8               	movwf	___lwtoft@c
  5750  0052  3188  20DD  3180   	fcall	___lwtoft
  5751  0055  0020               	movlb	0	; select bank0
  5752  0056  0828               	movf	?___lwtoft,w
  5753  0057  00AF               	movwf	___ftdiv@f1
  5754  0058  0829               	movf	?___lwtoft+1,w
  5755  0059  00B0               	movwf	___ftdiv@f1+1
  5756  005A  082A               	movf	?___lwtoft+2,w
  5757  005B  00B1               	movwf	___ftdiv@f1+2
  5758  005C  3185  2592  3180   	fcall	___ftdiv
  5759  005F  0020               	movlb	0	; select bank0
  5760  0060  082C               	movf	?___ftdiv,w
  5761  0061  00DD               	movwf	disp_kv@temp
  5762  0062  082D               	movf	?___ftdiv+1,w
  5763  0063  00DE               	movwf	disp_kv@temp+1
  5764  0064  082E               	movf	?___ftdiv+2,w
  5765  0065  00DF               	movwf	disp_kv@temp+2
  5766                           
  5767                           ;app.c: 65: if(temp < 10)
  5768  0066  085D               	movf	disp_kv@temp,w
  5769  0067  00A0               	movwf	___ftge@ff1
  5770  0068  085E               	movf	disp_kv@temp+1,w
  5771  0069  00A1               	movwf	___ftge@ff1+1
  5772  006A  085F               	movf	disp_kv@temp+2,w
  5773  006B  00A2               	movwf	___ftge@ff1+2
  5774  006C  3000               	movlw	0
  5775  006D  00A3               	movwf	___ftge@ff2
  5776  006E  3020               	movlw	32
  5777  006F  00A4               	movwf	___ftge@ff2+1
  5778  0070  3041               	movlw	65
  5779  0071  00A5               	movwf	___ftge@ff2+2
  5780  0072  318B  232B  3180   	fcall	___ftge
  5781  0075  1803               	btfsc	3,0
  5782  0076  28ED               	goto	l2600
  5783                           
  5784                           ;app.c: 66: {
  5785                           ;app.c: 67: temp2 = (uint16_t)(temp*100);
  5786  0077  0020               	movlb	0	; select bank0
  5787  0078  085D               	movf	disp_kv@temp,w
  5788  0079  00BF               	movwf	___ftmul@f2
  5789  007A  085E               	movf	disp_kv@temp+1,w
  5790  007B  00C0               	movwf	___ftmul@f2+1
  5791  007C  085F               	movf	disp_kv@temp+2,w
  5792  007D  00C1               	movwf	___ftmul@f2+2
  5793  007E  3000               	movlw	0
  5794  007F  00BC               	movwf	___ftmul@f1
  5795  0080  30C8               	movlw	200
  5796  0081  00BD               	movwf	___ftmul@f1+1
  5797  0082  3042               	movlw	66
  5798  0083  00BE               	movwf	___ftmul@f1+2
  5799  0084  3184  24DE  3180   	fcall	___ftmul
  5800  0087  0020               	movlb	0	; select bank0
  5801  0088  083C               	movf	?___ftmul,w
  5802  0089  00CC               	movwf	___fttol@f1
  5803  008A  083D               	movf	?___ftmul+1,w
  5804  008B  00CD               	movwf	___fttol@f1+1
  5805  008C  083E               	movf	?___ftmul+2,w
  5806  008D  00CE               	movwf	___fttol@f1+2
  5807  008E  3187  2778  3180   	fcall	___fttol
  5808  0091  0020               	movlb	0	; select bank0
  5809  0092  084D               	movf	?___fttol+1,w
  5810  0093  00E1               	movwf	disp_kv@temp2+1
  5811  0094  084C               	movf	?___fttol,w
  5812  0095  00E0               	movwf	disp_kv@temp2
  5813                           
  5814                           ;app.c: 68: I2C_AS1115_Write(DIGIT0,(temp2/100)%10 );
  5815  0096  300A               	movlw	10
  5816  0097  00A8               	movwf	___lwmod@divisor
  5817  0098  3000               	movlw	0
  5818  0099  00A9               	movwf	___lwmod@divisor+1
  5819  009A  3064               	movlw	100
  5820  009B  00A0               	movwf	___lwdiv@divisor
  5821  009C  3000               	movlw	0
  5822  009D  00A1               	movwf	___lwdiv@divisor+1
  5823  009E  0861               	movf	disp_kv@temp2+1,w
  5824  009F  00A3               	movwf	___lwdiv@dividend+1
  5825  00A0  0860               	movf	disp_kv@temp2,w
  5826  00A1  00A2               	movwf	___lwdiv@dividend
  5827  00A2  318A  22BD  3180   	fcall	___lwdiv
  5828  00A5  0020               	movlb	0	; select bank0
  5829  00A6  0821               	movf	?___lwdiv+1,w
  5830  00A7  00AB               	movwf	___lwmod@dividend+1
  5831  00A8  0820               	movf	?___lwdiv,w
  5832  00A9  00AA               	movwf	___lwmod@dividend
  5833  00AA  318A  2234  3180   	fcall	___lwmod
  5834  00AD  0020               	movlb	0	; select bank0
  5835  00AE  0828               	movf	?___lwmod,w
  5836  00AF  00DC               	movwf	??_disp_kv
  5837  00B0  085C               	movf	??_disp_kv,w
  5838  00B1  00B9               	movwf	I2C_AS1115_Write@data
  5839  00B2  3001               	movlw	1
  5840  00B3  3189  215B  3180   	fcall	_I2C_AS1115_Write
  5841                           
  5842                           ;app.c: 69: I2C_AS1115_Write(DIGIT1,(temp2/10)%10 | 0x80);
  5843  00B6  300A               	movlw	10
  5844  00B7  0020               	movlb	0	; select bank0
  5845  00B8  00A8               	movwf	___lwmod@divisor
  5846  00B9  3000               	movlw	0
  5847  00BA  00A9               	movwf	___lwmod@divisor+1
  5848  00BB  300A               	movlw	10
  5849  00BC  00A0               	movwf	___lwdiv@divisor
  5850  00BD  3000               	movlw	0
  5851  00BE  00A1               	movwf	___lwdiv@divisor+1
  5852  00BF  0861               	movf	disp_kv@temp2+1,w
  5853  00C0  00A3               	movwf	___lwdiv@dividend+1
  5854  00C1  0860               	movf	disp_kv@temp2,w
  5855  00C2  00A2               	movwf	___lwdiv@dividend
  5856  00C3  318A  22BD  3180   	fcall	___lwdiv
  5857  00C6  0020               	movlb	0	; select bank0
  5858  00C7  0821               	movf	?___lwdiv+1,w
  5859  00C8  00AB               	movwf	___lwmod@dividend+1
  5860  00C9  0820               	movf	?___lwdiv,w
  5861  00CA  00AA               	movwf	___lwmod@dividend
  5862  00CB  318A  2234  3180   	fcall	___lwmod
  5863  00CE  0020               	movlb	0	; select bank0
  5864  00CF  0828               	movf	?___lwmod,w
  5865  00D0  3880               	iorlw	128
  5866  00D1  00DC               	movwf	??_disp_kv
  5867  00D2  085C               	movf	??_disp_kv,w
  5868  00D3  00B9               	movwf	I2C_AS1115_Write@data
  5869  00D4  3002               	movlw	2
  5870  00D5  3189  215B  3180   	fcall	_I2C_AS1115_Write
  5871                           
  5872                           ;app.c: 70: I2C_AS1115_Write(DIGIT2,temp2%10);
  5873  00D8  300A               	movlw	10
  5874  00D9  0020               	movlb	0	; select bank0
  5875  00DA  00A8               	movwf	___lwmod@divisor
  5876  00DB  3000               	movlw	0
  5877  00DC  00A9               	movwf	___lwmod@divisor+1
  5878  00DD  0861               	movf	disp_kv@temp2+1,w
  5879  00DE  00AB               	movwf	___lwmod@dividend+1
  5880  00DF  0860               	movf	disp_kv@temp2,w
  5881  00E0  00AA               	movwf	___lwmod@dividend
  5882  00E1  318A  2234  3180   	fcall	___lwmod
  5883  00E4  0020               	movlb	0	; select bank0
  5884  00E5  0828               	movf	?___lwmod,w
  5885  00E6  00DC               	movwf	??_disp_kv
  5886  00E7  085C               	movf	??_disp_kv,w
  5887  00E8  00B9               	movwf	I2C_AS1115_Write@data
  5888  00E9  3003               	movlw	3
  5889  00EA  3189  215B         	fcall	_I2C_AS1115_Write
  5890                           
  5891                           ;app.c: 71: }else
  5892  00EC  0008               	return
  5893  00ED                     l2600:	
  5894                           
  5895                           ;app.c: 72: {
  5896                           ;app.c: 73: temp2 = (uint16_t)(temp*10);
  5897  00ED  0020               	movlb	0	; select bank0
  5898  00EE  085D               	movf	disp_kv@temp,w
  5899  00EF  00BF               	movwf	___ftmul@f2
  5900  00F0  085E               	movf	disp_kv@temp+1,w
  5901  00F1  00C0               	movwf	___ftmul@f2+1
  5902  00F2  085F               	movf	disp_kv@temp+2,w
  5903  00F3  00C1               	movwf	___ftmul@f2+2
  5904  00F4  3000               	movlw	0
  5905  00F5  00BC               	movwf	___ftmul@f1
  5906  00F6  3020               	movlw	32
  5907  00F7  00BD               	movwf	___ftmul@f1+1
  5908  00F8  3041               	movlw	65
  5909  00F9  00BE               	movwf	___ftmul@f1+2
  5910  00FA  3184  24DE  3180   	fcall	___ftmul
  5911  00FD  0020               	movlb	0	; select bank0
  5912  00FE  083C               	movf	?___ftmul,w
  5913  00FF  00CC               	movwf	___fttol@f1
  5914  0100  083D               	movf	?___ftmul+1,w
  5915  0101  00CD               	movwf	___fttol@f1+1
  5916  0102  083E               	movf	?___ftmul+2,w
  5917  0103  00CE               	movwf	___fttol@f1+2
  5918  0104  3187  2778  3180   	fcall	___fttol
  5919  0107  0020               	movlb	0	; select bank0
  5920  0108  084D               	movf	?___fttol+1,w
  5921  0109  00E1               	movwf	disp_kv@temp2+1
  5922  010A  084C               	movf	?___fttol,w
  5923  010B  00E0               	movwf	disp_kv@temp2
  5924                           
  5925                           ;app.c: 75: I2C_AS1115_Write(DIGIT0,(temp2/100)%10);
  5926  010C  300A               	movlw	10
  5927  010D  00A8               	movwf	___lwmod@divisor
  5928  010E  3000               	movlw	0
  5929  010F  00A9               	movwf	___lwmod@divisor+1
  5930  0110  3064               	movlw	100
  5931  0111  00A0               	movwf	___lwdiv@divisor
  5932  0112  3000               	movlw	0
  5933  0113  00A1               	movwf	___lwdiv@divisor+1
  5934  0114  0861               	movf	disp_kv@temp2+1,w
  5935  0115  00A3               	movwf	___lwdiv@dividend+1
  5936  0116  0860               	movf	disp_kv@temp2,w
  5937  0117  00A2               	movwf	___lwdiv@dividend
  5938  0118  318A  22BD  3180   	fcall	___lwdiv
  5939  011B  0020               	movlb	0	; select bank0
  5940  011C  0821               	movf	?___lwdiv+1,w
  5941  011D  00AB               	movwf	___lwmod@dividend+1
  5942  011E  0820               	movf	?___lwdiv,w
  5943  011F  00AA               	movwf	___lwmod@dividend
  5944  0120  318A  2234  3180   	fcall	___lwmod
  5945  0123  0020               	movlb	0	; select bank0
  5946  0124  0828               	movf	?___lwmod,w
  5947  0125  00DC               	movwf	??_disp_kv
  5948  0126  085C               	movf	??_disp_kv,w
  5949  0127  00B9               	movwf	I2C_AS1115_Write@data
  5950  0128  3001               	movlw	1
  5951  0129  3189  215B  3180   	fcall	_I2C_AS1115_Write
  5952                           
  5953                           ;app.c: 76: I2C_AS1115_Write(DIGIT1,(temp2/10)%10 | !0x80);
  5954  012C  300A               	movlw	10
  5955  012D  0020               	movlb	0	; select bank0
  5956  012E  00A8               	movwf	___lwmod@divisor
  5957  012F  3000               	movlw	0
  5958  0130  00A9               	movwf	___lwmod@divisor+1
  5959  0131  300A               	movlw	10
  5960  0132  00A0               	movwf	___lwdiv@divisor
  5961  0133  3000               	movlw	0
  5962  0134  00A1               	movwf	___lwdiv@divisor+1
  5963  0135  0861               	movf	disp_kv@temp2+1,w
  5964  0136  00A3               	movwf	___lwdiv@dividend+1
  5965  0137  0860               	movf	disp_kv@temp2,w
  5966  0138  00A2               	movwf	___lwdiv@dividend
  5967  0139  318A  22BD  3180   	fcall	___lwdiv
  5968  013C  0020               	movlb	0	; select bank0
  5969  013D  0821               	movf	?___lwdiv+1,w
  5970  013E  00AB               	movwf	___lwmod@dividend+1
  5971  013F  0820               	movf	?___lwdiv,w
  5972  0140  00AA               	movwf	___lwmod@dividend
  5973  0141  318A  2234  3180   	fcall	___lwmod
  5974  0144  0020               	movlb	0	; select bank0
  5975  0145  0828               	movf	?___lwmod,w
  5976  0146  00DC               	movwf	??_disp_kv
  5977  0147  085C               	movf	??_disp_kv,w
  5978  0148  00B9               	movwf	I2C_AS1115_Write@data
  5979  0149  3002               	movlw	2
  5980  014A  3189  215B  3180   	fcall	_I2C_AS1115_Write
  5981                           
  5982                           ;app.c: 77: I2C_AS1115_Write(DIGIT2,temp2%10);
  5983  014D  300A               	movlw	10
  5984  014E  0020               	movlb	0	; select bank0
  5985  014F  00A8               	movwf	___lwmod@divisor
  5986  0150  3000               	movlw	0
  5987  0151  00A9               	movwf	___lwmod@divisor+1
  5988  0152  0861               	movf	disp_kv@temp2+1,w
  5989  0153  00AB               	movwf	___lwmod@dividend+1
  5990  0154  0860               	movf	disp_kv@temp2,w
  5991  0155  00AA               	movwf	___lwmod@dividend
  5992  0156  318A  2234  3180   	fcall	___lwmod
  5993  0159  0020               	movlb	0	; select bank0
  5994  015A  0828               	movf	?___lwmod,w
  5995  015B  00DC               	movwf	??_disp_kv
  5996  015C  085C               	movf	??_disp_kv,w
  5997  015D  00B9               	movwf	I2C_AS1115_Write@data
  5998  015E  3003               	movlw	3
  5999  015F  3189  215B         	fcall	_I2C_AS1115_Write
  6000  0161  0008               	return
  6001  0162                     __end_of_disp_kv:	
  6002                           
  6003                           	psect	text19
  6004  08DD                     __ptext19:	
  6005 ;; *************** function ___lwtoft *****************
  6006 ;; Defined at:
  6007 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  c               2    8[BANK0 ] unsigned int 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  3    8[BANK0 ] float 
  6014 ;; Registers used:
  6015 ;;		wreg, status,2, status,0, pclath, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6021 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;Total ram usage:        4 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    3
  6028 ;; This function calls:
  6029 ;;		___ftpack
  6030 ;; This function is called by:
  6031 ;;		_disp_ma_result
  6032 ;;		_disp_kv
  6033 ;;		_adcTodac
  6034 ;;		_disp_ADC
  6035 ;;		_disp_ma
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function ___lwtoft
  6041  08DD                     ___lwtoft:	
  6042                           
  6043                           ;incstack = 0
  6044                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6045  08DD  0020               	movlb	0	; select bank0
  6046  08DE  0828               	movf	___lwtoft@c,w
  6047  08DF  00A0               	movwf	___ftpack@arg
  6048  08E0  0829               	movf	___lwtoft@c+1,w
  6049  08E1  00A1               	movwf	___ftpack@arg+1
  6050  08E2  01A2               	clrf	___ftpack@arg+2
  6051  08E3  308E               	movlw	142
  6052  08E4  00AB               	movwf	??___lwtoft
  6053  08E5  082B               	movf	??___lwtoft,w
  6054  08E6  00A3               	movwf	___ftpack@exp
  6055  08E7  01A4               	clrf	___ftpack@sign
  6056  08E8  318D  2583         	fcall	___ftpack
  6057  08EA  0020               	movlb	0	; select bank0
  6058  08EB  0820               	movf	?___ftpack,w
  6059  08EC  00A8               	movwf	?___lwtoft
  6060  08ED  0821               	movf	?___ftpack+1,w
  6061  08EE  00A9               	movwf	?___lwtoft+1
  6062  08EF  0822               	movf	?___ftpack+2,w
  6063  08F0  00AA               	movwf	?___lwtoft+2
  6064  08F1  0008               	return
  6065  08F2                     __end_of___lwtoft:	
  6066                           
  6067                           	psect	text20
  6068  0A34                     __ptext20:	
  6069 ;; *************** function ___lwmod *****************
  6070 ;; Defined at:
  6071 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  divisor         2    8[BANK0 ] unsigned int 
  6074 ;;  dividend        2   10[BANK0 ] unsigned int 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  counter         1   13[BANK0 ] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  2    8[BANK0 ] unsigned int 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;Total ram usage:        6 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    2
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_disp_ma_result
  6097 ;;		_disp_kv
  6098 ;;		_disp_3digit
  6099 ;;		_disp_ADC
  6100 ;;		_disp_ma
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           
  6105                           ;psect for function ___lwmod
  6106  0A34                     ___lwmod:	
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6110  0A34  0020               	movlb	0	; select bank0
  6111  0A35  0828               	movf	___lwmod@divisor,w
  6112  0A36  0429               	iorwf	___lwmod@divisor+1,w
  6113  0A37  1903               	btfsc	3,2
  6114  0A38  2A5C               	goto	l2562
  6115  0A39  01AD               	clrf	___lwmod@counter
  6116  0A3A  0AAD               	incf	___lwmod@counter,f
  6117  0A3B                     l2552:	
  6118  0A3B  1BA9               	btfsc	___lwmod@divisor+1,7
  6119  0A3C  2A47               	goto	l2554
  6120  0A3D  3001               	movlw	1
  6121  0A3E                     u2645:	
  6122  0A3E  35A8               	lslf	___lwmod@divisor,f
  6123  0A3F  0DA9               	rlf	___lwmod@divisor+1,f
  6124  0A40  0B89               	decfsz	9,f
  6125  0A41  2A3E               	goto	u2645
  6126  0A42  3001               	movlw	1
  6127  0A43  00AC               	movwf	??___lwmod
  6128  0A44  082C               	movf	??___lwmod,w
  6129  0A45  07AD               	addwf	___lwmod@counter,f
  6130  0A46  2A3B               	goto	l2552
  6131  0A47                     l2554:	
  6132  0A47  0829               	movf	___lwmod@divisor+1,w
  6133  0A48  022B               	subwf	___lwmod@dividend+1,w
  6134  0A49  1D03               	skipz
  6135  0A4A  2A4D               	goto	u2665
  6136  0A4B  0828               	movf	___lwmod@divisor,w
  6137  0A4C  022A               	subwf	___lwmod@dividend,w
  6138  0A4D                     u2665:	
  6139  0A4D  1C03               	skipc
  6140  0A4E  2A53               	goto	l2558
  6141  0A4F  0828               	movf	___lwmod@divisor,w
  6142  0A50  02AA               	subwf	___lwmod@dividend,f
  6143  0A51  0829               	movf	___lwmod@divisor+1,w
  6144  0A52  3BAB               	subwfb	___lwmod@dividend+1,f
  6145  0A53                     l2558:	
  6146  0A53  3001               	movlw	1
  6147  0A54                     u2675:	
  6148  0A54  36A9               	lsrf	___lwmod@divisor+1,f
  6149  0A55  0CA8               	rrf	___lwmod@divisor,f
  6150  0A56  0B89               	decfsz	9,f
  6151  0A57  2A54               	goto	u2675
  6152  0A58  3001               	movlw	1
  6153  0A59  02AD               	subwf	___lwmod@counter,f
  6154  0A5A  1D03               	btfss	3,2
  6155  0A5B  2A47               	goto	l2554
  6156  0A5C                     l2562:	
  6157  0A5C  082B               	movf	___lwmod@dividend+1,w
  6158  0A5D  00A9               	movwf	?___lwmod+1
  6159  0A5E  082A               	movf	___lwmod@dividend,w
  6160  0A5F  00A8               	movwf	?___lwmod
  6161  0A60  0008               	return
  6162  0A61                     __end_of___lwmod:	
  6163                           
  6164                           	psect	text21
  6165  0ABD                     __ptext21:	
  6166 ;; *************** function ___lwdiv *****************
  6167 ;; Defined at:
  6168 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  divisor         2    0[BANK0 ] unsigned int 
  6171 ;;  dividend        2    2[BANK0 ] unsigned int 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  quotient        2    5[BANK0 ] unsigned int 
  6174 ;;  counter         1    7[BANK0 ] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  2    0[BANK0 ] unsigned int 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;Total ram usage:        8 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    2
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_disp_ma_result
  6195 ;;		_disp_kv
  6196 ;;		_disp_3digit
  6197 ;;		_disp_ADC
  6198 ;;		_disp_ma
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function ___lwdiv
  6204  0ABD                     ___lwdiv:	
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6208  0ABD  0020               	movlb	0	; select bank0
  6209  0ABE  01A5               	clrf	___lwdiv@quotient
  6210  0ABF  01A6               	clrf	___lwdiv@quotient+1
  6211  0AC0  0820               	movf	___lwdiv@divisor,w
  6212  0AC1  0421               	iorwf	___lwdiv@divisor+1,w
  6213  0AC2  1903               	btfsc	3,2
  6214  0AC3  2AED               	goto	l2540
  6215  0AC4  01A7               	clrf	___lwdiv@counter
  6216  0AC5  0AA7               	incf	___lwdiv@counter,f
  6217  0AC6                     l2528:	
  6218  0AC6  1BA1               	btfsc	___lwdiv@divisor+1,7
  6219  0AC7  2AD2               	goto	l2530
  6220  0AC8  3001               	movlw	1
  6221  0AC9                     u2575:	
  6222  0AC9  35A0               	lslf	___lwdiv@divisor,f
  6223  0ACA  0DA1               	rlf	___lwdiv@divisor+1,f
  6224  0ACB  0B89               	decfsz	9,f
  6225  0ACC  2AC9               	goto	u2575
  6226  0ACD  3001               	movlw	1
  6227  0ACE  00A4               	movwf	??___lwdiv
  6228  0ACF  0824               	movf	??___lwdiv,w
  6229  0AD0  07A7               	addwf	___lwdiv@counter,f
  6230  0AD1  2AC6               	goto	l2528
  6231  0AD2                     l2530:	
  6232  0AD2  3001               	movlw	1
  6233  0AD3                     u2595:	
  6234  0AD3  35A5               	lslf	___lwdiv@quotient,f
  6235  0AD4  0DA6               	rlf	___lwdiv@quotient+1,f
  6236  0AD5  0B89               	decfsz	9,f
  6237  0AD6  2AD3               	goto	u2595
  6238  0AD7  0821               	movf	___lwdiv@divisor+1,w
  6239  0AD8  0223               	subwf	___lwdiv@dividend+1,w
  6240  0AD9  1D03               	skipz
  6241  0ADA  2ADD               	goto	u2605
  6242  0ADB  0820               	movf	___lwdiv@divisor,w
  6243  0ADC  0222               	subwf	___lwdiv@dividend,w
  6244  0ADD                     u2605:	
  6245  0ADD  1C03               	skipc
  6246  0ADE  2AE4               	goto	l2536
  6247  0ADF  0820               	movf	___lwdiv@divisor,w
  6248  0AE0  02A2               	subwf	___lwdiv@dividend,f
  6249  0AE1  0821               	movf	___lwdiv@divisor+1,w
  6250  0AE2  3BA3               	subwfb	___lwdiv@dividend+1,f
  6251  0AE3  1425               	bsf	___lwdiv@quotient,0
  6252  0AE4                     l2536:	
  6253  0AE4  3001               	movlw	1
  6254  0AE5                     u2615:	
  6255  0AE5  36A1               	lsrf	___lwdiv@divisor+1,f
  6256  0AE6  0CA0               	rrf	___lwdiv@divisor,f
  6257  0AE7  0B89               	decfsz	9,f
  6258  0AE8  2AE5               	goto	u2615
  6259  0AE9  3001               	movlw	1
  6260  0AEA  02A7               	subwf	___lwdiv@counter,f
  6261  0AEB  1D03               	btfss	3,2
  6262  0AEC  2AD2               	goto	l2530
  6263  0AED                     l2540:	
  6264  0AED  0826               	movf	___lwdiv@quotient+1,w
  6265  0AEE  00A1               	movwf	?___lwdiv+1
  6266  0AEF  0825               	movf	___lwdiv@quotient,w
  6267  0AF0  00A0               	movwf	?___lwdiv
  6268  0AF1  0008               	return
  6269  0AF2                     __end_of___lwdiv:	
  6270                           
  6271                           	psect	text22
  6272  0A0B                     __ptext22:	
  6273 ;; *************** function _adcRead *****************
  6274 ;; Defined at:
  6275 ;;		line 15 in file "adc.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  channel         1    wreg     unsigned char 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  channel         1    3[BANK0 ] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  2    0[BANK0 ] unsigned int 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;Total ram usage:        4 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    2
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_event_display
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           
  6304                           ;psect for function _adcRead
  6305  0A0B                     _adcRead:	
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  6309                           ;adcRead@channel stored from wreg
  6310  0A0B  0020               	movlb	0	; select bank0
  6311  0A0C  00A3               	movwf	adcRead@channel
  6312                           
  6313                           ;adc.c: 17: ADCON1bits.ADFM = 1;
  6314  0A0D  0021               	movlb	1	; select bank1
  6315  0A0E  179E               	bsf	30,7	;volatile
  6316                           
  6317                           ;adc.c: 18: ADCON1bits.ADCS0 = 1;
  6318  0A0F  161E               	bsf	30,4	;volatile
  6319                           
  6320                           ;adc.c: 19: ADCON1bits.ADCS1 = 1;
  6321  0A10  169E               	bsf	30,5	;volatile
  6322                           
  6323                           ;adc.c: 20: ADCON1bits.ADCS2 = 0;
  6324  0A11  131E               	bcf	30,6	;volatile
  6325                           
  6326                           ;adc.c: 21: ADCON0bits.CHS = channel;
  6327  0A12  0020               	movlb	0	; select bank0
  6328  0A13  0823               	movf	adcRead@channel,w
  6329  0A14  00A2               	movwf	??_adcRead
  6330  0A15  0DA2               	rlf	??_adcRead,f
  6331  0A16  0DA2               	rlf	??_adcRead,f
  6332  0A17  0021               	movlb	1	; select bank1
  6333  0A18  081D               	movf	29,w	;volatile
  6334  0A19  0020               	movlb	0	; select bank0
  6335  0A1A  0622               	xorwf	??_adcRead,w
  6336  0A1B  3983               	andlw	-125
  6337  0A1C  0622               	xorwf	??_adcRead,w
  6338  0A1D  0021               	movlb	1	; select bank1
  6339  0A1E  009D               	movwf	29	;volatile
  6340                           
  6341                           ;adc.c: 22: ADCON0bits.ADON = 1;
  6342  0A1F  141D               	bsf	29,0	;volatile
  6343                           
  6344                           ;adc.c: 23: _delay((unsigned long)((1)*(4000000/4000.0)));
  6345  0A20  30F9               	movlw	249
  6346  0A21  0020               	movlb	0	; select bank0
  6347  0A22  00A2               	movwf	??_adcRead
  6348  0A23                     u3047:	
  6349  0A23  0000               	nop
  6350  0A24  0BA2               	decfsz	??_adcRead,f
  6351  0A25  2A23               	goto	u3047
  6352  0A26  3200               	nop2	;nop
  6353  0A27  0000               	nop
  6354                           
  6355                           ;adc.c: 24: ADCON0bits.GO_nDONE = 1;
  6356  0A28  0021               	movlb	1	; select bank1
  6357  0A29  149D               	bsf	29,1	;volatile
  6358  0A2A                     l175:	
  6359                           ;adc.c: 25: while(ADCON0bits.GO_nDONE);
  6360                           
  6361  0A2A  189D               	btfsc	29,1	;volatile
  6362  0A2B  2A2A               	goto	l175
  6363                           
  6364                           ;adc.c: 27: return ((ADRESH<<8)+ADRESL);
  6365  0A2C  081C               	movf	28,w	;volatile
  6366  0A2D  0020               	movlb	0	; select bank0
  6367  0A2E  00A1               	movwf	?_adcRead+1
  6368  0A2F  0021               	movlb	1	; select bank1
  6369  0A30  081B               	movf	27,w	;volatile
  6370  0A31  0020               	movlb	0	; select bank0
  6371  0A32  00A0               	movwf	?_adcRead
  6372  0A33  0008               	return
  6373  0A34                     __end_of_adcRead:	
  6374                           
  6375                           	psect	text23
  6376  17F2                     __ptext23:	
  6377 ;; *************** function _timerGetTick *****************
  6378 ;; Defined at:
  6379 ;;		line 29 in file "timer.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  time            1    wreg     PTR struct .
  6382 ;;		 -> Timer(48), 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  time            1    0[BANK0 ] PTR struct .
  6385 ;;		 -> Timer(48), 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      unsigned char 
  6388 ;; Registers used:
  6389 ;;		wreg, fsr1l, fsr1h
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;Total ram usage:        1 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    2
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		_event_timer_Button
  6406 ;;		_event_expose
  6407 ;;		_event_display
  6408 ;;		_event_rst
  6409 ;;		_event_anodeCurrent
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           
  6414                           ;psect for function _timerGetTick
  6415  17F2                     _timerGetTick:	
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _timerGetTick: [wregfsr1]
  6419                           ;timerGetTick@time stored from wreg
  6420  17F2  0020               	movlb	0	; select bank0
  6421  17F3  00A0               	movwf	timerGetTick@time
  6422                           
  6423                           ;timer.c: 31: return time->tick;
  6424  17F4  0A20               	incf	timerGetTick@time,w
  6425  17F5  0086               	movwf	6
  6426  17F6  0187               	clrf	7
  6427  17F7  0801               	movf	1,w
  6428  17F8  0008               	return
  6429  17F9                     __end_of_timerGetTick:	
  6430                           
  6431                           	psect	text24
  6432  0F66                     __ptext24:	
  6433 ;; *************** function _pwmInit_ccp2 *****************
  6434 ;; Defined at:
  6435 ;;		line 3 in file "pwm.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  freq            2   58[BANK0 ] unsigned int 
  6438 ;;  duty            3   60[BANK0 ] float 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  ccpr1l_ccp1c    2   65[BANK0 ] unsigned int 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0, pclath, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        9 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    4
  6457 ;; This function calls:
  6458 ;;		___aldiv
  6459 ;;		___awtoft
  6460 ;;		___ftdiv
  6461 ;;		___ftmul
  6462 ;;		___fttol
  6463 ;; This function is called by:
  6464 ;;		_event_btn_Expose
  6465 ;;		_event_anodeCurrent
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function _pwmInit_ccp2
  6471  0F66                     _pwmInit_ccp2:	
  6472                           
  6473                           ;pwm.c: 5: unsigned int ccpr1l_ccp1con;
  6474                           ;pwm.c: 14: CCP2CONbits.P2M = 0b00;
  6475                           
  6476                           ;incstack = 0
  6477                           ; Regs used in _pwmInit_ccp2: [wreg+status,2+status,0+pclath+cstack]
  6478  0F66  303F               	movlw	-193
  6479  0F67  0025               	movlb	5	; select bank5
  6480  0F68  059A               	andwf	26,f	;volatile
  6481                           
  6482                           ;pwm.c: 15: CCP2CONbits.CCP2M = 0b1100;
  6483  0F69  081A               	movf	26,w	;volatile
  6484  0F6A  39F0               	andlw	-16
  6485  0F6B  380C               	iorlw	12
  6486  0F6C  009A               	movwf	26	;volatile
  6487                           
  6488                           ;pwm.c: 16: CCPTMRS0bits.C2TSEL = 0b00;
  6489  0F6D  30F3               	movlw	-13
  6490  0F6E  059E               	andwf	30,f	;volatile
  6491                           
  6492                           ;pwm.c: 18: PIR1bits.TMR2IF = 1;
  6493  0F6F  0020               	movlb	0	; select bank0
  6494  0F70  1491               	bsf	17,1	;volatile
  6495                           
  6496                           ;pwm.c: 21: APFCONbits.CCP2SEL = 1;
  6497  0F71  0022               	movlb	2	; select bank2
  6498  0F72  151D               	bsf	29,2	;volatile
  6499                           
  6500                           ;pwm.c: 30: PR2 = (4000000 / (4*freq*16)) - 1;
  6501  0F73  0020               	movlb	0	; select bank0
  6502  0F74  085B               	movf	pwmInit_ccp2@freq+1,w
  6503  0F75  00E0               	movwf	??_pwmInit_ccp2+1
  6504  0F76  085A               	movf	pwmInit_ccp2@freq,w
  6505  0F77  00DF               	movwf	??_pwmInit_ccp2
  6506  0F78  35DF               	lslf	??_pwmInit_ccp2,f
  6507  0F79  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6508  0F7A  35DF               	lslf	??_pwmInit_ccp2,f
  6509  0F7B  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6510  0F7C  0EDF               	swapf	??_pwmInit_ccp2,f
  6511  0F7D  0EE0               	swapf	??_pwmInit_ccp2+1,f
  6512  0F7E  30F0               	movlw	240
  6513  0F7F  05E0               	andwf	??_pwmInit_ccp2+1,f
  6514  0F80  085F               	movf	??_pwmInit_ccp2,w
  6515  0F81  390F               	andlw	15
  6516  0F82  04E0               	iorwf	??_pwmInit_ccp2+1,f
  6517  0F83  30F0               	movlw	240
  6518  0F84  05DF               	andwf	??_pwmInit_ccp2,f
  6519  0F85  085F               	movf	??_pwmInit_ccp2,w
  6520  0F86  00A6               	movwf	___aldiv@divisor
  6521  0F87  0860               	movf	??_pwmInit_ccp2+1,w
  6522  0F88  00A7               	movwf	___aldiv@divisor+1
  6523  0F89  01A8               	clrf	___aldiv@divisor+2
  6524  0F8A  01A9               	clrf	___aldiv@divisor+3
  6525  0F8B  3000               	movlw	0
  6526  0F8C  00AD               	movwf	___aldiv@dividend+3
  6527  0F8D  303D               	movlw	61
  6528  0F8E  00AC               	movwf	___aldiv@dividend+2
  6529  0F8F  3009               	movlw	9
  6530  0F90  00AB               	movwf	___aldiv@dividend+1
  6531  0F91  3000               	movlw	0
  6532  0F92  00AA               	movwf	___aldiv@dividend
  6533  0F93  318E  26E4  318F   	fcall	___aldiv
  6534  0F96  0020               	movlb	0	; select bank0
  6535  0F97  0826               	movf	?___aldiv,w
  6536  0F98  3EFF               	addlw	255
  6537  0F99  009B               	movwf	27	;volatile
  6538                           
  6539                           ;pwm.c: 35: ccpr1l_ccp1con =(4*(PR2+1))*((float)duty/100);
  6540  0F9A  081B               	movf	27,w	;volatile
  6541  0F9B  00DF               	movwf	??_pwmInit_ccp2
  6542  0F9C  01E0               	clrf	??_pwmInit_ccp2+1
  6543  0F9D  35DF               	lslf	??_pwmInit_ccp2,f
  6544  0F9E  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6545  0F9F  35DF               	lslf	??_pwmInit_ccp2,f
  6546  0FA0  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6547  0FA1  085F               	movf	??_pwmInit_ccp2,w
  6548  0FA2  3E04               	addlw	4
  6549  0FA3  00A8               	movwf	___awtoft@c
  6550  0FA4  3000               	movlw	0
  6551  0FA5  3D60               	addwfc	??_pwmInit_ccp2+1,w
  6552  0FA6  00A9               	movwf	___awtoft@c+1
  6553  0FA7  3189  219C  318F   	fcall	___awtoft
  6554  0FAA  0020               	movlb	0	; select bank0
  6555  0FAB  0828               	movf	?___awtoft,w
  6556  0FAC  00BF               	movwf	___ftmul@f2
  6557  0FAD  0829               	movf	?___awtoft+1,w
  6558  0FAE  00C0               	movwf	___ftmul@f2+1
  6559  0FAF  082A               	movf	?___awtoft+2,w
  6560  0FB0  00C1               	movwf	___ftmul@f2+2
  6561  0FB1  085C               	movf	pwmInit_ccp2@duty,w
  6562  0FB2  00AF               	movwf	___ftdiv@f1
  6563  0FB3  085D               	movf	pwmInit_ccp2@duty+1,w
  6564  0FB4  00B0               	movwf	___ftdiv@f1+1
  6565  0FB5  085E               	movf	pwmInit_ccp2@duty+2,w
  6566  0FB6  00B1               	movwf	___ftdiv@f1+2
  6567  0FB7  3000               	movlw	0
  6568  0FB8  00AC               	movwf	___ftdiv@f2
  6569  0FB9  30C8               	movlw	200
  6570  0FBA  00AD               	movwf	___ftdiv@f2+1
  6571  0FBB  3042               	movlw	66
  6572  0FBC  00AE               	movwf	___ftdiv@f2+2
  6573  0FBD  3185  2592  318F   	fcall	___ftdiv
  6574  0FC0  0020               	movlb	0	; select bank0
  6575  0FC1  082C               	movf	?___ftdiv,w
  6576  0FC2  00BC               	movwf	___ftmul@f1
  6577  0FC3  082D               	movf	?___ftdiv+1,w
  6578  0FC4  00BD               	movwf	___ftmul@f1+1
  6579  0FC5  082E               	movf	?___ftdiv+2,w
  6580  0FC6  00BE               	movwf	___ftmul@f1+2
  6581  0FC7  3184  24DE  318F   	fcall	___ftmul
  6582  0FCA  0020               	movlb	0	; select bank0
  6583  0FCB  083C               	movf	?___ftmul,w
  6584  0FCC  00CC               	movwf	___fttol@f1
  6585  0FCD  083D               	movf	?___ftmul+1,w
  6586  0FCE  00CD               	movwf	___fttol@f1+1
  6587  0FCF  083E               	movf	?___ftmul+2,w
  6588  0FD0  00CE               	movwf	___fttol@f1+2
  6589  0FD1  3187  2778  318F   	fcall	___fttol
  6590  0FD4  0020               	movlb	0	; select bank0
  6591  0FD5  084D               	movf	?___fttol+1,w
  6592  0FD6  00E2               	movwf	pwmInit_ccp2@ccpr1l_ccp1con+1
  6593  0FD7  084C               	movf	?___fttol,w
  6594  0FD8  00E1               	movwf	pwmInit_ccp2@ccpr1l_ccp1con
  6595                           
  6596                           ;pwm.c: 42: CCPR2L = (ccpr1l_ccp1con ) >> 2;
  6597  0FD9  0862               	movf	pwmInit_ccp2@ccpr1l_ccp1con+1,w
  6598  0FDA  00E0               	movwf	??_pwmInit_ccp2+1
  6599  0FDB  0861               	movf	pwmInit_ccp2@ccpr1l_ccp1con,w
  6600  0FDC  00DF               	movwf	??_pwmInit_ccp2
  6601  0FDD  36E0               	lsrf	??_pwmInit_ccp2+1,f
  6602  0FDE  0CDF               	rrf	??_pwmInit_ccp2,f
  6603  0FDF  36E0               	lsrf	??_pwmInit_ccp2+1,f
  6604  0FE0  0CDF               	rrf	??_pwmInit_ccp2,f
  6605  0FE1  085F               	movf	??_pwmInit_ccp2,w
  6606  0FE2  0025               	movlb	5	; select bank5
  6607  0FE3  0098               	movwf	24	;volatile
  6608                           
  6609                           ;pwm.c: 43: CCP2CONbits.DC2B0 = ccpr1l_ccp1con & 0x0001;
  6610  0FE4  0020               	movlb	0	; select bank0
  6611  0FE5  0861               	movf	pwmInit_ccp2@ccpr1l_ccp1con,w
  6612  0FE6  3901               	andlw	1
  6613  0FE7  00DF               	movwf	??_pwmInit_ccp2
  6614  0FE8  0EDF               	swapf	??_pwmInit_ccp2,f
  6615  0FE9  0025               	movlb	5	; select bank5
  6616  0FEA  081A               	movf	26,w	;volatile
  6617  0FEB  0020               	movlb	0	; select bank0
  6618  0FEC  065F               	xorwf	??_pwmInit_ccp2,w
  6619  0FED  39EF               	andlw	-17
  6620  0FEE  065F               	xorwf	??_pwmInit_ccp2,w
  6621  0FEF  0025               	movlb	5	; select bank5
  6622  0FF0  009A               	movwf	26	;volatile
  6623                           
  6624                           ;pwm.c: 44: CCP2CONbits.DC2B1 = ccpr1l_ccp1con & 0x0010;
  6625  0FF1  0020               	movlb	0	; select bank0
  6626  0FF2  0861               	movf	pwmInit_ccp2@ccpr1l_ccp1con,w
  6627  0FF3  3910               	andlw	16
  6628  0FF4  00DF               	movwf	??_pwmInit_ccp2
  6629  0FF5  0EDF               	swapf	??_pwmInit_ccp2,f
  6630  0FF6  0DDF               	rlf	??_pwmInit_ccp2,f
  6631  0FF7  0025               	movlb	5	; select bank5
  6632  0FF8  081A               	movf	26,w	;volatile
  6633  0FF9  0020               	movlb	0	; select bank0
  6634  0FFA  065F               	xorwf	??_pwmInit_ccp2,w
  6635  0FFB  39DF               	andlw	-33
  6636  0FFC  065F               	xorwf	??_pwmInit_ccp2,w
  6637  0FFD  0025               	movlb	5	; select bank5
  6638  0FFE  009A               	movwf	26	;volatile
  6639  0FFF  0008               	return
  6640  1000                     __end_of_pwmInit_ccp2:	
  6641                           
  6642                           	psect	text25
  6643  0778                     __ptext25:	
  6644 ;; *************** function ___fttol *****************
  6645 ;; Defined at:
  6646 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  f1              3   44[BANK0 ] float 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  lval            4   53[BANK0 ] unsigned long 
  6651 ;;  exp1            1   57[BANK0 ] unsigned char 
  6652 ;;  sign1           1   52[BANK0 ] unsigned char 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  4   44[BANK0 ] long 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;Total ram usage:       14 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    2
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_disp_ma_result
  6673 ;;		_disp_kv
  6674 ;;		_adcTodac
  6675 ;;		_pwmInit_ccp2
  6676 ;;		_pwmInit_ccp3
  6677 ;;		_disp_ADC
  6678 ;;		_disp_ma
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function ___fttol
  6684  0778                     ___fttol:	
  6685                           
  6686                           ;incstack = 0
  6687                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6688  0778  0020               	movlb	0	; select bank0
  6689  0779  084C               	movf	___fttol@f1,w
  6690  077A  00D0               	movwf	??___fttol
  6691  077B  084D               	movf	___fttol@f1+1,w
  6692  077C  00D1               	movwf	??___fttol+1
  6693  077D  084E               	movf	___fttol@f1+2,w
  6694  077E  00D2               	movwf	??___fttol+2
  6695  077F  1003               	clrc
  6696  0780  0D51               	rlf	??___fttol+1,w
  6697  0781  0D52               	rlf	??___fttol+2,w
  6698  0782  00D3               	movwf	??___fttol+3
  6699  0783  0853               	movf	??___fttol+3,w
  6700  0784  00D9               	movwf	___fttol@exp1
  6701  0785  0859               	movf	___fttol@exp1,w
  6702  0786  1D03               	btfss	3,2
  6703  0787  2F91               	goto	l2194
  6704  0788  3000               	movlw	0
  6705  0789  00CF               	movwf	?___fttol+3
  6706  078A  3000               	movlw	0
  6707  078B  00CE               	movwf	?___fttol+2
  6708  078C  3000               	movlw	0
  6709  078D  00CD               	movwf	?___fttol+1
  6710  078E  3000               	movlw	0
  6711  078F  00CC               	movwf	?___fttol
  6712  0790  0008               	return
  6713  0791                     l2194:	
  6714  0791  084C               	movf	___fttol@f1,w
  6715  0792  00D0               	movwf	??___fttol
  6716  0793  084D               	movf	___fttol@f1+1,w
  6717  0794  00D1               	movwf	??___fttol+1
  6718  0795  084E               	movf	___fttol@f1+2,w
  6719  0796  00D2               	movwf	??___fttol+2
  6720  0797  3017               	movlw	23
  6721  0798                     u2025:	
  6722  0798  36D2               	lsrf	??___fttol+2,f
  6723  0799  0CD1               	rrf	??___fttol+1,f
  6724  079A  0CD0               	rrf	??___fttol,f
  6725  079B  0B89               	decfsz	9,f
  6726  079C  2F98               	goto	u2025
  6727  079D  0850               	movf	??___fttol,w
  6728  079E  00D3               	movwf	??___fttol+3
  6729  079F  0853               	movf	??___fttol+3,w
  6730  07A0  00D4               	movwf	___fttol@sign1
  6731  07A1  17CD               	bsf	___fttol@f1+1,7
  6732  07A2  30FF               	movlw	255
  6733  07A3  05CC               	andwf	___fttol@f1,f
  6734  07A4  30FF               	movlw	255
  6735  07A5  05CD               	andwf	___fttol@f1+1,f
  6736  07A6  3000               	movlw	0
  6737  07A7  05CE               	andwf	___fttol@f1+2,f
  6738  07A8  084C               	movf	___fttol@f1,w
  6739  07A9  00D5               	movwf	___fttol@lval
  6740  07AA  084D               	movf	___fttol@f1+1,w
  6741  07AB  00D6               	movwf	___fttol@lval+1
  6742  07AC  084E               	movf	___fttol@f1+2,w
  6743  07AD  00D7               	movwf	___fttol@lval+2
  6744  07AE  01D8               	clrf	___fttol@lval+3
  6745  07AF  308E               	movlw	142
  6746  07B0  02D9               	subwf	___fttol@exp1,f
  6747  07B1  1FD9               	btfss	___fttol@exp1,7
  6748  07B2  2FCF               	goto	l2214
  6749  07B3  0859               	movf	___fttol@exp1,w
  6750  07B4  3A80               	xorlw	128
  6751  07B5  3E8F               	addlw	143
  6752  07B6  1803               	skipnc
  6753  07B7  2FC1               	goto	l2212
  6754  07B8  3000               	movlw	0
  6755  07B9  00CF               	movwf	?___fttol+3
  6756  07BA  3000               	movlw	0
  6757  07BB  00CE               	movwf	?___fttol+2
  6758  07BC  3000               	movlw	0
  6759  07BD  00CD               	movwf	?___fttol+1
  6760  07BE  3000               	movlw	0
  6761  07BF  00CC               	movwf	?___fttol
  6762  07C0  0008               	return
  6763  07C1                     l2212:	
  6764  07C1  3001               	movlw	1
  6765  07C2                     u2055:	
  6766  07C2  36D8               	lsrf	___fttol@lval+3,f
  6767  07C3  0CD7               	rrf	___fttol@lval+2,f
  6768  07C4  0CD6               	rrf	___fttol@lval+1,f
  6769  07C5  0CD5               	rrf	___fttol@lval,f
  6770  07C6  0B89               	decfsz	9,f
  6771  07C7  2FC2               	goto	u2055
  6772  07C8  3001               	movlw	1
  6773  07C9  00D0               	movwf	??___fttol
  6774  07CA  0850               	movf	??___fttol,w
  6775  07CB  07D9               	addwf	___fttol@exp1,f
  6776  07CC  1903               	btfsc	3,2
  6777  07CD  2FE8               	goto	l2222
  6778  07CE  2FC1               	goto	l2212
  6779  07CF                     l2214:	
  6780  07CF  3018               	movlw	24
  6781  07D0  0259               	subwf	___fttol@exp1,w
  6782  07D1  1C03               	skipc
  6783  07D2  2FE5               	goto	l836
  6784  07D3  3000               	movlw	0
  6785  07D4  00CF               	movwf	?___fttol+3
  6786  07D5  3000               	movlw	0
  6787  07D6  00CE               	movwf	?___fttol+2
  6788  07D7  3000               	movlw	0
  6789  07D8  00CD               	movwf	?___fttol+1
  6790  07D9  3000               	movlw	0
  6791  07DA  00CC               	movwf	?___fttol
  6792  07DB  0008               	return
  6793  07DC                     l2220:	
  6794  07DC  3001               	movlw	1
  6795  07DD                     u2085:	
  6796  07DD  35D5               	lslf	___fttol@lval,f
  6797  07DE  0DD6               	rlf	___fttol@lval+1,f
  6798  07DF  0DD7               	rlf	___fttol@lval+2,f
  6799  07E0  0DD8               	rlf	___fttol@lval+3,f
  6800  07E1  0B89               	decfsz	9,f
  6801  07E2  2FDD               	goto	u2085
  6802  07E3  3001               	movlw	1
  6803  07E4  02D9               	subwf	___fttol@exp1,f
  6804  07E5                     l836:	
  6805  07E5  0859               	movf	___fttol@exp1,w
  6806  07E6  1D03               	btfss	3,2
  6807  07E7  2FDC               	goto	l2220
  6808  07E8                     l2222:	
  6809  07E8  0854               	movf	___fttol@sign1,w
  6810  07E9  1903               	btfsc	3,2
  6811  07EA  2FF6               	goto	l2226
  6812  07EB  09D5               	comf	___fttol@lval,f
  6813  07EC  09D6               	comf	___fttol@lval+1,f
  6814  07ED  09D7               	comf	___fttol@lval+2,f
  6815  07EE  09D8               	comf	___fttol@lval+3,f
  6816  07EF  0AD5               	incf	___fttol@lval,f
  6817  07F0  1903               	skipnz
  6818  07F1  0AD6               	incf	___fttol@lval+1,f
  6819  07F2  1903               	skipnz
  6820  07F3  0AD7               	incf	___fttol@lval+2,f
  6821  07F4  1903               	skipnz
  6822  07F5  0AD8               	incf	___fttol@lval+3,f
  6823  07F6                     l2226:	
  6824  07F6  0858               	movf	___fttol@lval+3,w
  6825  07F7  00CF               	movwf	?___fttol+3
  6826  07F8  0857               	movf	___fttol@lval+2,w
  6827  07F9  00CE               	movwf	?___fttol+2
  6828  07FA  0856               	movf	___fttol@lval+1,w
  6829  07FB  00CD               	movwf	?___fttol+1
  6830  07FC  0855               	movf	___fttol@lval,w
  6831  07FD  00CC               	movwf	?___fttol
  6832  07FE  0008               	return
  6833  07FF                     __end_of___fttol:	
  6834                           
  6835                           	psect	text26
  6836  04DE                     __ptext26:	
  6837 ;; *************** function ___ftmul *****************
  6838 ;; Defined at:
  6839 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  f1              3   28[BANK0 ] float 
  6842 ;;  f2              3   31[BANK0 ] float 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  6845 ;;  sign            1   43[BANK0 ] unsigned char 
  6846 ;;  cntr            1   42[BANK0 ] unsigned char 
  6847 ;;  exp             1   38[BANK0 ] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  3   28[BANK0 ] float 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0, pclath, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6857 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6860 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;Total ram usage:       16 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    3
  6864 ;; This function calls:
  6865 ;;		___ftpack
  6866 ;; This function is called by:
  6867 ;;		_disp_ma_result
  6868 ;;		_disp_kv
  6869 ;;		_adcTodac
  6870 ;;		_pwmInit_ccp2
  6871 ;;		_pwmInit_ccp3
  6872 ;;		_disp_ADC
  6873 ;;		_disp_ma
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           
  6878                           ;psect for function ___ftmul
  6879  04DE                     ___ftmul:	
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6883  04DE  0020               	movlb	0	; select bank0
  6884  04DF  083C               	movf	___ftmul@f1,w
  6885  04E0  00C2               	movwf	??___ftmul
  6886  04E1  083D               	movf	___ftmul@f1+1,w
  6887  04E2  00C3               	movwf	??___ftmul+1
  6888  04E3  083E               	movf	___ftmul@f1+2,w
  6889  04E4  00C4               	movwf	??___ftmul+2
  6890  04E5  1003               	clrc
  6891  04E6  0D43               	rlf	??___ftmul+1,w
  6892  04E7  0D44               	rlf	??___ftmul+2,w
  6893  04E8  00C5               	movwf	??___ftmul+3
  6894  04E9  0845               	movf	??___ftmul+3,w
  6895  04EA  00C6               	movwf	___ftmul@exp
  6896  04EB  0846               	movf	___ftmul@exp,w
  6897  04EC  1D03               	btfss	3,2
  6898  04ED  2CF5               	goto	l2144
  6899  04EE  3000               	movlw	0
  6900  04EF  00BC               	movwf	?___ftmul
  6901  04F0  3000               	movlw	0
  6902  04F1  00BD               	movwf	?___ftmul+1
  6903  04F2  3000               	movlw	0
  6904  04F3  00BE               	movwf	?___ftmul+2
  6905  04F4  0008               	return
  6906  04F5                     l2144:	
  6907  04F5  083F               	movf	___ftmul@f2,w
  6908  04F6  00C2               	movwf	??___ftmul
  6909  04F7  0840               	movf	___ftmul@f2+1,w
  6910  04F8  00C3               	movwf	??___ftmul+1
  6911  04F9  0841               	movf	___ftmul@f2+2,w
  6912  04FA  00C4               	movwf	??___ftmul+2
  6913  04FB  1003               	clrc
  6914  04FC  0D43               	rlf	??___ftmul+1,w
  6915  04FD  0D44               	rlf	??___ftmul+2,w
  6916  04FE  00C5               	movwf	??___ftmul+3
  6917  04FF  0845               	movf	??___ftmul+3,w
  6918  0500  00CB               	movwf	___ftmul@sign
  6919  0501  084B               	movf	___ftmul@sign,w
  6920  0502  1D03               	btfss	3,2
  6921  0503  2D0B               	goto	l2150
  6922  0504  3000               	movlw	0
  6923  0505  00BC               	movwf	?___ftmul
  6924  0506  3000               	movlw	0
  6925  0507  00BD               	movwf	?___ftmul+1
  6926  0508  3000               	movlw	0
  6927  0509  00BE               	movwf	?___ftmul+2
  6928  050A  0008               	return
  6929  050B                     l2150:	
  6930  050B  084B               	movf	___ftmul@sign,w
  6931  050C  3E7B               	addlw	123
  6932  050D  00C2               	movwf	??___ftmul
  6933  050E  0842               	movf	??___ftmul,w
  6934  050F  07C6               	addwf	___ftmul@exp,f
  6935  0510  083C               	movf	___ftmul@f1,w
  6936  0511  00C2               	movwf	??___ftmul
  6937  0512  083D               	movf	___ftmul@f1+1,w
  6938  0513  00C3               	movwf	??___ftmul+1
  6939  0514  083E               	movf	___ftmul@f1+2,w
  6940  0515  00C4               	movwf	??___ftmul+2
  6941  0516  3010               	movlw	16
  6942  0517                     u1915:	
  6943  0517  36C4               	lsrf	??___ftmul+2,f
  6944  0518  0CC3               	rrf	??___ftmul+1,f
  6945  0519  0CC2               	rrf	??___ftmul,f
  6946  051A  0B89               	decfsz	9,f
  6947  051B  2D17               	goto	u1915
  6948  051C  0842               	movf	??___ftmul,w
  6949  051D  00C5               	movwf	??___ftmul+3
  6950  051E  0845               	movf	??___ftmul+3,w
  6951  051F  00CB               	movwf	___ftmul@sign
  6952  0520  083F               	movf	___ftmul@f2,w
  6953  0521  00C2               	movwf	??___ftmul
  6954  0522  0840               	movf	___ftmul@f2+1,w
  6955  0523  00C3               	movwf	??___ftmul+1
  6956  0524  0841               	movf	___ftmul@f2+2,w
  6957  0525  00C4               	movwf	??___ftmul+2
  6958  0526  3010               	movlw	16
  6959  0527                     u1925:	
  6960  0527  36C4               	lsrf	??___ftmul+2,f
  6961  0528  0CC3               	rrf	??___ftmul+1,f
  6962  0529  0CC2               	rrf	??___ftmul,f
  6963  052A  0B89               	decfsz	9,f
  6964  052B  2D27               	goto	u1925
  6965  052C  0842               	movf	??___ftmul,w
  6966  052D  00C5               	movwf	??___ftmul+3
  6967  052E  0845               	movf	??___ftmul+3,w
  6968  052F  06CB               	xorwf	___ftmul@sign,f
  6969  0530  3080               	movlw	128
  6970  0531  00C2               	movwf	??___ftmul
  6971  0532  0842               	movf	??___ftmul,w
  6972  0533  05CB               	andwf	___ftmul@sign,f
  6973  0534  17BD               	bsf	___ftmul@f1+1,7
  6974  0535  17C0               	bsf	___ftmul@f2+1,7
  6975  0536  30FF               	movlw	255
  6976  0537  05BF               	andwf	___ftmul@f2,f
  6977  0538  30FF               	movlw	255
  6978  0539  05C0               	andwf	___ftmul@f2+1,f
  6979  053A  3000               	movlw	0
  6980  053B  05C1               	andwf	___ftmul@f2+2,f
  6981  053C  3000               	movlw	0
  6982  053D  00C7               	movwf	___ftmul@f3_as_product
  6983  053E  3000               	movlw	0
  6984  053F  00C8               	movwf	___ftmul@f3_as_product+1
  6985  0540  3000               	movlw	0
  6986  0541  00C9               	movwf	___ftmul@f3_as_product+2
  6987  0542  3007               	movlw	7
  6988  0543  00C2               	movwf	??___ftmul
  6989  0544  0842               	movf	??___ftmul,w
  6990  0545  00CA               	movwf	___ftmul@cntr
  6991  0546                     l2162:	
  6992  0546  1C3C               	btfss	___ftmul@f1,0
  6993  0547  2D4E               	goto	l2166
  6994  0548  083F               	movf	___ftmul@f2,w
  6995  0549  07C7               	addwf	___ftmul@f3_as_product,f
  6996  054A  0840               	movf	___ftmul@f2+1,w
  6997  054B  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  6998  054C  0841               	movf	___ftmul@f2+2,w
  6999  054D  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  7000  054E                     l2166:	
  7001  054E  3001               	movlw	1
  7002  054F                     u1945:	
  7003  054F  36BE               	lsrf	___ftmul@f1+2,f
  7004  0550  0CBD               	rrf	___ftmul@f1+1,f
  7005  0551  0CBC               	rrf	___ftmul@f1,f
  7006  0552  0B89               	decfsz	9,f
  7007  0553  2D4F               	goto	u1945
  7008  0554  3001               	movlw	1
  7009  0555                     u1955:	
  7010  0555  35BF               	lslf	___ftmul@f2,f
  7011  0556  0DC0               	rlf	___ftmul@f2+1,f
  7012  0557  0DC1               	rlf	___ftmul@f2+2,f
  7013  0558  0B89               	decfsz	9,f
  7014  0559  2D55               	goto	u1955
  7015  055A  3001               	movlw	1
  7016  055B  02CA               	subwf	___ftmul@cntr,f
  7017  055C  1D03               	btfss	3,2
  7018  055D  2D46               	goto	l2162
  7019  055E  3009               	movlw	9
  7020  055F  00C2               	movwf	??___ftmul
  7021  0560  0842               	movf	??___ftmul,w
  7022  0561  00CA               	movwf	___ftmul@cntr
  7023  0562                     l2174:	
  7024  0562  1C3C               	btfss	___ftmul@f1,0
  7025  0563  2D6A               	goto	l2178
  7026  0564  083F               	movf	___ftmul@f2,w
  7027  0565  07C7               	addwf	___ftmul@f3_as_product,f
  7028  0566  0840               	movf	___ftmul@f2+1,w
  7029  0567  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  7030  0568  0841               	movf	___ftmul@f2+2,w
  7031  0569  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  7032  056A                     l2178:	
  7033  056A  3001               	movlw	1
  7034  056B                     u1985:	
  7035  056B  36BE               	lsrf	___ftmul@f1+2,f
  7036  056C  0CBD               	rrf	___ftmul@f1+1,f
  7037  056D  0CBC               	rrf	___ftmul@f1,f
  7038  056E  0B89               	decfsz	9,f
  7039  056F  2D6B               	goto	u1985
  7040  0570  3001               	movlw	1
  7041  0571                     u1995:	
  7042  0571  36C9               	lsrf	___ftmul@f3_as_product+2,f
  7043  0572  0CC8               	rrf	___ftmul@f3_as_product+1,f
  7044  0573  0CC7               	rrf	___ftmul@f3_as_product,f
  7045  0574  0B89               	decfsz	9,f
  7046  0575  2D71               	goto	u1995
  7047  0576  3001               	movlw	1
  7048  0577  02CA               	subwf	___ftmul@cntr,f
  7049  0578  1D03               	btfss	3,2
  7050  0579  2D62               	goto	l2174
  7051  057A  0847               	movf	___ftmul@f3_as_product,w
  7052  057B  00A0               	movwf	___ftpack@arg
  7053  057C  0848               	movf	___ftmul@f3_as_product+1,w
  7054  057D  00A1               	movwf	___ftpack@arg+1
  7055  057E  0849               	movf	___ftmul@f3_as_product+2,w
  7056  057F  00A2               	movwf	___ftpack@arg+2
  7057  0580  0846               	movf	___ftmul@exp,w
  7058  0581  00C2               	movwf	??___ftmul
  7059  0582  0842               	movf	??___ftmul,w
  7060  0583  00A3               	movwf	___ftpack@exp
  7061  0584  084B               	movf	___ftmul@sign,w
  7062  0585  00C3               	movwf	??___ftmul+1
  7063  0586  0843               	movf	??___ftmul+1,w
  7064  0587  00A4               	movwf	___ftpack@sign
  7065  0588  318D  2583         	fcall	___ftpack
  7066  058A  0020               	movlb	0	; select bank0
  7067  058B  0820               	movf	?___ftpack,w
  7068  058C  00BC               	movwf	?___ftmul
  7069  058D  0821               	movf	?___ftpack+1,w
  7070  058E  00BD               	movwf	?___ftmul+1
  7071  058F  0822               	movf	?___ftpack+2,w
  7072  0590  00BE               	movwf	?___ftmul+2
  7073  0591  0008               	return
  7074  0592                     __end_of___ftmul:	
  7075                           
  7076                           	psect	text27
  7077  0592                     __ptext27:	
  7078 ;; *************** function ___ftdiv *****************
  7079 ;; Defined at:
  7080 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  f2              3   12[BANK0 ] float 
  7083 ;;  f1              3   15[BANK0 ] float 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  f3              3   23[BANK0 ] float 
  7086 ;;  sign            1   27[BANK0 ] unsigned char 
  7087 ;;  exp             1   26[BANK0 ] unsigned char 
  7088 ;;  cntr            1   22[BANK0 ] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  3   12[BANK0 ] float 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0, pclath, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7098 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7102 ;;Total ram usage:       16 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    3
  7105 ;; This function calls:
  7106 ;;		___ftpack
  7107 ;; This function is called by:
  7108 ;;		_disp_ma_result
  7109 ;;		_disp_kv
  7110 ;;		_pwmInit_ccp2
  7111 ;;		_pwmInit_ccp3
  7112 ;;		_disp_ADC
  7113 ;;		_disp_ma
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function ___ftdiv
  7119  0592                     ___ftdiv:	
  7120                           
  7121                           ;incstack = 0
  7122                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7123  0592  0020               	movlb	0	; select bank0
  7124  0593  082F               	movf	___ftdiv@f1,w
  7125  0594  00B2               	movwf	??___ftdiv
  7126  0595  0830               	movf	___ftdiv@f1+1,w
  7127  0596  00B3               	movwf	??___ftdiv+1
  7128  0597  0831               	movf	___ftdiv@f1+2,w
  7129  0598  00B4               	movwf	??___ftdiv+2
  7130  0599  1003               	clrc
  7131  059A  0D33               	rlf	??___ftdiv+1,w
  7132  059B  0D34               	rlf	??___ftdiv+2,w
  7133  059C  00B5               	movwf	??___ftdiv+3
  7134  059D  0835               	movf	??___ftdiv+3,w
  7135  059E  00BA               	movwf	___ftdiv@exp
  7136  059F  083A               	movf	___ftdiv@exp,w
  7137  05A0  1D03               	btfss	3,2
  7138  05A1  2DA9               	goto	l2102
  7139  05A2  3000               	movlw	0
  7140  05A3  00AC               	movwf	?___ftdiv
  7141  05A4  3000               	movlw	0
  7142  05A5  00AD               	movwf	?___ftdiv+1
  7143  05A6  3000               	movlw	0
  7144  05A7  00AE               	movwf	?___ftdiv+2
  7145  05A8  0008               	return
  7146  05A9                     l2102:	
  7147  05A9  082C               	movf	___ftdiv@f2,w
  7148  05AA  00B2               	movwf	??___ftdiv
  7149  05AB  082D               	movf	___ftdiv@f2+1,w
  7150  05AC  00B3               	movwf	??___ftdiv+1
  7151  05AD  082E               	movf	___ftdiv@f2+2,w
  7152  05AE  00B4               	movwf	??___ftdiv+2
  7153  05AF  1003               	clrc
  7154  05B0  0D33               	rlf	??___ftdiv+1,w
  7155  05B1  0D34               	rlf	??___ftdiv+2,w
  7156  05B2  00B5               	movwf	??___ftdiv+3
  7157  05B3  0835               	movf	??___ftdiv+3,w
  7158  05B4  00BB               	movwf	___ftdiv@sign
  7159  05B5  083B               	movf	___ftdiv@sign,w
  7160  05B6  1D03               	btfss	3,2
  7161  05B7  2DBF               	goto	l2108
  7162  05B8  3000               	movlw	0
  7163  05B9  00AC               	movwf	?___ftdiv
  7164  05BA  3000               	movlw	0
  7165  05BB  00AD               	movwf	?___ftdiv+1
  7166  05BC  3000               	movlw	0
  7167  05BD  00AE               	movwf	?___ftdiv+2
  7168  05BE  0008               	return
  7169  05BF                     l2108:	
  7170  05BF  3000               	movlw	0
  7171  05C0  00B7               	movwf	___ftdiv@f3
  7172  05C1  3000               	movlw	0
  7173  05C2  00B8               	movwf	___ftdiv@f3+1
  7174  05C3  3000               	movlw	0
  7175  05C4  00B9               	movwf	___ftdiv@f3+2
  7176  05C5  3089               	movlw	137
  7177  05C6  073B               	addwf	___ftdiv@sign,w
  7178  05C7  00B2               	movwf	??___ftdiv
  7179  05C8  0832               	movf	??___ftdiv,w
  7180  05C9  02BA               	subwf	___ftdiv@exp,f
  7181  05CA  082F               	movf	___ftdiv@f1,w
  7182  05CB  00B2               	movwf	??___ftdiv
  7183  05CC  0830               	movf	___ftdiv@f1+1,w
  7184  05CD  00B3               	movwf	??___ftdiv+1
  7185  05CE  0831               	movf	___ftdiv@f1+2,w
  7186  05CF  00B4               	movwf	??___ftdiv+2
  7187  05D0  3010               	movlw	16
  7188  05D1                     u1835:	
  7189  05D1  36B4               	lsrf	??___ftdiv+2,f
  7190  05D2  0CB3               	rrf	??___ftdiv+1,f
  7191  05D3  0CB2               	rrf	??___ftdiv,f
  7192  05D4  0B89               	decfsz	9,f
  7193  05D5  2DD1               	goto	u1835
  7194  05D6  0832               	movf	??___ftdiv,w
  7195  05D7  00B5               	movwf	??___ftdiv+3
  7196  05D8  0835               	movf	??___ftdiv+3,w
  7197  05D9  00BB               	movwf	___ftdiv@sign
  7198  05DA  082C               	movf	___ftdiv@f2,w
  7199  05DB  00B2               	movwf	??___ftdiv
  7200  05DC  082D               	movf	___ftdiv@f2+1,w
  7201  05DD  00B3               	movwf	??___ftdiv+1
  7202  05DE  082E               	movf	___ftdiv@f2+2,w
  7203  05DF  00B4               	movwf	??___ftdiv+2
  7204  05E0  3010               	movlw	16
  7205  05E1                     u1845:	
  7206  05E1  36B4               	lsrf	??___ftdiv+2,f
  7207  05E2  0CB3               	rrf	??___ftdiv+1,f
  7208  05E3  0CB2               	rrf	??___ftdiv,f
  7209  05E4  0B89               	decfsz	9,f
  7210  05E5  2DE1               	goto	u1845
  7211  05E6  0832               	movf	??___ftdiv,w
  7212  05E7  00B5               	movwf	??___ftdiv+3
  7213  05E8  0835               	movf	??___ftdiv+3,w
  7214  05E9  06BB               	xorwf	___ftdiv@sign,f
  7215  05EA  3080               	movlw	128
  7216  05EB  00B2               	movwf	??___ftdiv
  7217  05EC  0832               	movf	??___ftdiv,w
  7218  05ED  05BB               	andwf	___ftdiv@sign,f
  7219  05EE  17B0               	bsf	___ftdiv@f1+1,7
  7220  05EF  30FF               	movlw	255
  7221  05F0  05AF               	andwf	___ftdiv@f1,f
  7222  05F1  30FF               	movlw	255
  7223  05F2  05B0               	andwf	___ftdiv@f1+1,f
  7224  05F3  3000               	movlw	0
  7225  05F4  05B1               	andwf	___ftdiv@f1+2,f
  7226  05F5  17AD               	bsf	___ftdiv@f2+1,7
  7227  05F6  30FF               	movlw	255
  7228  05F7  05AC               	andwf	___ftdiv@f2,f
  7229  05F8  30FF               	movlw	255
  7230  05F9  05AD               	andwf	___ftdiv@f2+1,f
  7231  05FA  3000               	movlw	0
  7232  05FB  05AE               	andwf	___ftdiv@f2+2,f
  7233  05FC  3018               	movlw	24
  7234  05FD  00B2               	movwf	??___ftdiv
  7235  05FE  0832               	movf	??___ftdiv,w
  7236  05FF  00B6               	movwf	___ftdiv@cntr
  7237  0600                     l2122:	
  7238  0600  3001               	movlw	1
  7239  0601                     u1855:	
  7240  0601  35B7               	lslf	___ftdiv@f3,f
  7241  0602  0DB8               	rlf	___ftdiv@f3+1,f
  7242  0603  0DB9               	rlf	___ftdiv@f3+2,f
  7243  0604  0B89               	decfsz	9,f
  7244  0605  2E01               	goto	u1855
  7245  0606  082E               	movf	___ftdiv@f2+2,w
  7246  0607  0231               	subwf	___ftdiv@f1+2,w
  7247  0608  1D03               	skipz
  7248  0609  2E10               	goto	u1865
  7249  060A  082D               	movf	___ftdiv@f2+1,w
  7250  060B  0230               	subwf	___ftdiv@f1+1,w
  7251  060C  1D03               	skipz
  7252  060D  2E10               	goto	u1865
  7253  060E  082C               	movf	___ftdiv@f2,w
  7254  060F  022F               	subwf	___ftdiv@f1,w
  7255  0610                     u1865:	
  7256  0610  1C03               	skipc
  7257  0611  2E19               	goto	l2130
  7258  0612  082C               	movf	___ftdiv@f2,w
  7259  0613  02AF               	subwf	___ftdiv@f1,f
  7260  0614  082D               	movf	___ftdiv@f2+1,w
  7261  0615  3BB0               	subwfb	___ftdiv@f1+1,f
  7262  0616  082E               	movf	___ftdiv@f2+2,w
  7263  0617  3BB1               	subwfb	___ftdiv@f1+2,f
  7264  0618  1437               	bsf	___ftdiv@f3,0
  7265  0619                     l2130:	
  7266  0619  3001               	movlw	1
  7267  061A                     u1875:	
  7268  061A  35AF               	lslf	___ftdiv@f1,f
  7269  061B  0DB0               	rlf	___ftdiv@f1+1,f
  7270  061C  0DB1               	rlf	___ftdiv@f1+2,f
  7271  061D  0B89               	decfsz	9,f
  7272  061E  2E1A               	goto	u1875
  7273  061F  3001               	movlw	1
  7274  0620  02B6               	subwf	___ftdiv@cntr,f
  7275  0621  1D03               	btfss	3,2
  7276  0622  2E00               	goto	l2122
  7277  0623  0837               	movf	___ftdiv@f3,w
  7278  0624  00A0               	movwf	___ftpack@arg
  7279  0625  0838               	movf	___ftdiv@f3+1,w
  7280  0626  00A1               	movwf	___ftpack@arg+1
  7281  0627  0839               	movf	___ftdiv@f3+2,w
  7282  0628  00A2               	movwf	___ftpack@arg+2
  7283  0629  083A               	movf	___ftdiv@exp,w
  7284  062A  00B2               	movwf	??___ftdiv
  7285  062B  0832               	movf	??___ftdiv,w
  7286  062C  00A3               	movwf	___ftpack@exp
  7287  062D  083B               	movf	___ftdiv@sign,w
  7288  062E  00B3               	movwf	??___ftdiv+1
  7289  062F  0833               	movf	??___ftdiv+1,w
  7290  0630  00A4               	movwf	___ftpack@sign
  7291  0631  318D  2583         	fcall	___ftpack
  7292  0633  0020               	movlb	0	; select bank0
  7293  0634  0820               	movf	?___ftpack,w
  7294  0635  00AC               	movwf	?___ftdiv
  7295  0636  0821               	movf	?___ftpack+1,w
  7296  0637  00AD               	movwf	?___ftdiv+1
  7297  0638  0822               	movf	?___ftpack+2,w
  7298  0639  00AE               	movwf	?___ftdiv+2
  7299  063A  0008               	return
  7300  063B                     __end_of___ftdiv:	
  7301                           
  7302                           	psect	text28
  7303  099C                     __ptext28:	
  7304 ;; *************** function ___awtoft *****************
  7305 ;; Defined at:
  7306 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  c               2    8[BANK0 ] int 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  sign            1   13[BANK0 ] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  3    8[BANK0 ] float 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7320 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;Total ram usage:        6 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    3
  7327 ;; This function calls:
  7328 ;;		___ftpack
  7329 ;; This function is called by:
  7330 ;;		_pwmInit_ccp2
  7331 ;;		_pwmInit_ccp3
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           
  7336                           ;psect for function ___awtoft
  7337  099C                     ___awtoft:	
  7338                           
  7339                           ;incstack = 0
  7340                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7341  099C  0020               	movlb	0	; select bank0
  7342  099D  01AD               	clrf	___awtoft@sign
  7343  099E  1FA9               	btfss	___awtoft@c+1,7
  7344  099F  29A7               	goto	l2092
  7345  09A0  09A8               	comf	___awtoft@c,f
  7346  09A1  09A9               	comf	___awtoft@c+1,f
  7347  09A2  0AA8               	incf	___awtoft@c,f
  7348  09A3  1903               	skipnz
  7349  09A4  0AA9               	incf	___awtoft@c+1,f
  7350  09A5  01AD               	clrf	___awtoft@sign
  7351  09A6  0AAD               	incf	___awtoft@sign,f
  7352  09A7                     l2092:	
  7353  09A7  0828               	movf	___awtoft@c,w
  7354  09A8  00A0               	movwf	___ftpack@arg
  7355  09A9  0829               	movf	___awtoft@c+1,w
  7356  09AA  00A1               	movwf	___ftpack@arg+1
  7357  09AB  01A2               	clrf	___ftpack@arg+2
  7358  09AC  308E               	movlw	142
  7359  09AD  00AB               	movwf	??___awtoft
  7360  09AE  082B               	movf	??___awtoft,w
  7361  09AF  00A3               	movwf	___ftpack@exp
  7362  09B0  082D               	movf	___awtoft@sign,w
  7363  09B1  00AC               	movwf	??___awtoft+1
  7364  09B2  082C               	movf	??___awtoft+1,w
  7365  09B3  00A4               	movwf	___ftpack@sign
  7366  09B4  318D  2583         	fcall	___ftpack
  7367  09B6  0020               	movlb	0	; select bank0
  7368  09B7  0820               	movf	?___ftpack,w
  7369  09B8  00A8               	movwf	?___awtoft
  7370  09B9  0821               	movf	?___ftpack+1,w
  7371  09BA  00A9               	movwf	?___awtoft+1
  7372  09BB  0822               	movf	?___ftpack+2,w
  7373  09BC  00AA               	movwf	?___awtoft+2
  7374  09BD  0008               	return
  7375  09BE                     __end_of___awtoft:	
  7376                           
  7377                           	psect	text29
  7378  093D                     __ptext29:	
  7379 ;; *************** function ___ftsub *****************
  7380 ;; Defined at:
  7381 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  f2              3   21[BANK0 ] float 
  7384 ;;  f1              3   24[BANK0 ] float 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;		None
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  3   21[BANK0 ] float 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0, pclath, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;Total ram usage:        6 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    4
  7403 ;; This function calls:
  7404 ;;		___ftadd
  7405 ;; This function is called by:
  7406 ;;		_event_anodeCurrent
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function ___ftsub
  7412  093D                     ___ftsub:	
  7413                           
  7414                           ;incstack = 0
  7415                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7416  093D  0020               	movlb	0	; select bank0
  7417  093E  0837               	movf	___ftsub@f2+2,w
  7418  093F  0436               	iorwf	___ftsub@f2+1,w
  7419  0940  0435               	iorwf	___ftsub@f2,w
  7420  0941  1903               	skipnz
  7421  0942  2945               	goto	l2618
  7422  0943  3080               	movlw	128
  7423  0944  06B7               	xorwf	___ftsub@f2+2,f
  7424  0945                     l2618:	
  7425  0945  0838               	movf	___ftsub@f1,w
  7426  0946  00A8               	movwf	___ftadd@f1
  7427  0947  0839               	movf	___ftsub@f1+1,w
  7428  0948  00A9               	movwf	___ftadd@f1+1
  7429  0949  083A               	movf	___ftsub@f1+2,w
  7430  094A  00AA               	movwf	___ftadd@f1+2
  7431  094B  0835               	movf	___ftsub@f2,w
  7432  094C  00AB               	movwf	___ftadd@f2
  7433  094D  0836               	movf	___ftsub@f2+1,w
  7434  094E  00AC               	movwf	___ftadd@f2+1
  7435  094F  0837               	movf	___ftsub@f2+2,w
  7436  0950  00AD               	movwf	___ftadd@f2+2
  7437  0951  3181  2162         	fcall	___ftadd
  7438  0953  0020               	movlb	0	; select bank0
  7439  0954  0828               	movf	?___ftadd,w
  7440  0955  00B5               	movwf	?___ftsub
  7441  0956  0829               	movf	?___ftadd+1,w
  7442  0957  00B6               	movwf	?___ftsub+1
  7443  0958  082A               	movf	?___ftadd+2,w
  7444  0959  00B7               	movwf	?___ftsub+2
  7445  095A  0008               	return
  7446  095B                     __end_of___ftsub:	
  7447                           
  7448                           	psect	text30
  7449  0162                     __ptext30:	
  7450 ;; *************** function ___ftadd *****************
  7451 ;; Defined at:
  7452 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  f1              3    8[BANK0 ] float 
  7455 ;;  f2              3   11[BANK0 ] float 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  exp1            1   20[BANK0 ] unsigned char 
  7458 ;;  exp2            1   19[BANK0 ] unsigned char 
  7459 ;;  sign            1   18[BANK0 ] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  3    8[BANK0 ] float 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7469 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;Total ram usage:       13 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    3
  7476 ;; This function calls:
  7477 ;;		___ftpack
  7478 ;; This function is called by:
  7479 ;;		_event_anodeCurrent
  7480 ;;		___ftsub
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function ___ftadd
  7486  0162                     ___ftadd:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7490  0162  0020               	movlb	0	; select bank0
  7491  0163  0828               	movf	___ftadd@f1,w
  7492  0164  00AE               	movwf	??___ftadd
  7493  0165  0829               	movf	___ftadd@f1+1,w
  7494  0166  00AF               	movwf	??___ftadd+1
  7495  0167  082A               	movf	___ftadd@f1+2,w
  7496  0168  00B0               	movwf	??___ftadd+2
  7497  0169  1003               	clrc
  7498  016A  0D2F               	rlf	??___ftadd+1,w
  7499  016B  0D30               	rlf	??___ftadd+2,w
  7500  016C  00B1               	movwf	??___ftadd+3
  7501  016D  0831               	movf	??___ftadd+3,w
  7502  016E  00B4               	movwf	___ftadd@exp1
  7503  016F  082B               	movf	___ftadd@f2,w
  7504  0170  00AE               	movwf	??___ftadd
  7505  0171  082C               	movf	___ftadd@f2+1,w
  7506  0172  00AF               	movwf	??___ftadd+1
  7507  0173  082D               	movf	___ftadd@f2+2,w
  7508  0174  00B0               	movwf	??___ftadd+2
  7509  0175  1003               	clrc
  7510  0176  0D2F               	rlf	??___ftadd+1,w
  7511  0177  0D30               	rlf	??___ftadd+2,w
  7512  0178  00B1               	movwf	??___ftadd+3
  7513  0179  0831               	movf	??___ftadd+3,w
  7514  017A  00B3               	movwf	___ftadd@exp2
  7515  017B  0834               	movf	___ftadd@exp1,w
  7516  017C  1903               	btfsc	3,2
  7517  017D  298A               	goto	l2434
  7518  017E  0833               	movf	___ftadd@exp2,w
  7519  017F  0234               	subwf	___ftadd@exp1,w
  7520  0180  1803               	skipnc
  7521  0181  2991               	goto	l2438
  7522  0182  0334               	decf	___ftadd@exp1,w
  7523  0183  3AFF               	xorlw	255
  7524  0184  0733               	addwf	___ftadd@exp2,w
  7525  0185  00AE               	movwf	??___ftadd
  7526  0186  3019               	movlw	25
  7527  0187  022E               	subwf	??___ftadd,w
  7528  0188  1C03               	skipc
  7529  0189  2991               	goto	l2438
  7530  018A                     l2434:	
  7531  018A  082B               	movf	___ftadd@f2,w
  7532  018B  00A8               	movwf	?___ftadd
  7533  018C  082C               	movf	___ftadd@f2+1,w
  7534  018D  00A9               	movwf	?___ftadd+1
  7535  018E  082D               	movf	___ftadd@f2+2,w
  7536  018F  00AA               	movwf	?___ftadd+2
  7537  0190  0008               	return
  7538  0191                     l2438:	
  7539  0191  0833               	movf	___ftadd@exp2,w
  7540  0192  1903               	btfsc	3,2
  7541  0193  0008               	return
  7542  0194  0834               	movf	___ftadd@exp1,w
  7543  0195  0233               	subwf	___ftadd@exp2,w
  7544  0196  1803               	skipnc
  7545  0197  29A0               	goto	l2444
  7546  0198  0333               	decf	___ftadd@exp2,w
  7547  0199  3AFF               	xorlw	255
  7548  019A  0734               	addwf	___ftadd@exp1,w
  7549  019B  00AE               	movwf	??___ftadd
  7550  019C  3019               	movlw	25
  7551  019D  022E               	subwf	??___ftadd,w
  7552  019E  1803               	btfsc	3,0
  7553  019F  0008               	return
  7554  01A0                     l2444:	
  7555  01A0  3006               	movlw	6
  7556  01A1  00AE               	movwf	??___ftadd
  7557  01A2  082E               	movf	??___ftadd,w
  7558  01A3  00B2               	movwf	___ftadd@sign
  7559  01A4  1BAA               	btfsc	___ftadd@f1+2,7
  7560  01A5  17B2               	bsf	___ftadd@sign,7
  7561  01A6  1BAD               	btfsc	___ftadd@f2+2,7
  7562  01A7  1732               	bsf	___ftadd@sign,6
  7563  01A8  17A9               	bsf	___ftadd@f1+1,7
  7564  01A9  30FF               	movlw	255
  7565  01AA  05A8               	andwf	___ftadd@f1,f
  7566  01AB  30FF               	movlw	255
  7567  01AC  05A9               	andwf	___ftadd@f1+1,f
  7568  01AD  3000               	movlw	0
  7569  01AE  05AA               	andwf	___ftadd@f1+2,f
  7570  01AF  17AC               	bsf	___ftadd@f2+1,7
  7571  01B0  30FF               	movlw	255
  7572  01B1  05AB               	andwf	___ftadd@f2,f
  7573  01B2  30FF               	movlw	255
  7574  01B3  05AC               	andwf	___ftadd@f2+1,f
  7575  01B4  3000               	movlw	0
  7576  01B5  05AD               	andwf	___ftadd@f2+2,f
  7577  01B6  0833               	movf	___ftadd@exp2,w
  7578  01B7  0234               	subwf	___ftadd@exp1,w
  7579  01B8  1803               	skipnc
  7580  01B9  29DC               	goto	l2466
  7581  01BA                     l2456:	
  7582  01BA  3001               	movlw	1
  7583  01BB                     u2395:	
  7584  01BB  35AB               	lslf	___ftadd@f2,f
  7585  01BC  0DAC               	rlf	___ftadd@f2+1,f
  7586  01BD  0DAD               	rlf	___ftadd@f2+2,f
  7587  01BE  0B89               	decfsz	9,f
  7588  01BF  29BB               	goto	u2395
  7589  01C0  3001               	movlw	1
  7590  01C1  02B3               	subwf	___ftadd@exp2,f
  7591  01C2  0833               	movf	___ftadd@exp2,w
  7592  01C3  0634               	xorwf	___ftadd@exp1,w
  7593  01C4  1903               	skipnz
  7594  01C5  29D7               	goto	l2464
  7595  01C6  3001               	movlw	1
  7596  01C7  02B2               	subwf	___ftadd@sign,f
  7597  01C8  0832               	movf	___ftadd@sign,w
  7598  01C9  3907               	andlw	7
  7599  01CA  1903               	btfsc	3,2
  7600  01CB  29D7               	goto	l2464
  7601  01CC  29BA               	goto	l2456
  7602  01CD                     l2462:	
  7603  01CD  3001               	movlw	1
  7604  01CE                     u2425:	
  7605  01CE  36AA               	lsrf	___ftadd@f1+2,f
  7606  01CF  0CA9               	rrf	___ftadd@f1+1,f
  7607  01D0  0CA8               	rrf	___ftadd@f1,f
  7608  01D1  0B89               	decfsz	9,f
  7609  01D2  29CE               	goto	u2425
  7610  01D3  3001               	movlw	1
  7611  01D4  00AE               	movwf	??___ftadd
  7612  01D5  082E               	movf	??___ftadd,w
  7613  01D6  07B4               	addwf	___ftadd@exp1,f
  7614  01D7                     l2464:	
  7615  01D7  0834               	movf	___ftadd@exp1,w
  7616  01D8  0633               	xorwf	___ftadd@exp2,w
  7617  01D9  1903               	btfsc	3,2
  7618  01DA  2A01               	goto	l776
  7619  01DB  29CD               	goto	l2462
  7620  01DC                     l2466:	
  7621  01DC  0834               	movf	___ftadd@exp1,w
  7622  01DD  0233               	subwf	___ftadd@exp2,w
  7623  01DE  1803               	skipnc
  7624  01DF  2A01               	goto	l776
  7625  01E0                     l2468:	
  7626  01E0  3001               	movlw	1
  7627  01E1                     u2455:	
  7628  01E1  35A8               	lslf	___ftadd@f1,f
  7629  01E2  0DA9               	rlf	___ftadd@f1+1,f
  7630  01E3  0DAA               	rlf	___ftadd@f1+2,f
  7631  01E4  0B89               	decfsz	9,f
  7632  01E5  29E1               	goto	u2455
  7633  01E6  3001               	movlw	1
  7634  01E7  02B4               	subwf	___ftadd@exp1,f
  7635  01E8  0833               	movf	___ftadd@exp2,w
  7636  01E9  0634               	xorwf	___ftadd@exp1,w
  7637  01EA  1903               	skipnz
  7638  01EB  29FD               	goto	l2476
  7639  01EC  3001               	movlw	1
  7640  01ED  02B2               	subwf	___ftadd@sign,f
  7641  01EE  0832               	movf	___ftadd@sign,w
  7642  01EF  3907               	andlw	7
  7643  01F0  1903               	btfsc	3,2
  7644  01F1  29FD               	goto	l2476
  7645  01F2  29E0               	goto	l2468
  7646  01F3                     l2474:	
  7647  01F3  3001               	movlw	1
  7648  01F4                     u2485:	
  7649  01F4  36AD               	lsrf	___ftadd@f2+2,f
  7650  01F5  0CAC               	rrf	___ftadd@f2+1,f
  7651  01F6  0CAB               	rrf	___ftadd@f2,f
  7652  01F7  0B89               	decfsz	9,f
  7653  01F8  29F4               	goto	u2485
  7654  01F9  3001               	movlw	1
  7655  01FA  00AE               	movwf	??___ftadd
  7656  01FB  082E               	movf	??___ftadd,w
  7657  01FC  07B3               	addwf	___ftadd@exp2,f
  7658  01FD                     l2476:	
  7659  01FD  0834               	movf	___ftadd@exp1,w
  7660  01FE  0633               	xorwf	___ftadd@exp2,w
  7661  01FF  1D03               	skipz
  7662  0200  29F3               	goto	l2474
  7663  0201                     l776:	
  7664  0201  1FB2               	btfss	___ftadd@sign,7
  7665  0202  2A13               	goto	l2480
  7666  0203  30FF               	movlw	255
  7667  0204  06A8               	xorwf	___ftadd@f1,f
  7668  0205  30FF               	movlw	255
  7669  0206  06A9               	xorwf	___ftadd@f1+1,f
  7670  0207  30FF               	movlw	255
  7671  0208  06AA               	xorwf	___ftadd@f1+2,f
  7672  0209  3001               	movlw	1
  7673  020A  07A8               	addwf	___ftadd@f1,f
  7674  020B  3000               	movlw	0
  7675  020C  1803               	skipnc
  7676  020D  3001               	movlw	1
  7677  020E  07A9               	addwf	___ftadd@f1+1,f
  7678  020F  3000               	movlw	0
  7679  0210  1803               	skipnc
  7680  0211  3001               	movlw	1
  7681  0212  07AA               	addwf	___ftadd@f1+2,f
  7682  0213                     l2480:	
  7683  0213  1F32               	btfss	___ftadd@sign,6
  7684  0214  2A25               	goto	l2484
  7685  0215  30FF               	movlw	255
  7686  0216  06AB               	xorwf	___ftadd@f2,f
  7687  0217  30FF               	movlw	255
  7688  0218  06AC               	xorwf	___ftadd@f2+1,f
  7689  0219  30FF               	movlw	255
  7690  021A  06AD               	xorwf	___ftadd@f2+2,f
  7691  021B  3001               	movlw	1
  7692  021C  07AB               	addwf	___ftadd@f2,f
  7693  021D  3000               	movlw	0
  7694  021E  1803               	skipnc
  7695  021F  3001               	movlw	1
  7696  0220  07AC               	addwf	___ftadd@f2+1,f
  7697  0221  3000               	movlw	0
  7698  0222  1803               	skipnc
  7699  0223  3001               	movlw	1
  7700  0224  07AD               	addwf	___ftadd@f2+2,f
  7701  0225                     l2484:	
  7702  0225  01B2               	clrf	___ftadd@sign
  7703  0226  0828               	movf	___ftadd@f1,w
  7704  0227  07AB               	addwf	___ftadd@f2,f
  7705  0228  0829               	movf	___ftadd@f1+1,w
  7706  0229  3DAC               	addwfc	___ftadd@f2+1,f
  7707  022A  082A               	movf	___ftadd@f1+2,w
  7708  022B  3DAD               	addwfc	___ftadd@f2+2,f
  7709  022C  1FAD               	btfss	___ftadd@f2+2,7
  7710  022D  2A40               	goto	l2494
  7711  022E  30FF               	movlw	255
  7712  022F  06AB               	xorwf	___ftadd@f2,f
  7713  0230  30FF               	movlw	255
  7714  0231  06AC               	xorwf	___ftadd@f2+1,f
  7715  0232  30FF               	movlw	255
  7716  0233  06AD               	xorwf	___ftadd@f2+2,f
  7717  0234  3001               	movlw	1
  7718  0235  07AB               	addwf	___ftadd@f2,f
  7719  0236  3000               	movlw	0
  7720  0237  1803               	skipnc
  7721  0238  3001               	movlw	1
  7722  0239  07AC               	addwf	___ftadd@f2+1,f
  7723  023A  3000               	movlw	0
  7724  023B  1803               	skipnc
  7725  023C  3001               	movlw	1
  7726  023D  07AD               	addwf	___ftadd@f2+2,f
  7727  023E  01B2               	clrf	___ftadd@sign
  7728  023F  0AB2               	incf	___ftadd@sign,f
  7729  0240                     l2494:	
  7730  0240  082B               	movf	___ftadd@f2,w
  7731  0241  00A0               	movwf	___ftpack@arg
  7732  0242  082C               	movf	___ftadd@f2+1,w
  7733  0243  00A1               	movwf	___ftpack@arg+1
  7734  0244  082D               	movf	___ftadd@f2+2,w
  7735  0245  00A2               	movwf	___ftpack@arg+2
  7736  0246  0834               	movf	___ftadd@exp1,w
  7737  0247  00AE               	movwf	??___ftadd
  7738  0248  082E               	movf	??___ftadd,w
  7739  0249  00A3               	movwf	___ftpack@exp
  7740  024A  0832               	movf	___ftadd@sign,w
  7741  024B  00AF               	movwf	??___ftadd+1
  7742  024C  082F               	movf	??___ftadd+1,w
  7743  024D  00A4               	movwf	___ftpack@sign
  7744  024E  318D  2583         	fcall	___ftpack
  7745  0250  0020               	movlb	0	; select bank0
  7746  0251  0820               	movf	?___ftpack,w
  7747  0252  00A8               	movwf	?___ftadd
  7748  0253  0821               	movf	?___ftpack+1,w
  7749  0254  00A9               	movwf	?___ftadd+1
  7750  0255  0822               	movf	?___ftpack+2,w
  7751  0256  00AA               	movwf	?___ftadd+2
  7752  0257  0008               	return
  7753  0258                     __end_of___ftadd:	
  7754                           
  7755                           	psect	text31
  7756  0D83                     __ptext31:	
  7757 ;; *************** function ___ftpack *****************
  7758 ;; Defined at:
  7759 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  arg             3    0[BANK0 ] unsigned um
  7762 ;;  exp             1    3[BANK0 ] unsigned char 
  7763 ;;  sign            1    4[BANK0 ] unsigned char 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  3    0[BANK0 ] float 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7775 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;Total ram usage:        8 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    2
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		___awtoft
  7786 ;;		___ftadd
  7787 ;;		___ftdiv
  7788 ;;		___ftmul
  7789 ;;		___lwtoft
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function ___ftpack
  7795  0D83                     ___ftpack:	
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7799  0D83  0020               	movlb	0	; select bank0
  7800  0D84  0823               	movf	___ftpack@exp,w
  7801  0D85  1903               	btfsc	3,2
  7802  0D86  2D8C               	goto	l1994
  7803  0D87  0822               	movf	___ftpack@arg+2,w
  7804  0D88  0421               	iorwf	___ftpack@arg+1,w
  7805  0D89  0420               	iorwf	___ftpack@arg,w
  7806  0D8A  1D03               	skipz
  7807  0D8B  2D9D               	goto	l2000
  7808  0D8C                     l1994:	
  7809  0D8C  3000               	movlw	0
  7810  0D8D  00A0               	movwf	?___ftpack
  7811  0D8E  3000               	movlw	0
  7812  0D8F  00A1               	movwf	?___ftpack+1
  7813  0D90  3000               	movlw	0
  7814  0D91  00A2               	movwf	?___ftpack+2
  7815  0D92  0008               	return
  7816  0D93                     l1998:	
  7817  0D93  3001               	movlw	1
  7818  0D94  00A5               	movwf	??___ftpack
  7819  0D95  0825               	movf	??___ftpack,w
  7820  0D96  07A3               	addwf	___ftpack@exp,f
  7821  0D97  3001               	movlw	1
  7822  0D98                     u1585:	
  7823  0D98  36A2               	lsrf	___ftpack@arg+2,f
  7824  0D99  0CA1               	rrf	___ftpack@arg+1,f
  7825  0D9A  0CA0               	rrf	___ftpack@arg,f
  7826  0D9B  0B89               	decfsz	9,f
  7827  0D9C  2D98               	goto	u1585
  7828  0D9D                     l2000:	
  7829  0D9D  30FE               	movlw	254
  7830  0D9E  0522               	andwf	___ftpack@arg+2,w
  7831  0D9F  1903               	btfsc	3,2
  7832  0DA0  2DB6               	goto	l745
  7833  0DA1  2D93               	goto	l1998
  7834  0DA2                     l2002:	
  7835  0DA2  3001               	movlw	1
  7836  0DA3  00A5               	movwf	??___ftpack
  7837  0DA4  0825               	movf	??___ftpack,w
  7838  0DA5  07A3               	addwf	___ftpack@exp,f
  7839  0DA6  3001               	movlw	1
  7840  0DA7  07A0               	addwf	___ftpack@arg,f
  7841  0DA8  3000               	movlw	0
  7842  0DA9  1803               	skipnc
  7843  0DAA  3001               	movlw	1
  7844  0DAB  07A1               	addwf	___ftpack@arg+1,f
  7845  0DAC  3000               	movlw	0
  7846  0DAD  1803               	skipnc
  7847  0DAE  3001               	movlw	1
  7848  0DAF  07A2               	addwf	___ftpack@arg+2,f
  7849  0DB0  3001               	movlw	1
  7850  0DB1                     u1605:	
  7851  0DB1  36A2               	lsrf	___ftpack@arg+2,f
  7852  0DB2  0CA1               	rrf	___ftpack@arg+1,f
  7853  0DB3  0CA0               	rrf	___ftpack@arg,f
  7854  0DB4  0B89               	decfsz	9,f
  7855  0DB5  2DB1               	goto	u1605
  7856  0DB6                     l745:	
  7857  0DB6  30FF               	movlw	255
  7858  0DB7  0522               	andwf	___ftpack@arg+2,w
  7859  0DB8  1903               	btfsc	3,2
  7860  0DB9  2DC3               	goto	l2010
  7861  0DBA  2DA2               	goto	l2002
  7862  0DBB                     l2008:	
  7863  0DBB  3001               	movlw	1
  7864  0DBC  02A3               	subwf	___ftpack@exp,f
  7865  0DBD  3001               	movlw	1
  7866  0DBE                     u1625:	
  7867  0DBE  35A0               	lslf	___ftpack@arg,f
  7868  0DBF  0DA1               	rlf	___ftpack@arg+1,f
  7869  0DC0  0DA2               	rlf	___ftpack@arg+2,f
  7870  0DC1  0B89               	decfsz	9,f
  7871  0DC2  2DBE               	goto	u1625
  7872  0DC3                     l2010:	
  7873  0DC3  1BA1               	btfsc	___ftpack@arg+1,7
  7874  0DC4  2DC9               	goto	l752
  7875  0DC5  3002               	movlw	2
  7876  0DC6  0223               	subwf	___ftpack@exp,w
  7877  0DC7  1803               	skipnc
  7878  0DC8  2DBB               	goto	l2008
  7879  0DC9                     l752:	
  7880  0DC9  1823               	btfsc	___ftpack@exp,0
  7881  0DCA  2DD1               	goto	l753
  7882  0DCB  30FF               	movlw	255
  7883  0DCC  05A0               	andwf	___ftpack@arg,f
  7884  0DCD  307F               	movlw	127
  7885  0DCE  05A1               	andwf	___ftpack@arg+1,f
  7886  0DCF  30FF               	movlw	255
  7887  0DD0  05A2               	andwf	___ftpack@arg+2,f
  7888  0DD1                     l753:	
  7889  0DD1  1003               	clrc
  7890  0DD2  0CA3               	rrf	___ftpack@exp,f
  7891  0DD3  0823               	movf	___ftpack@exp,w
  7892  0DD4  00A5               	movwf	??___ftpack
  7893  0DD5  01A6               	clrf	??___ftpack+1
  7894  0DD6  01A7               	clrf	??___ftpack+2
  7895  0DD7  3010               	movlw	16
  7896  0DD8                     u1665:	
  7897  0DD8  35A5               	lslf	??___ftpack,f
  7898  0DD9  0DA6               	rlf	??___ftpack+1,f
  7899  0DDA  0DA7               	rlf	??___ftpack+2,f
  7900  0DDB  0B89               	decfsz	9,f
  7901  0DDC  2DD8               	goto	u1665
  7902  0DDD  0825               	movf	??___ftpack,w
  7903  0DDE  04A0               	iorwf	___ftpack@arg,f
  7904  0DDF  0826               	movf	??___ftpack+1,w
  7905  0DE0  04A1               	iorwf	___ftpack@arg+1,f
  7906  0DE1  0827               	movf	??___ftpack+2,w
  7907  0DE2  04A2               	iorwf	___ftpack@arg+2,f
  7908  0DE3  0824               	movf	___ftpack@sign,w
  7909  0DE4  1903               	btfsc	3,2
  7910  0DE5  0008               	return
  7911  0DE6  17A2               	bsf	___ftpack@arg+2,7
  7912  0DE7  0008               	return
  7913  0DE8                     __end_of___ftpack:	
  7914                           
  7915                           	psect	text32
  7916  0B2B                     __ptext32:	
  7917 ;; *************** function ___ftge *****************
  7918 ;; Defined at:
  7919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  ff1             3    0[BANK0 ] float 
  7922 ;;  ff2             3    3[BANK0 ] float 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;		None               void
  7927 ;; Registers used:
  7928 ;;		wreg, status,2, status,0
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7934 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;Total ram usage:        9 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:    2
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_event_anodeCurrent
  7945 ;;		_disp_kv
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function ___ftge
  7951  0B2B                     ___ftge:	
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7955  0B2B  0020               	movlb	0	; select bank0
  7956  0B2C  1FA2               	btfss	___ftge@ff1+2,7
  7957  0B2D  2B42               	goto	l2502
  7958  0B2E  0920               	comf	___ftge@ff1,w
  7959  0B2F  00A6               	movwf	??___ftge
  7960  0B30  0921               	comf	___ftge@ff1+1,w
  7961  0B31  00A7               	movwf	??___ftge+1
  7962  0B32  0922               	comf	___ftge@ff1+2,w
  7963  0B33  00A8               	movwf	??___ftge+2
  7964  0B34  0AA6               	incf	??___ftge,f
  7965  0B35  1903               	skipnz
  7966  0B36  0AA7               	incf	??___ftge+1,f
  7967  0B37  1903               	skipnz
  7968  0B38  0AA8               	incf	??___ftge+2,f
  7969  0B39  3000               	movlw	0
  7970  0B3A  0726               	addwf	??___ftge,w
  7971  0B3B  00A0               	movwf	___ftge@ff1
  7972  0B3C  3000               	movlw	0
  7973  0B3D  3D27               	addwfc	??___ftge+1,w
  7974  0B3E  00A1               	movwf	___ftge@ff1+1
  7975  0B3F  3080               	movlw	128
  7976  0B40  3D28               	addwfc	??___ftge+2,w
  7977  0B41  00A2               	movwf	___ftge@ff1+2
  7978  0B42                     l2502:	
  7979  0B42  1FA5               	btfss	___ftge@ff2+2,7
  7980  0B43  2B58               	goto	l2506
  7981  0B44  0923               	comf	___ftge@ff2,w
  7982  0B45  00A6               	movwf	??___ftge
  7983  0B46  0924               	comf	___ftge@ff2+1,w
  7984  0B47  00A7               	movwf	??___ftge+1
  7985  0B48  0925               	comf	___ftge@ff2+2,w
  7986  0B49  00A8               	movwf	??___ftge+2
  7987  0B4A  0AA6               	incf	??___ftge,f
  7988  0B4B  1903               	skipnz
  7989  0B4C  0AA7               	incf	??___ftge+1,f
  7990  0B4D  1903               	skipnz
  7991  0B4E  0AA8               	incf	??___ftge+2,f
  7992  0B4F  3000               	movlw	0
  7993  0B50  0726               	addwf	??___ftge,w
  7994  0B51  00A3               	movwf	___ftge@ff2
  7995  0B52  3000               	movlw	0
  7996  0B53  3D27               	addwfc	??___ftge+1,w
  7997  0B54  00A4               	movwf	___ftge@ff2+1
  7998  0B55  3080               	movlw	128
  7999  0B56  3D28               	addwfc	??___ftge+2,w
  8000  0B57  00A5               	movwf	___ftge@ff2+2
  8001  0B58                     l2506:	
  8002  0B58  3080               	movlw	128
  8003  0B59  06A2               	xorwf	___ftge@ff1+2,f
  8004  0B5A  3080               	movlw	128
  8005  0B5B  06A5               	xorwf	___ftge@ff2+2,f
  8006  0B5C  0825               	movf	___ftge@ff2+2,w
  8007  0B5D  0222               	subwf	___ftge@ff1+2,w
  8008  0B5E  1D03               	skipz
  8009  0B5F  0008               	return
  8010  0B60  0824               	movf	___ftge@ff2+1,w
  8011  0B61  0221               	subwf	___ftge@ff1+1,w
  8012  0B62  1D03               	skipz
  8013  0B63  0008               	return
  8014  0B64  0823               	movf	___ftge@ff2,w
  8015  0B65  0220               	subwf	___ftge@ff1,w
  8016  0B66  0008               	return
  8017  0B67                     __end_of___ftge:	
  8018                           
  8019                           	psect	text33
  8020  0408                     __ptext33:	
  8021 ;; *************** function _apInit *****************
  8022 ;; Defined at:
  8023 ;;		line 181 in file "ap.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;  D_temp          2   34[BANK0 ] unsigned int 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;Total ram usage:        3 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:    7
  8044 ;; This function calls:
  8045 ;;		_I2CInit
  8046 ;;		_I2CInit_2
  8047 ;;		_I2C_AS1115_Write
  8048 ;;		_I2C_DAC_Write
  8049 ;;		_adcInit
  8050 ;;		_buttons_init
  8051 ;;		_buttons_setFuncs
  8052 ;;		_event_btn_Stop
  8053 ;;		_initPort
  8054 ;;		_initTimer
  8055 ;;		_timerEventStart
  8056 ;;		_timerInit
  8057 ;; This function is called by:
  8058 ;;		_main
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _apInit
  8064  0408                     _apInit:	
  8065                           
  8066                           ;ap.c: 183: initPort();
  8067                           
  8068                           ;incstack = 0
  8069                           ; Regs used in _apInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8070  0408  318C  24E5  3184   	fcall	_initPort
  8071                           
  8072                           ;ap.c: 184: adcInit();
  8073  040B  3188  2036  3184   	fcall	_adcInit
  8074                           
  8075                           ;ap.c: 185: initTimer();
  8076  040E  3188  204D  3184   	fcall	_initTimer
  8077                           
  8078                           ;ap.c: 186: I2CInit(500);
  8079  0411  30F4               	movlw	244
  8080  0412  0020               	movlb	0	; select bank0
  8081  0413  00B5               	movwf	I2CInit@freq
  8082  0414  3001               	movlw	1
  8083  0415  00B6               	movwf	I2CInit@freq+1
  8084  0416  318B  2367  3184   	fcall	_I2CInit
  8085                           
  8086                           ;ap.c: 187: I2CInit_2(400);
  8087  0419  3090               	movlw	144
  8088  041A  0020               	movlb	0	; select bank0
  8089  041B  00B5               	movwf	I2CInit_2@freq
  8090  041C  3001               	movlw	1
  8091  041D  00B6               	movwf	I2CInit_2@freq+1
  8092  041E  318B  23A4  3184   	fcall	_I2CInit_2
  8093                           
  8094                           ;ap.c: 189: (GIE = 1);
  8095  0421  178B               	bsf	11,7	;volatile
  8096                           
  8097                           ;ap.c: 191: WDTCONbits.SWDTEN = 0b01;
  8098  0422  0021               	movlb	1	; select bank1
  8099  0423  1417               	bsf	23,0	;volatile
  8100                           
  8101                           ;ap.c: 193: timerInit(&Timer[e_button],10,event_timer_Button);
  8102  0424  300A               	movlw	10
  8103  0425  0020               	movlb	0	; select bank0
  8104  0426  00A0               	movwf	timerInit@timeSet
  8105  0427  3000               	movlw	0
  8106  0428  00A1               	movwf	timerInit@timeSet+1
  8107  0429  30A5               	movlw	low _event_timer_Button
  8108  042A  00A2               	movwf	timerInit@func
  8109  042B  3008               	movlw	high _event_timer_Button
  8110  042C  00A3               	movwf	timerInit@func+1
  8111  042D  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  8112  042E  3189  217A  3184   	fcall	_timerInit
  8113                           
  8114                           ;ap.c: 194: timerInit(&Timer[e_expose],1000,event_expose);
  8115  0431  30E8               	movlw	232
  8116  0432  0020               	movlb	0	; select bank0
  8117  0433  00A0               	movwf	timerInit@timeSet
  8118  0434  3003               	movlw	3
  8119  0435  00A1               	movwf	timerInit@timeSet+1
  8120  0436  3077               	movlw	low _event_expose
  8121  0437  00A2               	movwf	timerInit@func
  8122  0438  3008               	movlw	high _event_expose
  8123  0439  00A3               	movwf	timerInit@func+1
  8124  043A  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  8125  043B  3189  217A  3184   	fcall	_timerInit
  8126                           
  8127                           ;ap.c: 195: timerInit(&Timer[e_display],200,event_display);
  8128  043E  30C8               	movlw	200
  8129  043F  0020               	movlb	0	; select bank0
  8130  0440  00A0               	movwf	timerInit@timeSet
  8131  0441  3000               	movlw	0
  8132  0442  00A1               	movwf	timerInit@timeSet+1
  8133  0443  3030               	movlw	low _event_display
  8134  0444  00A2               	movwf	timerInit@func
  8135  0445  3003               	movlw	high _event_display
  8136  0446  00A3               	movwf	timerInit@func+1
  8137  0447  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  8138  0448  3189  217A  3184   	fcall	_timerInit
  8139                           
  8140                           ;ap.c: 196: timerInit(&Timer[e_rst],500,event_rst);
  8141  044B  30F4               	movlw	244
  8142  044C  0020               	movlb	0	; select bank0
  8143  044D  00A0               	movwf	timerInit@timeSet
  8144  044E  3001               	movlw	1
  8145  044F  00A1               	movwf	timerInit@timeSet+1
  8146  0450  3085               	movlw	low _event_rst
  8147  0451  00A2               	movwf	timerInit@func
  8148  0452  3008               	movlw	high _event_rst
  8149  0453  00A3               	movwf	timerInit@func+1
  8150  0454  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  8151  0455  3189  217A  3184   	fcall	_timerInit
  8152                           
  8153                           ;ap.c: 197: timerInit(&Timer[e_anodeCurrent],10,event_anodeCurrent);
  8154  0458  300A               	movlw	10
  8155  0459  0020               	movlb	0	; select bank0
  8156  045A  00A0               	movwf	timerInit@timeSet
  8157  045B  3000               	movlw	0
  8158  045C  00A1               	movwf	timerInit@timeSet+1
  8159  045D  3058               	movlw	low _event_anodeCurrent
  8160  045E  00A2               	movwf	timerInit@func
  8161  045F  3002               	movlw	high _event_anodeCurrent
  8162  0460  00A3               	movwf	timerInit@func+1
  8163  0461  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  8164  0462  3189  217A  3184   	fcall	_timerInit
  8165                           
  8166                           ;ap.c: 199: timerEventStart(&Timer[e_button]);
  8167  0465  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  8168  0466  3188  2008  3184   	fcall	_timerEventStart
  8169                           
  8170                           ;ap.c: 200: timerEventStart(&Timer[e_expose]);
  8171  0469  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  8172  046A  3188  2008  3184   	fcall	_timerEventStart
  8173                           
  8174                           ;ap.c: 201: timerEventStart(&Timer[e_display]);
  8175  046D  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  8176  046E  3188  2008  3184   	fcall	_timerEventStart
  8177                           
  8178                           ;ap.c: 202: timerEventStart(&Timer[e_rst]);
  8179  0471  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  8180  0472  3188  2008  3184   	fcall	_timerEventStart
  8181                           
  8182                           ;ap.c: 204: buttons_init();
  8183  0475  3188  202C  3184   	fcall	_buttons_init
  8184                           
  8185                           ;ap.c: 205: buttons_setFuncs(event_btn_Expose,event_btn_Stop);
  8186  0478  302E               	movlw	low _event_btn_Expose
  8187  0479  0020               	movlb	0	; select bank0
  8188  047A  00A0               	movwf	buttons_setFuncs@btn1
  8189  047B  300D               	movlw	high _event_btn_Expose
  8190  047C  00A1               	movwf	buttons_setFuncs@btn1+1
  8191  047D  30BE               	movlw	low _event_btn_Stop
  8192  047E  00A2               	movwf	buttons_setFuncs@btn2
  8193  047F  3009               	movlw	high _event_btn_Stop
  8194  0480  00A3               	movwf	buttons_setFuncs@btn2+1
  8195  0481  3188  2094  3184   	fcall	_buttons_setFuncs
  8196                           
  8197                           ;ap.c: 207: I2C_AS1115_Write(SHUTDOWN,NORMAL_OPERATION);
  8198  0484  0020               	movlb	0	; select bank0
  8199  0485  01B9               	clrf	I2C_AS1115_Write@data
  8200  0486  0AB9               	incf	I2C_AS1115_Write@data,f
  8201  0487  300C               	movlw	12
  8202  0488  3189  215B  3184   	fcall	_I2C_AS1115_Write
  8203                           
  8204                           ;ap.c: 208: I2C_AS1115_Write(GLOBAL_INTENSITY,7);
  8205  048B  3007               	movlw	7
  8206  048C  0020               	movlb	0	; select bank0
  8207  048D  00C1               	movwf	??_apInit
  8208  048E  0841               	movf	??_apInit,w
  8209  048F  00B9               	movwf	I2C_AS1115_Write@data
  8210  0490  300A               	movlw	10
  8211  0491  3189  215B  3184   	fcall	_I2C_AS1115_Write
  8212                           
  8213                           ;ap.c: 209: I2C_AS1115_Write(DECODE_MODE,0x3F);
  8214  0494  303F               	movlw	63
  8215  0495  0020               	movlb	0	; select bank0
  8216  0496  00C1               	movwf	??_apInit
  8217  0497  0841               	movf	??_apInit,w
  8218  0498  00B9               	movwf	I2C_AS1115_Write@data
  8219  0499  3009               	movlw	9
  8220  049A  3189  215B  3184   	fcall	_I2C_AS1115_Write
  8221                           
  8222                           ;ap.c: 210: I2C_AS1115_Write(SCAN_LIMIT,0x05);
  8223  049D  3005               	movlw	5
  8224  049E  0020               	movlb	0	; select bank0
  8225  049F  00C1               	movwf	??_apInit
  8226  04A0  0841               	movf	??_apInit,w
  8227  04A1  00B9               	movwf	I2C_AS1115_Write@data
  8228  04A2  300B               	movlw	11
  8229  04A3  3189  215B  3184   	fcall	_I2C_AS1115_Write
  8230                           
  8231                           ;ap.c: 212: uint16_t D_temp;
  8232                           ;ap.c: 214: D_temp = 0x000F;
  8233  04A6  300F               	movlw	15
  8234  04A7  0020               	movlb	0	; select bank0
  8235  04A8  00C2               	movwf	apInit@D_temp
  8236  04A9  3000               	movlw	0
  8237  04AA  00C3               	movwf	apInit@D_temp+1
  8238                           
  8239                           ;ap.c: 216: I2C_DAC_Write(0x08,&D_temp);
  8240  04AB  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8241  04AC  00C1               	movwf	??_apInit
  8242  04AD  0841               	movf	??_apInit,w
  8243  04AE  00B9               	movwf	I2C_DAC_Write@data
  8244  04AF  3008               	movlw	8
  8245  04B0  318A  22F2  3184   	fcall	_I2C_DAC_Write
  8246                           
  8247                           ;ap.c: 218: D_temp = 2048;
  8248  04B3  3000               	movlw	0
  8249  04B4  0020               	movlb	0	; select bank0
  8250  04B5  00C2               	movwf	apInit@D_temp
  8251  04B6  3008               	movlw	8
  8252  04B7  00C3               	movwf	apInit@D_temp+1
  8253                           
  8254                           ;ap.c: 219: I2C_DAC_Write(0x10,&D_temp);
  8255  04B8  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8256  04B9  00C1               	movwf	??_apInit
  8257  04BA  0841               	movf	??_apInit,w
  8258  04BB  00B9               	movwf	I2C_DAC_Write@data
  8259  04BC  3010               	movlw	16
  8260  04BD  318A  22F2  3184   	fcall	_I2C_DAC_Write
  8261                           
  8262                           ;ap.c: 220: I2C_DAC_Write(0x00,&D_temp);
  8263  04C0  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8264  04C1  0020               	movlb	0	; select bank0
  8265  04C2  00C1               	movwf	??_apInit
  8266  04C3  0841               	movf	??_apInit,w
  8267  04C4  00B9               	movwf	I2C_DAC_Write@data
  8268  04C5  3000               	movlw	0
  8269  04C6  318A  22F2  3184   	fcall	_I2C_DAC_Write
  8270                           
  8271                           ;ap.c: 222: I2C_DAC_Write(0x11,&D_temp);
  8272  04C9  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8273  04CA  0020               	movlb	0	; select bank0
  8274  04CB  00C1               	movwf	??_apInit
  8275  04CC  0841               	movf	??_apInit,w
  8276  04CD  00B9               	movwf	I2C_DAC_Write@data
  8277  04CE  3011               	movlw	17
  8278  04CF  318A  22F2  3184   	fcall	_I2C_DAC_Write
  8279                           
  8280                           ;ap.c: 223: I2C_DAC_Write(0x01,&D_temp);
  8281  04D2  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8282  04D3  0020               	movlb	0	; select bank0
  8283  04D4  00C1               	movwf	??_apInit
  8284  04D5  0841               	movf	??_apInit,w
  8285  04D6  00B9               	movwf	I2C_DAC_Write@data
  8286  04D7  3001               	movlw	1
  8287  04D8  318A  22F2  3184   	fcall	_I2C_DAC_Write
  8288                           
  8289                           ;ap.c: 225: event_btn_Stop();
  8290  04DB  3189  21BE         	fcall	_event_btn_Stop
  8291  04DD  0008               	return
  8292  04DE                     __end_of_apInit:	
  8293                           
  8294                           	psect	text34
  8295  097A                     __ptext34:	
  8296 ;; *************** function _timerInit *****************
  8297 ;; Defined at:
  8298 ;;		line 10 in file "timer.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;  time            1    wreg     PTR struct .
  8301 ;;		 -> Timer(48), 
  8302 ;;  timeSet         2    0[BANK0 ] unsigned int 
  8303 ;;  func            2    2[BANK0 ] PTR FTN()void 
  8304 ;;		 -> event_anodeCurrent(1), event_rst(1), event_display(1), event_expose(1), 
  8305 ;;		 -> event_timer_Button(1), 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  time            1    4[BANK0 ] PTR struct .
  8308 ;;		 -> Timer(48), 
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8318 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;Total ram usage:        5 bytes
  8323 ;; Hardware stack levels used:    1
  8324 ;; Hardware stack levels required when called:    2
  8325 ;; This function calls:
  8326 ;;		Nothing
  8327 ;; This function is called by:
  8328 ;;		_apInit
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           
  8333                           ;psect for function _timerInit
  8334  097A                     _timerInit:	
  8335                           
  8336                           ;incstack = 0
  8337                           ; Regs used in _timerInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8338                           ;timerInit@time stored from wreg
  8339  097A  0020               	movlb	0	; select bank0
  8340  097B  00A4               	movwf	timerInit@time
  8341                           
  8342                           ;timer.c: 12: time->start = 0;
  8343  097C  0824               	movf	timerInit@time,w
  8344  097D  0086               	movwf	6
  8345  097E  0187               	clrf	7
  8346  097F  0181               	clrf	1
  8347                           
  8348                           ;timer.c: 13: time->tick = 0;
  8349  0980  0A24               	incf	timerInit@time,w
  8350  0981  0086               	movwf	6
  8351  0982  0187               	clrf	7
  8352  0983  0181               	clrf	1
  8353                           
  8354                           ;timer.c: 14: time->set = timeSet;
  8355  0984  0824               	movf	timerInit@time,w
  8356  0985  3E02               	addlw	2
  8357  0986  0086               	movwf	6
  8358  0987  0187               	clrf	7
  8359  0988  0820               	movf	timerInit@timeSet,w
  8360  0989  3FC0               	movwi [0]fsr1
  8361  098A  0821               	movf	timerInit@timeSet+1,w
  8362  098B  3FC1               	movwi [1]fsr1
  8363                           
  8364                           ;timer.c: 15: time->interval = 0;
  8365  098C  0824               	movf	timerInit@time,w
  8366  098D  3E04               	addlw	4
  8367  098E  0086               	movwf	6
  8368  098F  0187               	clrf	7
  8369  0990  3000               	movlw	0
  8370  0991  3FC0               	movwi [0]fsr1
  8371  0992  3FC1               	movwi [1]fsr1
  8372                           
  8373                           ;timer.c: 16: time->timeProc = func;
  8374  0993  0824               	movf	timerInit@time,w
  8375  0994  3E06               	addlw	6
  8376  0995  0086               	movwf	6
  8377  0996  0187               	clrf	7
  8378  0997  0822               	movf	timerInit@func,w
  8379  0998  3FC0               	movwi [0]fsr1
  8380  0999  0823               	movf	timerInit@func+1,w
  8381  099A  3FC1               	movwi [1]fsr1
  8382  099B  0008               	return
  8383  099C                     __end_of_timerInit:	
  8384                           
  8385                           	psect	text35
  8386  0808                     __ptext35:	
  8387 ;; *************** function _timerEventStart *****************
  8388 ;; Defined at:
  8389 ;;		line 24 in file "timer.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  time            1    wreg     PTR struct .
  8392 ;;		 -> Timer(48), 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  time            1    0[BANK0 ] PTR struct .
  8395 ;;		 -> Timer(48), 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  1    wreg      void 
  8398 ;; Registers used:
  8399 ;;		wreg, fsr1l, fsr1h
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;Total ram usage:        1 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; Hardware stack levels required when called:    2
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_event_btn_Expose
  8416 ;;		_event_display
  8417 ;;		_apInit
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           
  8422                           ;psect for function _timerEventStart
  8423  0808                     _timerEventStart:	
  8424                           
  8425                           ;incstack = 0
  8426                           ; Regs used in _timerEventStart: [wregfsr1]
  8427                           ;timerEventStart@time stored from wreg
  8428  0808  0020               	movlb	0	; select bank0
  8429  0809  00A0               	movwf	timerEventStart@time
  8430                           
  8431                           ;timer.c: 26: time->start = 1;
  8432  080A  0820               	movf	timerEventStart@time,w
  8433  080B  0086               	movwf	6
  8434  080C  0187               	clrf	7
  8435  080D  0181               	clrf	1
  8436  080E  0A81               	incf	1,f
  8437  080F  0008               	return
  8438  0810                     __end_of_timerEventStart:	
  8439                           
  8440                           	psect	text36
  8441  084D                     __ptext36:	
  8442 ;; *************** function _initTimer *****************
  8443 ;; Defined at:
  8444 ;;		line 345 in file "ap.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;Total ram usage:        0 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    2
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_apInit
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           
  8473                           ;psect for function _initTimer
  8474  084D                     _initTimer:	
  8475                           
  8476                           ;ap.c: 348: OPTION_REGbits.TMR0CS = 0;
  8477                           
  8478                           ;incstack = 0
  8479                           ; Regs used in _initTimer: [wreg+status,2+status,0]
  8480  084D  0021               	movlb	1	; select bank1
  8481  084E  1295               	bcf	21,5	;volatile
  8482                           
  8483                           ;ap.c: 349: OPTION_REGbits.TMR0SE = 0;
  8484  084F  1215               	bcf	21,4	;volatile
  8485                           
  8486                           ;ap.c: 350: OPTION_REGbits.PSA = 0;
  8487  0850  1195               	bcf	21,3	;volatile
  8488                           
  8489                           ;ap.c: 352: OPTION_REGbits.PS = 0b010;
  8490  0851  0815               	movf	21,w	;volatile
  8491  0852  39F8               	andlw	-8
  8492  0853  3802               	iorlw	2
  8493  0854  0095               	movwf	21	;volatile
  8494                           
  8495                           ;ap.c: 353: TMR0 = 131;
  8496  0855  3083               	movlw	131
  8497  0856  0020               	movlb	0	; select bank0
  8498  0857  0095               	movwf	21	;volatile
  8499                           
  8500                           ;ap.c: 381: INTCONbits.TMR0IE = 1;
  8501  0858  168B               	bsf	11,5	;volatile
  8502                           
  8503                           ;ap.c: 382: INTCONbits.TMR0IF = 0;
  8504  0859  110B               	bcf	11,2	;volatile
  8505  085A  0008               	return
  8506  085B                     __end_of_initTimer:	
  8507                           
  8508                           	psect	text37
  8509  0CE5                     __ptext37:	
  8510 ;; *************** function _initPort *****************
  8511 ;; Defined at:
  8512 ;;		line 278 in file "ap.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;		None
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;		None
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      void 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;Total ram usage:        0 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    2
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_apInit
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           
  8541                           ;psect for function _initPort
  8542  0CE5                     _initPort:	
  8543                           
  8544                           ;ap.c: 282: OSCCONbits.SCS = 0b00;
  8545                           
  8546                           ;incstack = 0
  8547                           ; Regs used in _initPort: [wreg+status,2+status,0]
  8548  0CE5  30FC               	movlw	-4
  8549  0CE6  0021               	movlb	1	; select bank1
  8550  0CE7  0599               	andwf	25,f	;volatile
  8551                           
  8552                           ;ap.c: 283: OSCCONbits.IRCF = 0b1101;
  8553  0CE8  0819               	movf	25,w	;volatile
  8554  0CE9  3987               	andlw	-121
  8555  0CEA  3868               	iorlw	104
  8556  0CEB  0099               	movwf	25	;volatile
  8557                           
  8558                           ;ap.c: 300: OPTION_REGbits.nWPUEN = 0;
  8559  0CEC  1395               	bcf	21,7	;volatile
  8560                           
  8561                           ;ap.c: 306: PORTA = 0x00;
  8562  0CED  0020               	movlb	0	; select bank0
  8563  0CEE  018C               	clrf	12	;volatile
  8564                           
  8565                           ;ap.c: 307: LATA = 0x00;
  8566  0CEF  0022               	movlb	2	; select bank2
  8567  0CF0  018C               	clrf	12	;volatile
  8568                           
  8569                           ;ap.c: 308: ANSELA = 0b00111110;
  8570  0CF1  303E               	movlw	62
  8571  0CF2  0023               	movlb	3	; select bank3
  8572  0CF3  008C               	movwf	12	;volatile
  8573                           
  8574                           ;ap.c: 309: TRISA = 0b11111111;
  8575  0CF4  30FF               	movlw	255
  8576  0CF5  0021               	movlb	1	; select bank1
  8577  0CF6  008C               	movwf	12	;volatile
  8578                           
  8579                           ;ap.c: 311: PORTB = 0x00;
  8580  0CF7  0020               	movlb	0	; select bank0
  8581  0CF8  018D               	clrf	13	;volatile
  8582                           
  8583                           ;ap.c: 312: LATB = 0x00;
  8584  0CF9  0022               	movlb	2	; select bank2
  8585  0CFA  018D               	clrf	13	;volatile
  8586                           
  8587                           ;ap.c: 313: WPUB = 0b10000100;
  8588  0CFB  3084               	movlw	132
  8589  0CFC  0024               	movlb	4	; select bank4
  8590  0CFD  008D               	movwf	13	;volatile
  8591                           
  8592                           ;ap.c: 315: TRISB = 0b10101110;
  8593  0CFE  30AE               	movlw	174
  8594  0CFF  0021               	movlb	1	; select bank1
  8595  0D00  008D               	movwf	13	;volatile
  8596                           
  8597                           ;ap.c: 317: PORTC = 0x00;
  8598  0D01  0020               	movlb	0	; select bank0
  8599  0D02  018E               	clrf	14	;volatile
  8600                           
  8601                           ;ap.c: 318: LATC = 0x03;
  8602  0D03  3003               	movlw	3
  8603  0D04  0022               	movlb	2	; select bank2
  8604  0D05  008E               	movwf	14	;volatile
  8605                           
  8606                           ;ap.c: 319: TRISC = 0b11111000;
  8607  0D06  30F8               	movlw	248
  8608  0D07  0021               	movlb	1	; select bank1
  8609  0D08  008E               	movwf	14	;volatile
  8610                           
  8611                           ;ap.c: 321: PORTD = 0x00;
  8612  0D09  0020               	movlb	0	; select bank0
  8613  0D0A  018F               	clrf	15	;volatile
  8614                           
  8615                           ;ap.c: 322: LATD = 0x00;
  8616  0D0B  0022               	movlb	2	; select bank2
  8617  0D0C  018F               	clrf	15	;volatile
  8618                           
  8619                           ;ap.c: 323: TRISD = 0b011100100;
  8620  0D0D  30E4               	movlw	228
  8621  0D0E  0021               	movlb	1	; select bank1
  8622  0D0F  008F               	movwf	15	;volatile
  8623                           
  8624                           ;ap.c: 325: PORTE = 0x00;
  8625  0D10  0020               	movlb	0	; select bank0
  8626  0D11  0190               	clrf	16	;volatile
  8627                           
  8628                           ;ap.c: 326: LATE = 0x00;
  8629  0D12  0022               	movlb	2	; select bank2
  8630  0D13  0190               	clrf	16	;volatile
  8631                           
  8632                           ;ap.c: 327: ANSELE = 0x00;
  8633  0D14  0023               	movlb	3	; select bank3
  8634  0D15  0190               	clrf	16	;volatile
  8635                           
  8636                           ;ap.c: 328: TRISE = 0b01110000;
  8637  0D16  3070               	movlw	112
  8638  0D17  0021               	movlb	1	; select bank1
  8639  0D18  0090               	movwf	16	;volatile
  8640                           
  8641                           ;ap.c: 330: PORTF = 0x00;
  8642  0D19  0025               	movlb	5	; select bank5
  8643  0D1A  018C               	clrf	12	;volatile
  8644                           
  8645                           ;ap.c: 331: LATF = 0x00;
  8646  0D1B  0027               	movlb	7	; select bank7
  8647  0D1C  018C               	clrf	12	;volatile
  8648                           
  8649                           ;ap.c: 332: ANSELF = 0x00;
  8650  0D1D  0028               	movlb	8	; select bank8
  8651  0D1E  018C               	clrf	12	;volatile
  8652                           
  8653                           ;ap.c: 333: TRISF = 0b10000011;
  8654  0D1F  3083               	movlw	131
  8655  0D20  0026               	movlb	6	; select bank6
  8656  0D21  008C               	movwf	12	;volatile
  8657                           
  8658                           ;ap.c: 335: PORTG = 0x00;
  8659  0D22  0025               	movlb	5	; select bank5
  8660  0D23  018D               	clrf	13	;volatile
  8661                           
  8662                           ;ap.c: 336: LATG = 0x00;
  8663  0D24  0027               	movlb	7	; select bank7
  8664  0D25  018D               	clrf	13	;volatile
  8665                           
  8666                           ;ap.c: 337: TRISG = 0b00011100;
  8667  0D26  301C               	movlw	28
  8668  0D27  0026               	movlb	6	; select bank6
  8669  0D28  008D               	movwf	13	;volatile
  8670                           
  8671                           ;ap.c: 338: ANSELG = 0;
  8672  0D29  0028               	movlb	8	; select bank8
  8673  0D2A  018D               	clrf	13	;volatile
  8674                           
  8675                           ;ap.c: 339: WPUG = 0;
  8676  0D2B  0029               	movlb	9	; select bank9
  8677  0D2C  018D               	clrf	13	;volatile
  8678  0D2D  0008               	return
  8679  0D2E                     __end_of_initPort:	
  8680                           
  8681                           	psect	text38
  8682  08C8                     __ptext38:	
  8683 ;; *************** function _timerTickClear *****************
  8684 ;; Defined at:
  8685 ;;		line 34 in file "timer.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  time            1    wreg     PTR struct .
  8688 ;;		 -> Timer(48), 
  8689 ;;  start           1    0[BANK0 ] unsigned char 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  time            1    2[BANK0 ] PTR struct .
  8692 ;;		 -> Timer(48), 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      void 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8702 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8706 ;;Total ram usage:        3 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    2
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_event_btn_Stop
  8713 ;;		_event_timer_Button
  8714 ;;		_event_expose
  8715 ;;		_event_display
  8716 ;;		_event_rst
  8717 ;;		_event_anodeCurrent
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           
  8722                           ;psect for function _timerTickClear
  8723  08C8                     _timerTickClear:	
  8724                           
  8725                           ;incstack = 0
  8726                           ; Regs used in _timerTickClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  8727                           ;timerTickClear@time stored from wreg
  8728  08C8  0020               	movlb	0	; select bank0
  8729  08C9  00A2               	movwf	timerTickClear@time
  8730                           
  8731                           ;timer.c: 36: time->start = start;
  8732  08CA  0820               	movf	timerTickClear@start,w
  8733  08CB  00A1               	movwf	??_timerTickClear
  8734  08CC  0822               	movf	timerTickClear@time,w
  8735  08CD  0086               	movwf	6
  8736  08CE  0187               	clrf	7
  8737  08CF  0821               	movf	??_timerTickClear,w
  8738  08D0  0081               	movwf	1
  8739                           
  8740                           ;timer.c: 37: time->tick = 0;
  8741  08D1  0A22               	incf	timerTickClear@time,w
  8742  08D2  0086               	movwf	6
  8743  08D3  0187               	clrf	7
  8744  08D4  0181               	clrf	1
  8745                           
  8746                           ;timer.c: 38: time->interval = 0;
  8747  08D5  0822               	movf	timerTickClear@time,w
  8748  08D6  3E04               	addlw	4
  8749  08D7  0086               	movwf	6
  8750  08D8  0187               	clrf	7
  8751  08D9  3000               	movlw	0
  8752  08DA  3FC0               	movwi [0]fsr1
  8753  08DB  3FC1               	movwi [1]fsr1
  8754  08DC  0008               	return
  8755  08DD                     __end_of_timerTickClear:	
  8756                           
  8757                           	psect	text39
  8758  0800                     __ptext39:	
  8759 ;; *************** function _pwmStop_ccp3 *****************
  8760 ;; Defined at:
  8761 ;;		line 100 in file "pwm.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;		None
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      void 
  8768 ;; Registers used:
  8769 ;;		None
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8779 ;;Total ram usage:        0 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    2
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_event_btn_Stop
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           
  8790                           ;psect for function _pwmStop_ccp3
  8791  0800                     _pwmStop_ccp3:	
  8792                           
  8793                           ;pwm.c: 102: CCP3CONbits.CCP3M3 = 0;
  8794                           
  8795                           ;incstack = 0
  8796                           ; Regs used in _pwmStop_ccp3: []
  8797  0800  0026               	movlb	6	; select bank6
  8798  0801  1193               	bcf	19,3	;volatile
  8799                           
  8800                           ;pwm.c: 103: CCP3CONbits.CCP3M2 = 0;
  8801  0802  1113               	bcf	19,2	;volatile
  8802                           
  8803                           ;pwm.c: 104: CCP3CONbits.CCP3M1 = 0;
  8804  0803  1093               	bcf	19,1	;volatile
  8805                           
  8806                           ;pwm.c: 105: CCP3CONbits.CCP3M0 = 0;
  8807  0804  1013               	bcf	19,0	;volatile
  8808                           
  8809                           ;pwm.c: 107: T4CONbits.TMR4ON = 0;
  8810  0805  0028               	movlb	8	; select bank8
  8811  0806  1117               	bcf	23,2	;volatile
  8812  0807  0008               	return
  8813  0808                     __end_of_pwmStop_ccp3:	
  8814                           
  8815                           	psect	text40
  8816  17E6                     __ptext40:	
  8817 ;; *************** function _pwmStop_ccp2 *****************
  8818 ;; Defined at:
  8819 ;;		line 56 in file "pwm.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    2
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_event_btn_Stop
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           
  8848                           ;psect for function _pwmStop_ccp2
  8849  17E6                     _pwmStop_ccp2:	
  8850                           
  8851                           ;pwm.c: 58: CCP2CONbits.CCP2M = 0;
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in _pwmStop_ccp2: [wreg+status,2+status,0]
  8855  17E6  30F0               	movlw	-16
  8856  17E7  0025               	movlb	5	; select bank5
  8857  17E8  059A               	andwf	26,f	;volatile
  8858                           
  8859                           ;pwm.c: 59: T2CONbits.TMR2ON = 0;
  8860  17E9  0020               	movlb	0	; select bank0
  8861  17EA  111C               	bcf	28,2	;volatile
  8862  17EB  0008               	return
  8863  17EC                     __end_of_pwmStop_ccp2:	
  8864                           
  8865                           	psect	text41
  8866  0AF2                     __ptext41:	
  8867 ;; *************** function _I2C_DAC_Write *****************
  8868 ;; Defined at:
  8869 ;;		line 4 in file "MCP47FEB2X.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;  address         1    wreg     unsigned char 
  8872 ;;  data            1   25[BANK0 ] PTR int 
  8873 ;;		 -> apInit@D_temp(2), event_btn_Stop@temp(2), event_btn_Expose@temp(2), 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  address         1   28[BANK0 ] unsigned char 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8885 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;Total ram usage:        4 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    5
  8892 ;; This function calls:
  8893 ;;		_I2CAck_2
  8894 ;;		_I2CSend_2
  8895 ;;		_I2CStart_2
  8896 ;;		_I2CStop_2
  8897 ;; This function is called by:
  8898 ;;		_event_btn_Expose
  8899 ;;		_event_btn_Stop
  8900 ;;		_apInit
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           
  8905                           ;psect for function _I2C_DAC_Write
  8906  0AF2                     _I2C_DAC_Write:	
  8907                           
  8908                           ;incstack = 0
  8909                           ; Regs used in _I2C_DAC_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8910                           ;I2C_DAC_Write@address stored from wreg
  8911  0AF2  0020               	movlb	0	; select bank0
  8912  0AF3  00BC               	movwf	I2C_DAC_Write@address
  8913                           
  8914                           ;MCP47FEB2X.c: 7: I2CStart_2();
  8915  0AF4  3197  27DC  318A   	fcall	_I2CStart_2
  8916                           
  8917                           ;MCP47FEB2X.c: 8: I2CSend_2(0xC0);
  8918  0AF7  30C0               	movlw	192
  8919  0AF8  3188  2019  318A   	fcall	_I2CSend_2
  8920                           
  8921                           ;MCP47FEB2X.c: 9: I2CAck_2();
  8922  0AFB  318C  2421  318A   	fcall	_I2CAck_2
  8923                           
  8924                           ;MCP47FEB2X.c: 10: I2CSend_2((address << 3) & 0xF8);
  8925  0AFE  0020               	movlb	0	; select bank0
  8926  0AFF  083C               	movf	I2C_DAC_Write@address,w
  8927  0B00  00BA               	movwf	??_I2C_DAC_Write
  8928  0B01  3002               	movlw	2
  8929  0B02                     u2145:	
  8930  0B02  35BA               	lslf	??_I2C_DAC_Write,f
  8931  0B03  3EFF               	addlw	-1
  8932  0B04  1D03               	skipz
  8933  0B05  2B02               	goto	u2145
  8934  0B06  353A               	lslf	??_I2C_DAC_Write,w
  8935  0B07  39F8               	andlw	248
  8936  0B08  3188  2019  318A   	fcall	_I2CSend_2
  8937                           
  8938                           ;MCP47FEB2X.c: 11: I2CAck_2();
  8939  0B0B  318C  2421  318A   	fcall	_I2CAck_2
  8940                           
  8941                           ;MCP47FEB2X.c: 12: I2CSend_2(((*data) >> 8) & 0xFF);
  8942  0B0E  0020               	movlb	0	; select bank0
  8943  0B0F  0839               	movf	I2C_DAC_Write@data,w
  8944  0B10  0086               	movwf	6
  8945  0B11  0187               	clrf	7
  8946  0B12  3F40               	moviw [0]fsr1
  8947  0B13  00BA               	movwf	??_I2C_DAC_Write
  8948  0B14  3F41               	moviw [1]fsr1
  8949  0B15  00BB               	movwf	??_I2C_DAC_Write+1
  8950  0B16  083B               	movf	??_I2C_DAC_Write+1,w
  8951  0B17  3188  2019  318A   	fcall	_I2CSend_2
  8952                           
  8953                           ;MCP47FEB2X.c: 13: I2CAck_2();
  8954  0B1A  318C  2421  318A   	fcall	_I2CAck_2
  8955                           
  8956                           ;MCP47FEB2X.c: 14: I2CSend_2((*data) & 0xFF);
  8957  0B1D  0020               	movlb	0	; select bank0
  8958  0B1E  0839               	movf	I2C_DAC_Write@data,w
  8959  0B1F  0086               	movwf	6
  8960  0B20  0187               	clrf	7
  8961  0B21  0801               	movf	1,w
  8962  0B22  3188  2019  318A   	fcall	_I2CSend_2
  8963                           
  8964                           ;MCP47FEB2X.c: 15: I2CAck_2();
  8965  0B25  318C  2421  318A   	fcall	_I2CAck_2
  8966                           
  8967                           ;MCP47FEB2X.c: 16: I2CStop_2();
  8968  0B28  3197  27E1         	fcall	_I2CStop_2
  8969  0B2A  0008               	return
  8970  0B2B                     __end_of_I2C_DAC_Write:	
  8971                           
  8972                           	psect	text42
  8973  17E1                     __ptext42:	
  8974 ;; *************** function _I2CStop_2 *****************
  8975 ;; Defined at:
  8976 ;;		line 147 in file "I2C.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0, pclath, cstack
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;Total ram usage:        0 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    4
  8997 ;; This function calls:
  8998 ;;		_I2CWait_2
  8999 ;; This function is called by:
  9000 ;;		_I2C_DAC_Write
  9001 ;;		_I2C_DAC_Read
  9002 ;;		_I2C_Config_Write
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           
  9007                           ;psect for function _I2CStop_2
  9008  17E1                     _I2CStop_2:	
  9009                           
  9010                           ;I2C.c: 149: I2CWait_2();
  9011                           
  9012                           ;incstack = 0
  9013                           ; Regs used in _I2CStop_2: [wreg+status,2+status,0+pclath+cstack]
  9014  17E1  318C  24A3         	fcall	_I2CWait_2
  9015                           
  9016                           ;I2C.c: 150: SSP2CON2bits.PEN = 1;
  9017  17E3  0024               	movlb	4	; select bank4
  9018  17E4  151E               	bsf	30,2	;volatile
  9019  17E5  0008               	return
  9020  17E6                     __end_of_I2CStop_2:	
  9021                           
  9022                           	psect	text43
  9023  17DC                     __ptext43:	
  9024 ;; *************** function _I2CStart_2 *****************
  9025 ;; Defined at:
  9026 ;;		line 140 in file "I2C.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;		None
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, status,2, status,0, pclath, cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;Total ram usage:        0 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:    4
  9047 ;; This function calls:
  9048 ;;		_I2CWait_2
  9049 ;; This function is called by:
  9050 ;;		_I2C_DAC_Write
  9051 ;;		_I2C_DAC_Read
  9052 ;;		_I2C_Config_Write
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           
  9057                           ;psect for function _I2CStart_2
  9058  17DC                     _I2CStart_2:	
  9059                           
  9060                           ;I2C.c: 142: I2CWait_2();
  9061                           
  9062                           ;incstack = 0
  9063                           ; Regs used in _I2CStart_2: [wreg+status,2+status,0+pclath+cstack]
  9064  17DC  318C  24A3         	fcall	_I2CWait_2
  9065                           
  9066                           ;I2C.c: 143: SSP2CON2bits.SEN = 1;
  9067  17DE  0024               	movlb	4	; select bank4
  9068  17DF  141E               	bsf	30,0	;volatile
  9069  17E0  0008               	return
  9070  17E1                     __end_of_I2CStart_2:	
  9071                           
  9072                           	psect	text44
  9073  0819                     __ptext44:	
  9074 ;; *************** function _I2CSend_2 *****************
  9075 ;; Defined at:
  9076 ;;		line 214 in file "I2C.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  dat             1    wreg     unsigned char 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  dat             1   24[BANK0 ] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, status,2, status,0, pclath, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;Total ram usage:        1 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    4
  9097 ;; This function calls:
  9098 ;;		_I2CWait_2
  9099 ;; This function is called by:
  9100 ;;		_I2C_DAC_Write
  9101 ;;		_I2C_DAC_Read
  9102 ;;		_I2C_Config_Write
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           
  9107                           ;psect for function _I2CSend_2
  9108  0819                     _I2CSend_2:	
  9109                           
  9110                           ;incstack = 0
  9111                           ; Regs used in _I2CSend_2: [wreg+status,2+status,0+pclath+cstack]
  9112                           ;I2CSend_2@dat stored from wreg
  9113  0819  0020               	movlb	0	; select bank0
  9114  081A  00B8               	movwf	I2CSend_2@dat
  9115                           
  9116                           ;I2C.c: 216: I2CWait_2();
  9117  081B  318C  24A3         	fcall	_I2CWait_2
  9118                           
  9119                           ;I2C.c: 217: SSP2BUF = dat;
  9120  081D  0020               	movlb	0	; select bank0
  9121  081E  0838               	movf	I2CSend_2@dat,w
  9122  081F  0024               	movlb	4	; select bank4
  9123  0820  0099               	movwf	25	;volatile
  9124  0821  0008               	return
  9125  0822                     __end_of_I2CSend_2:	
  9126                           
  9127                           	psect	text45
  9128  0CA3                     __ptext45:	
  9129 ;; *************** function _I2CWait_2 *****************
  9130 ;; Defined at:
  9131 ;;		line 197 in file "I2C.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;		None
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;  prev            4   20[BANK0 ] unsigned long 
  9136 ;;  now             4   16[BANK0 ] unsigned long 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, status,2, status,0, pclath, cstack
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;Total ram usage:        8 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    3
  9153 ;; This function calls:
  9154 ;;		_get_millis
  9155 ;;		_init_millis
  9156 ;;		_millis
  9157 ;; This function is called by:
  9158 ;;		_I2CStart_2
  9159 ;;		_I2CStop_2
  9160 ;;		_I2CSend_2
  9161 ;;		_I2CRestart_2
  9162 ;;		_I2CRead_2
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           
  9167                           ;psect for function _I2CWait_2
  9168  0CA3                     _I2CWait_2:	
  9169                           
  9170                           ;I2C.c: 199: millis_t now,prev=0;
  9171                           
  9172                           ;incstack = 0
  9173                           ; Regs used in _I2CWait_2: [wreg+status,2+status,0+pclath+cstack]
  9174  0CA3  3000               	movlw	0
  9175  0CA4  0020               	movlb	0	; select bank0
  9176  0CA5  00B7               	movwf	I2CWait_2@prev+3
  9177  0CA6  3000               	movlw	0
  9178  0CA7  00B6               	movwf	I2CWait_2@prev+2
  9179  0CA8  3000               	movlw	0
  9180  0CA9  00B5               	movwf	I2CWait_2@prev+1
  9181  0CAA  3000               	movlw	0
  9182  0CAB  00B4               	movwf	I2CWait_2@prev
  9183                           
  9184                           ;I2C.c: 200: init_millis();
  9185  0CAC  3188  2022  318C   	fcall	_init_millis
  9186  0CAF                     l1986:	
  9187                           ;I2C.c: 203: while ( (SSP2CON2 & 0x1F) || ( SSP2STAT & 0x04 ))
  9188                           
  9189  0CAF  0024               	movlb	4	; select bank4
  9190  0CB0  081E               	movf	30,w	;volatile
  9191  0CB1  391F               	andlw	31
  9192  0CB2  1903               	btfsc	3,2
  9193  0CB3  2CE2               	goto	l1988
  9194  0CB4                     l1980:	
  9195                           
  9196                           ;I2C.c: 204: {
  9197                           ;I2C.c: 205: now = millis();
  9198  0CB4  3189  2108  318C   	fcall	_millis
  9199  0CB7  0020               	movlb	0	; select bank0
  9200  0CB8  0823               	movf	?_millis+3,w
  9201  0CB9  00B3               	movwf	I2CWait_2@now+3
  9202  0CBA  0822               	movf	?_millis+2,w
  9203  0CBB  00B2               	movwf	I2CWait_2@now+2
  9204  0CBC  0821               	movf	?_millis+1,w
  9205  0CBD  00B1               	movwf	I2CWait_2@now+1
  9206  0CBE  0820               	movf	?_millis,w
  9207  0CBF  00B0               	movwf	I2CWait_2@now
  9208                           
  9209                           ;I2C.c: 206: if(get_millis(now,prev) > 10)
  9210  0CC0  0833               	movf	I2CWait_2@now+3,w
  9211  0CC1  00A3               	movwf	get_millis@now+3
  9212  0CC2  0832               	movf	I2CWait_2@now+2,w
  9213  0CC3  00A2               	movwf	get_millis@now+2
  9214  0CC4  0831               	movf	I2CWait_2@now+1,w
  9215  0CC5  00A1               	movwf	get_millis@now+1
  9216  0CC6  0830               	movf	I2CWait_2@now,w
  9217  0CC7  00A0               	movwf	get_millis@now
  9218  0CC8  0837               	movf	I2CWait_2@prev+3,w
  9219  0CC9  00A7               	movwf	get_millis@prev_now+3
  9220  0CCA  0836               	movf	I2CWait_2@prev+2,w
  9221  0CCB  00A6               	movwf	get_millis@prev_now+2
  9222  0CCC  0835               	movf	I2CWait_2@prev+1,w
  9223  0CCD  00A5               	movwf	get_millis@prev_now+1
  9224  0CCE  0834               	movf	I2CWait_2@prev,w
  9225  0CCF  00A4               	movwf	get_millis@prev_now
  9226  0CD0  3189  21E2  318C   	fcall	_get_millis
  9227  0CD3  0020               	movlb	0	; select bank0
  9228  0CD4  0823               	movf	?_get_millis+3,w
  9229  0CD5  1D03               	btfss	3,2
  9230  0CD6  0008               	return
  9231  0CD7  0822               	movf	?_get_millis+2,w
  9232  0CD8  1D03               	btfss	3,2
  9233  0CD9  0008               	return
  9234  0CDA  0821               	movf	?_get_millis+1,w
  9235  0CDB  1D03               	btfss	3,2
  9236  0CDC  0008               	return
  9237  0CDD  300B               	movlw	11
  9238  0CDE  0220               	subwf	?_get_millis,w
  9239  0CDF  1803               	btfsc	3,0
  9240  0CE0  0008               	return
  9241  0CE1  2CAF               	goto	l1986
  9242  0CE2                     l1988:	
  9243                           ;I2C.c: 207: {
  9244                           ;I2C.c: 208: break;
  9245                           
  9246  0CE2  1D1C               	btfss	28,2	;volatile
  9247  0CE3  0008               	return
  9248  0CE4  2CB4               	goto	l1980
  9249  0CE5                     __end_of_I2CWait_2:	
  9250                           
  9251                           	psect	text46
  9252  0C21                     __ptext46:	
  9253 ;; *************** function _I2CAck_2 *****************
  9254 ;; Defined at:
  9255 ;;		line 161 in file "I2C.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;		None
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  prev            4   20[BANK0 ] unsigned long 
  9260 ;;  now             4   16[BANK0 ] unsigned long 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;Total ram usage:        8 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    3
  9277 ;; This function calls:
  9278 ;;		_get_millis
  9279 ;;		_init_millis
  9280 ;;		_millis
  9281 ;; This function is called by:
  9282 ;;		_I2C_DAC_Write
  9283 ;;		_I2C_DAC_Read
  9284 ;;		_I2C_Config_Write
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           
  9289                           ;psect for function _I2CAck_2
  9290  0C21                     _I2CAck_2:	
  9291                           
  9292                           ;I2C.c: 163: millis_t now,prev=0;
  9293                           
  9294                           ;incstack = 0
  9295                           ; Regs used in _I2CAck_2: [wreg+status,2+status,0+pclath+cstack]
  9296  0C21  3000               	movlw	0
  9297  0C22  0020               	movlb	0	; select bank0
  9298  0C23  00B7               	movwf	I2CAck_2@prev+3
  9299  0C24  3000               	movlw	0
  9300  0C25  00B6               	movwf	I2CAck_2@prev+2
  9301  0C26  3000               	movlw	0
  9302  0C27  00B5               	movwf	I2CAck_2@prev+1
  9303  0C28  3000               	movlw	0
  9304  0C29  00B4               	movwf	I2CAck_2@prev
  9305                           
  9306                           ;I2C.c: 164: init_millis();
  9307  0C2A  3188  2022  318C   	fcall	_init_millis
  9308  0C2D                     l112:	
  9309                           ;I2C.c: 166: while(SSP2CON2bits.ACKEN)
  9310                           
  9311  0C2D  0024               	movlb	4	; select bank4
  9312  0C2E  1E1E               	btfss	30,4	;volatile
  9313  0C2F  2C5D               	goto	l115
  9314                           
  9315                           ;I2C.c: 167: {
  9316                           ;I2C.c: 168: now = millis();
  9317  0C30  3189  2108  318C   	fcall	_millis
  9318  0C33  0020               	movlb	0	; select bank0
  9319  0C34  0823               	movf	?_millis+3,w
  9320  0C35  00B3               	movwf	I2CAck_2@now+3
  9321  0C36  0822               	movf	?_millis+2,w
  9322  0C37  00B2               	movwf	I2CAck_2@now+2
  9323  0C38  0821               	movf	?_millis+1,w
  9324  0C39  00B1               	movwf	I2CAck_2@now+1
  9325  0C3A  0820               	movf	?_millis,w
  9326  0C3B  00B0               	movwf	I2CAck_2@now
  9327                           
  9328                           ;I2C.c: 169: if(get_millis(now,prev) > 10)
  9329  0C3C  0833               	movf	I2CAck_2@now+3,w
  9330  0C3D  00A3               	movwf	get_millis@now+3
  9331  0C3E  0832               	movf	I2CAck_2@now+2,w
  9332  0C3F  00A2               	movwf	get_millis@now+2
  9333  0C40  0831               	movf	I2CAck_2@now+1,w
  9334  0C41  00A1               	movwf	get_millis@now+1
  9335  0C42  0830               	movf	I2CAck_2@now,w
  9336  0C43  00A0               	movwf	get_millis@now
  9337  0C44  0837               	movf	I2CAck_2@prev+3,w
  9338  0C45  00A7               	movwf	get_millis@prev_now+3
  9339  0C46  0836               	movf	I2CAck_2@prev+2,w
  9340  0C47  00A6               	movwf	get_millis@prev_now+2
  9341  0C48  0835               	movf	I2CAck_2@prev+1,w
  9342  0C49  00A5               	movwf	get_millis@prev_now+1
  9343  0C4A  0834               	movf	I2CAck_2@prev,w
  9344  0C4B  00A4               	movwf	get_millis@prev_now
  9345  0C4C  3189  21E2  318C   	fcall	_get_millis
  9346  0C4F  0020               	movlb	0	; select bank0
  9347  0C50  0823               	movf	?_get_millis+3,w
  9348  0C51  1D03               	btfss	3,2
  9349  0C52  2C5D               	goto	l115
  9350  0C53  0822               	movf	?_get_millis+2,w
  9351  0C54  1D03               	btfss	3,2
  9352  0C55  2C5D               	goto	l115
  9353  0C56  0821               	movf	?_get_millis+1,w
  9354  0C57  1D03               	btfss	3,2
  9355  0C58  2C5D               	goto	l115
  9356  0C59  300B               	movlw	11
  9357  0C5A  0220               	subwf	?_get_millis,w
  9358  0C5B  1C03               	btfss	3,0
  9359  0C5C  2C2D               	goto	l112
  9360  0C5D                     l115:	
  9361                           ;I2C.c: 170: {
  9362                           ;I2C.c: 171: break;
  9363                           
  9364                           
  9365                           ;I2C.c: 172: }
  9366                           ;I2C.c: 173: }
  9367                           ;I2C.c: 175: SSP2CON2bits.ACKDT = 0;
  9368  0C5D  0024               	movlb	4	; select bank4
  9369  0C5E  129E               	bcf	30,5	;volatile
  9370                           
  9371                           ;I2C.c: 176: SSP2CON2bits.ACKEN = 1;
  9372  0C5F  161E               	bsf	30,4	;volatile
  9373  0C60  0008               	return
  9374  0C61                     __end_of_I2CAck_2:	
  9375                           
  9376                           	psect	text47
  9377  0894                     __ptext47:	
  9378 ;; *************** function _buttons_setFuncs *****************
  9379 ;; Defined at:
  9380 ;;		line 102 in file "button.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  btn1            2    0[BANK0 ] PTR FTN()unsigned char 
  9383 ;;		 -> event_btn_Expose(1), 
  9384 ;;  btn2            2    2[BANK0 ] PTR FTN()unsigned char 
  9385 ;;		 -> event_btn_Stop(1), 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;		None
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  1    wreg      void 
  9390 ;; Registers used:
  9391 ;;		wreg
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;Total ram usage:        4 bytes
  9402 ;; Hardware stack levels used:    1
  9403 ;; Hardware stack levels required when called:    2
  9404 ;; This function calls:
  9405 ;;		Nothing
  9406 ;; This function is called by:
  9407 ;;		_apInit
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           
  9412                           ;psect for function _buttons_setFuncs
  9413  0894                     _buttons_setFuncs:	
  9414                           
  9415                           ;button.c: 104: buttons[BTN_1].onPress = btn1;
  9416                           
  9417                           ;incstack = 0
  9418                           ; Regs used in _buttons_setFuncs: [wreg]
  9419  0894  0020               	movlb	0	; select bank0
  9420  0895  0821               	movf	buttons_setFuncs@btn1+1,w
  9421  0896  0022               	movlb	2	; select bank2
  9422  0897  00A8               	movwf	((low ((_buttons| (0+256)+7))+1))^0
  9423  0898  0020               	movlb	0	; select bank0
  9424  0899  0820               	movf	buttons_setFuncs@btn1,w
  9425  089A  0022               	movlb	2	; select bank2
  9426  089B  00A7               	movwf	(low ((_buttons| (0+256)+7)))^0
  9427                           
  9428                           ;button.c: 105: buttons[BTN_2].onPress = btn2;
  9429  089C  0020               	movlb	0	; select bank0
  9430  089D  0823               	movf	buttons_setFuncs@btn2+1,w
  9431  089E  0022               	movlb	2	; select bank2
  9432  089F  00B1               	movwf	((low ((_buttons| (0+256)+16))+1))^0
  9433  08A0  0020               	movlb	0	; select bank0
  9434  08A1  0822               	movf	buttons_setFuncs@btn2,w
  9435  08A2  0022               	movlb	2	; select bank2
  9436  08A3  00B0               	movwf	(low ((_buttons| (0+256)+16)))^0
  9437  08A4  0008               	return
  9438  08A5                     __end_of_buttons_setFuncs:	
  9439                           
  9440                           	psect	text48
  9441  082C                     __ptext48:	
  9442 ;; *************** function _buttons_init *****************
  9443 ;; Defined at:
  9444 ;;		line 8 in file "button.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    2
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_apInit
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           
  9473                           ;psect for function _buttons_init
  9474  082C                     _buttons_init:	
  9475                           
  9476                           ;button.c: 11: buttons[BTN_1].pressedTime = 1;
  9477                           
  9478                           ;incstack = 0
  9479                           ; Regs used in _buttons_init: [wreg]
  9480  082C  3001               	movlw	1
  9481  082D  0022               	movlb	2	; select bank2
  9482  082E  00A0               	movwf	_buttons^(0+256)
  9483  082F  3000               	movlw	0
  9484  0830  00A1               	movwf	(_buttons^(0+256)+1)
  9485                           
  9486                           ;button.c: 12: buttons[BTN_2].pressedTime = 1;
  9487  0831  3001               	movlw	1
  9488  0832  00A9               	movwf	(_buttons^(0+256)+9)
  9489  0833  3000               	movlw	0
  9490  0834  00AA               	movwf	(_buttons^(0+256)+10)
  9491  0835  0008               	return
  9492  0836                     __end_of_buttons_init:	
  9493                           
  9494                           	psect	text49
  9495  0836                     __ptext49:	
  9496 ;; *************** function _adcInit *****************
  9497 ;; Defined at:
  9498 ;;		line 4 in file "adc.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;		None
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;		None
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  1    wreg      void 
  9505 ;; Registers used:
  9506 ;;		wreg, status,2, status,0
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;Total ram usage:        0 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    2
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_apInit
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function _adcInit
  9528  0836                     _adcInit:	
  9529                           
  9530                           ;adc.c: 6: ADCON1bits.ADFM = 1;
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  9534  0836  0021               	movlb	1	; select bank1
  9535  0837  179E               	bsf	30,7	;volatile
  9536                           
  9537                           ;adc.c: 7: ADCON1bits.ADNREF = 0;
  9538  0838  111E               	bcf	30,2	;volatile
  9539                           
  9540                           ;adc.c: 8: ADCON1bits.ADPREF = 0b00;
  9541  0839  30FC               	movlw	-4
  9542  083A  059E               	andwf	30,f	;volatile
  9543                           
  9544                           ;adc.c: 10: ADCON1bits.ADCS = 0b110;
  9545  083B  081E               	movf	30,w	;volatile
  9546  083C  398F               	andlw	-113
  9547  083D  3860               	iorlw	96
  9548  083E  009E               	movwf	30	;volatile
  9549                           
  9550                           ;adc.c: 12: ADCON0bits.ADON = 0;
  9551  083F  101D               	bcf	29,0	;volatile
  9552  0840  0008               	return
  9553  0841                     __end_of_adcInit:	
  9554                           
  9555                           	psect	text50
  9556  095B                     __ptext50:	
  9557 ;; *************** function _I2C_AS1115_Write *****************
  9558 ;; Defined at:
  9559 ;;		line 11 in file "AS1115.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  cmd             1    wreg     unsigned char 
  9562 ;;  data            1   25[BANK0 ] unsigned char 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;  cmd             1   26[BANK0 ] unsigned char 
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2, status,0, pclath, cstack
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9574 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;Total ram usage:        2 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    5
  9581 ;; This function calls:
  9582 ;;		_I2CAck
  9583 ;;		_I2CSend
  9584 ;;		_I2CStart
  9585 ;;		_I2CStop
  9586 ;; This function is called by:
  9587 ;;		_event_display
  9588 ;;		_apInit
  9589 ;;		_disp_ma_result
  9590 ;;		_disp_kv
  9591 ;;		_disp_3digit
  9592 ;;		_disp_ADC
  9593 ;;		_disp_ma
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           
  9598                           ;psect for function _I2C_AS1115_Write
  9599  095B                     _I2C_AS1115_Write:	
  9600                           
  9601                           ;incstack = 0
  9602                           ; Regs used in _I2C_AS1115_Write: [wreg+status,2+status,0+pclath+cstack]
  9603                           ;I2C_AS1115_Write@cmd stored from wreg
  9604  095B  0020               	movlb	0	; select bank0
  9605  095C  00BA               	movwf	I2C_AS1115_Write@cmd
  9606                           
  9607                           ;AS1115.c: 13: I2CStart();
  9608  095D  3197  27D2  3189   	fcall	_I2CStart
  9609                           
  9610                           ;AS1115.c: 14: I2CSend(0x00);
  9611  0960  3000               	movlw	0
  9612  0961  3188  2010  3189   	fcall	_I2CSend
  9613                           
  9614                           ;AS1115.c: 15: I2CAck();
  9615  0964  318B  23E1  3189   	fcall	_I2CAck
  9616                           
  9617                           ;AS1115.c: 16: I2CSend(cmd);
  9618  0967  0020               	movlb	0	; select bank0
  9619  0968  083A               	movf	I2C_AS1115_Write@cmd,w
  9620  0969  3188  2010  3189   	fcall	_I2CSend
  9621                           
  9622                           ;AS1115.c: 17: I2CAck();
  9623  096C  318B  23E1  3189   	fcall	_I2CAck
  9624                           
  9625                           ;AS1115.c: 18: I2CSend(data);
  9626  096F  0020               	movlb	0	; select bank0
  9627  0970  0839               	movf	I2C_AS1115_Write@data,w
  9628  0971  3188  2010  3189   	fcall	_I2CSend
  9629                           
  9630                           ;AS1115.c: 19: I2CAck();
  9631  0974  318B  23E1  3189   	fcall	_I2CAck
  9632                           
  9633                           ;AS1115.c: 20: I2CStop();
  9634  0977  3197  27D7         	fcall	_I2CStop
  9635  0979  0008               	return
  9636  097A                     __end_of_I2C_AS1115_Write:	
  9637                           
  9638                           	psect	text51
  9639  17D7                     __ptext51:	
  9640 ;; *************** function _I2CStop *****************
  9641 ;; Defined at:
  9642 ;;		line 39 in file "I2C.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2, status,0, pclath, cstack
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    4
  9663 ;; This function calls:
  9664 ;;		_I2CWait
  9665 ;; This function is called by:
  9666 ;;		_I2C_AS1115_Write
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           
  9671                           ;psect for function _I2CStop
  9672  17D7                     _I2CStop:	
  9673                           
  9674                           ;I2C.c: 41: I2CWait();
  9675                           
  9676                           ;incstack = 0
  9677                           ; Regs used in _I2CStop: [wreg+status,2+status,0+pclath+cstack]
  9678  17D7  318C  2461         	fcall	_I2CWait
  9679                           
  9680                           ;I2C.c: 42: SSP1CON2bits.PEN = 1;
  9681  17D9  0024               	movlb	4	; select bank4
  9682  17DA  1516               	bsf	22,2	;volatile
  9683  17DB  0008               	return
  9684  17DC                     __end_of_I2CStop:	
  9685                           
  9686                           	psect	text52
  9687  17D2                     __ptext52:	
  9688 ;; *************** function _I2CStart *****************
  9689 ;; Defined at:
  9690 ;;		line 32 in file "I2C.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, status,2, status,0, pclath, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;Total ram usage:        0 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:    4
  9711 ;; This function calls:
  9712 ;;		_I2CWait
  9713 ;; This function is called by:
  9714 ;;		_I2C_AS1115_Write
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           
  9719                           ;psect for function _I2CStart
  9720  17D2                     _I2CStart:	
  9721                           
  9722                           ;I2C.c: 34: I2CWait();
  9723                           
  9724                           ;incstack = 0
  9725                           ; Regs used in _I2CStart: [wreg+status,2+status,0+pclath+cstack]
  9726  17D2  318C  2461         	fcall	_I2CWait
  9727                           
  9728                           ;I2C.c: 35: SSP1CON2bits.SEN = 1;
  9729  17D4  0024               	movlb	4	; select bank4
  9730  17D5  1416               	bsf	22,0	;volatile
  9731  17D6  0008               	return
  9732  17D7                     __end_of_I2CStart:	
  9733                           
  9734                           	psect	text53
  9735  0810                     __ptext53:	
  9736 ;; *************** function _I2CSend *****************
  9737 ;; Defined at:
  9738 ;;		line 104 in file "I2C.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  dat             1    wreg     unsigned char 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;  dat             1   24[BANK0 ] unsigned char 
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      void 
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0, pclath, cstack
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;Total ram usage:        1 bytes
  9757 ;; Hardware stack levels used:    1
  9758 ;; Hardware stack levels required when called:    4
  9759 ;; This function calls:
  9760 ;;		_I2CWait
  9761 ;; This function is called by:
  9762 ;;		_I2C_AS1115_Write
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766                           
  9767                           ;psect for function _I2CSend
  9768  0810                     _I2CSend:	
  9769                           
  9770                           ;incstack = 0
  9771                           ; Regs used in _I2CSend: [wreg+status,2+status,0+pclath+cstack]
  9772                           ;I2CSend@dat stored from wreg
  9773  0810  0020               	movlb	0	; select bank0
  9774  0811  00B8               	movwf	I2CSend@dat
  9775                           
  9776                           ;I2C.c: 106: I2CWait();
  9777  0812  318C  2461         	fcall	_I2CWait
  9778                           
  9779                           ;I2C.c: 107: SSP1BUF = dat;
  9780  0814  0020               	movlb	0	; select bank0
  9781  0815  0838               	movf	I2CSend@dat,w
  9782  0816  0024               	movlb	4	; select bank4
  9783  0817  0091               	movwf	17	;volatile
  9784  0818  0008               	return
  9785  0819                     __end_of_I2CSend:	
  9786                           
  9787                           	psect	text54
  9788  0C61                     __ptext54:	
  9789 ;; *************** function _I2CWait *****************
  9790 ;; Defined at:
  9791 ;;		line 88 in file "I2C.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  prev            4   20[BANK0 ] unsigned long 
  9796 ;;  now             4   16[BANK0 ] unsigned long 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      void 
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0, pclath, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:        8 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    3
  9813 ;; This function calls:
  9814 ;;		_get_millis
  9815 ;;		_init_millis
  9816 ;;		_millis
  9817 ;; This function is called by:
  9818 ;;		_I2CStart
  9819 ;;		_I2CStop
  9820 ;;		_I2CSend
  9821 ;;		_I2CRestart
  9822 ;;		_I2CRead
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           
  9827                           ;psect for function _I2CWait
  9828  0C61                     _I2CWait:	
  9829                           
  9830                           ;I2C.c: 90: millis_t now,prev=0;
  9831                           
  9832                           ;incstack = 0
  9833                           ; Regs used in _I2CWait: [wreg+status,2+status,0+pclath+cstack]
  9834  0C61  3000               	movlw	0
  9835  0C62  0020               	movlb	0	; select bank0
  9836  0C63  00B7               	movwf	I2CWait@prev+3
  9837  0C64  3000               	movlw	0
  9838  0C65  00B6               	movwf	I2CWait@prev+2
  9839  0C66  3000               	movlw	0
  9840  0C67  00B5               	movwf	I2CWait@prev+1
  9841  0C68  3000               	movlw	0
  9842  0C69  00B4               	movwf	I2CWait@prev
  9843                           
  9844                           ;I2C.c: 91: init_millis();
  9845  0C6A  3188  2022  318C   	fcall	_init_millis
  9846  0C6D                     l2244:	
  9847                           ;I2C.c: 94: while ( (SSP1CON2 & 0x1F) || ( SSP1STAT & 0x04 ))
  9848                           
  9849  0C6D  0024               	movlb	4	; select bank4
  9850  0C6E  0816               	movf	22,w	;volatile
  9851  0C6F  391F               	andlw	31
  9852  0C70  1903               	btfsc	3,2
  9853  0C71  2CA0               	goto	l2246
  9854  0C72                     l2238:	
  9855                           
  9856                           ;I2C.c: 95: {
  9857                           ;I2C.c: 96: now = millis();
  9858  0C72  3189  2108  318C   	fcall	_millis
  9859  0C75  0020               	movlb	0	; select bank0
  9860  0C76  0823               	movf	?_millis+3,w
  9861  0C77  00B3               	movwf	I2CWait@now+3
  9862  0C78  0822               	movf	?_millis+2,w
  9863  0C79  00B2               	movwf	I2CWait@now+2
  9864  0C7A  0821               	movf	?_millis+1,w
  9865  0C7B  00B1               	movwf	I2CWait@now+1
  9866  0C7C  0820               	movf	?_millis,w
  9867  0C7D  00B0               	movwf	I2CWait@now
  9868                           
  9869                           ;I2C.c: 97: if(get_millis(now,prev) > 10)
  9870  0C7E  0833               	movf	I2CWait@now+3,w
  9871  0C7F  00A3               	movwf	get_millis@now+3
  9872  0C80  0832               	movf	I2CWait@now+2,w
  9873  0C81  00A2               	movwf	get_millis@now+2
  9874  0C82  0831               	movf	I2CWait@now+1,w
  9875  0C83  00A1               	movwf	get_millis@now+1
  9876  0C84  0830               	movf	I2CWait@now,w
  9877  0C85  00A0               	movwf	get_millis@now
  9878  0C86  0837               	movf	I2CWait@prev+3,w
  9879  0C87  00A7               	movwf	get_millis@prev_now+3
  9880  0C88  0836               	movf	I2CWait@prev+2,w
  9881  0C89  00A6               	movwf	get_millis@prev_now+2
  9882  0C8A  0835               	movf	I2CWait@prev+1,w
  9883  0C8B  00A5               	movwf	get_millis@prev_now+1
  9884  0C8C  0834               	movf	I2CWait@prev,w
  9885  0C8D  00A4               	movwf	get_millis@prev_now
  9886  0C8E  3189  21E2  318C   	fcall	_get_millis
  9887  0C91  0020               	movlb	0	; select bank0
  9888  0C92  0823               	movf	?_get_millis+3,w
  9889  0C93  1D03               	btfss	3,2
  9890  0C94  0008               	return
  9891  0C95  0822               	movf	?_get_millis+2,w
  9892  0C96  1D03               	btfss	3,2
  9893  0C97  0008               	return
  9894  0C98  0821               	movf	?_get_millis+1,w
  9895  0C99  1D03               	btfss	3,2
  9896  0C9A  0008               	return
  9897  0C9B  300B               	movlw	11
  9898  0C9C  0220               	subwf	?_get_millis,w
  9899  0C9D  1803               	btfsc	3,0
  9900  0C9E  0008               	return
  9901  0C9F  2C6D               	goto	l2244
  9902  0CA0                     l2246:	
  9903                           ;I2C.c: 98: {
  9904                           ;I2C.c: 99: break;
  9905                           
  9906  0CA0  1D14               	btfss	20,2	;volatile
  9907  0CA1  0008               	return
  9908  0CA2  2C72               	goto	l2238
  9909  0CA3                     __end_of_I2CWait:	
  9910                           
  9911                           	psect	text55
  9912  0BE1                     __ptext55:	
  9913 ;; *************** function _I2CAck *****************
  9914 ;; Defined at:
  9915 ;;		line 53 in file "I2C.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;		None
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;  prev            4   20[BANK0 ] unsigned long 
  9920 ;;  now             4   16[BANK0 ] unsigned long 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0, pclath, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;Total ram usage:        8 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    3
  9937 ;; This function calls:
  9938 ;;		_get_millis
  9939 ;;		_init_millis
  9940 ;;		_millis
  9941 ;; This function is called by:
  9942 ;;		_I2C_AS1115_Write
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           
  9947                           ;psect for function _I2CAck
  9948  0BE1                     _I2CAck:	
  9949                           
  9950                           ;I2C.c: 55: millis_t now,prev=0;
  9951                           
  9952                           ;incstack = 0
  9953                           ; Regs used in _I2CAck: [wreg+status,2+status,0+pclath+cstack]
  9954  0BE1  3000               	movlw	0
  9955  0BE2  0020               	movlb	0	; select bank0
  9956  0BE3  00B7               	movwf	I2CAck@prev+3
  9957  0BE4  3000               	movlw	0
  9958  0BE5  00B6               	movwf	I2CAck@prev+2
  9959  0BE6  3000               	movlw	0
  9960  0BE7  00B5               	movwf	I2CAck@prev+1
  9961  0BE8  3000               	movlw	0
  9962  0BE9  00B4               	movwf	I2CAck@prev
  9963                           
  9964                           ;I2C.c: 56: init_millis();
  9965  0BEA  3188  2022  318B   	fcall	_init_millis
  9966  0BED                     l73:	
  9967                           ;I2C.c: 58: while(SSP1CON2bits.ACKEN)
  9968                           
  9969  0BED  0024               	movlb	4	; select bank4
  9970  0BEE  1E16               	btfss	22,4	;volatile
  9971  0BEF  2C1D               	goto	l76
  9972                           
  9973                           ;I2C.c: 59: {
  9974                           ;I2C.c: 60: now = millis();
  9975  0BF0  3189  2108  318B   	fcall	_millis
  9976  0BF3  0020               	movlb	0	; select bank0
  9977  0BF4  0823               	movf	?_millis+3,w
  9978  0BF5  00B3               	movwf	I2CAck@now+3
  9979  0BF6  0822               	movf	?_millis+2,w
  9980  0BF7  00B2               	movwf	I2CAck@now+2
  9981  0BF8  0821               	movf	?_millis+1,w
  9982  0BF9  00B1               	movwf	I2CAck@now+1
  9983  0BFA  0820               	movf	?_millis,w
  9984  0BFB  00B0               	movwf	I2CAck@now
  9985                           
  9986                           ;I2C.c: 61: if(get_millis(now,prev) > 10)
  9987  0BFC  0833               	movf	I2CAck@now+3,w
  9988  0BFD  00A3               	movwf	get_millis@now+3
  9989  0BFE  0832               	movf	I2CAck@now+2,w
  9990  0BFF  00A2               	movwf	get_millis@now+2
  9991  0C00  0831               	movf	I2CAck@now+1,w
  9992  0C01  00A1               	movwf	get_millis@now+1
  9993  0C02  0830               	movf	I2CAck@now,w
  9994  0C03  00A0               	movwf	get_millis@now
  9995  0C04  0837               	movf	I2CAck@prev+3,w
  9996  0C05  00A7               	movwf	get_millis@prev_now+3
  9997  0C06  0836               	movf	I2CAck@prev+2,w
  9998  0C07  00A6               	movwf	get_millis@prev_now+2
  9999  0C08  0835               	movf	I2CAck@prev+1,w
 10000  0C09  00A5               	movwf	get_millis@prev_now+1
 10001  0C0A  0834               	movf	I2CAck@prev,w
 10002  0C0B  00A4               	movwf	get_millis@prev_now
 10003  0C0C  3189  21E2  318B   	fcall	_get_millis
 10004  0C0F  0020               	movlb	0	; select bank0
 10005  0C10  0823               	movf	?_get_millis+3,w
 10006  0C11  1D03               	btfss	3,2
 10007  0C12  2C1D               	goto	l76
 10008  0C13  0822               	movf	?_get_millis+2,w
 10009  0C14  1D03               	btfss	3,2
 10010  0C15  2C1D               	goto	l76
 10011  0C16  0821               	movf	?_get_millis+1,w
 10012  0C17  1D03               	btfss	3,2
 10013  0C18  2C1D               	goto	l76
 10014  0C19  300B               	movlw	11
 10015  0C1A  0220               	subwf	?_get_millis,w
 10016  0C1B  1C03               	btfss	3,0
 10017  0C1C  2BED               	goto	l73
 10018  0C1D                     l76:	
 10019                           ;I2C.c: 62: {
 10020                           ;I2C.c: 63: break;
 10021                           
 10022                           
 10023                           ;I2C.c: 64: }
 10024                           ;I2C.c: 65: }
 10025                           ;I2C.c: 66: SSP1CON2bits.ACKDT = 0;
 10026  0C1D  0024               	movlb	4	; select bank4
 10027  0C1E  1296               	bcf	22,5	;volatile
 10028                           
 10029                           ;I2C.c: 67: SSP1CON2bits.ACKEN = 1;
 10030  0C1F  1616               	bsf	22,4	;volatile
 10031  0C20  0008               	return
 10032  0C21                     __end_of_I2CAck:	
 10033                           
 10034                           	psect	text56
 10035  0908                     __ptext56:	
 10036 ;; *************** function _millis *****************
 10037 ;; Defined at:
 10038 ;;		line 11 in file "millis.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;		None
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;  ms              4    4[BANK0 ] unsigned long 
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  4    0[BANK0 ] unsigned long 
 10045 ;; Registers used:
 10046 ;;		wreg
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10053 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10055 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10056 ;;Total ram usage:        8 bytes
 10057 ;; Hardware stack levels used:    1
 10058 ;; Hardware stack levels required when called:    2
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_I2CAck
 10063 ;;		_I2CWait
 10064 ;;		_I2CAck_2
 10065 ;;		_I2CWait_2
 10066 ;;		_I2CNak
 10067 ;;		_I2CNak_2
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           
 10072                           ;psect for function _millis
 10073  0908                     _millis:	
 10074                           
 10075                           ;millis.c: 13: millis_t ms;
 10076                           ;millis.c: 14: ms = timer0_millis;
 10077                           
 10078                           ;incstack = 0
 10079                           ; Regs used in _millis: [wreg]
 10080  0908  0021               	movlb	1	; select bank1
 10081  0909  0834               	movf	(_timer0_millis+3)^(0+128),w	;volatile
 10082  090A  0020               	movlb	0	; select bank0
 10083  090B  00A7               	movwf	millis@ms+3
 10084  090C  0021               	movlb	1	; select bank1
 10085  090D  0833               	movf	(_timer0_millis+2)^(0+128),w	;volatile
 10086  090E  0020               	movlb	0	; select bank0
 10087  090F  00A6               	movwf	millis@ms+2
 10088  0910  0021               	movlb	1	; select bank1
 10089  0911  0832               	movf	(_timer0_millis+1)^(0+128),w	;volatile
 10090  0912  0020               	movlb	0	; select bank0
 10091  0913  00A5               	movwf	millis@ms+1
 10092  0914  0021               	movlb	1	; select bank1
 10093  0915  0831               	movf	_timer0_millis^(0+128),w	;volatile
 10094  0916  0020               	movlb	0	; select bank0
 10095  0917  00A4               	movwf	millis@ms
 10096                           
 10097                           ;millis.c: 15: return ms;
 10098  0918  0827               	movf	millis@ms+3,w
 10099  0919  00A3               	movwf	?_millis+3
 10100  091A  0826               	movf	millis@ms+2,w
 10101  091B  00A2               	movwf	?_millis+2
 10102  091C  0825               	movf	millis@ms+1,w
 10103  091D  00A1               	movwf	?_millis+1
 10104  091E  0824               	movf	millis@ms,w
 10105  091F  00A0               	movwf	?_millis
 10106  0920  0008               	return
 10107  0921                     __end_of_millis:	
 10108                           
 10109                           	psect	text57
 10110  0822                     __ptext57:	
 10111 ;; *************** function _init_millis *****************
 10112 ;; Defined at:
 10113 ;;		line 6 in file "millis.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;		None
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;Total ram usage:        0 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    2
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_I2CAck
 10138 ;;		_I2CWait
 10139 ;;		_I2CAck_2
 10140 ;;		_I2CWait_2
 10141 ;;		_I2CNak
 10142 ;;		_I2CNak_2
 10143 ;; This function uses a non-reentrant model
 10144 ;;
 10145                           
 10146                           
 10147                           ;psect for function _init_millis
 10148  0822                     _init_millis:	
 10149                           
 10150                           ;millis.c: 8: timer0_millis = 0;
 10151                           
 10152                           ;incstack = 0
 10153                           ; Regs used in _init_millis: [wreg]
 10154  0822  3000               	movlw	0
 10155  0823  0021               	movlb	1	; select bank1
 10156  0824  00B4               	movwf	(_timer0_millis+3)^(0+128)	;volatile
 10157  0825  3000               	movlw	0
 10158  0826  00B3               	movwf	(_timer0_millis+2)^(0+128)	;volatile
 10159  0827  3000               	movlw	0
 10160  0828  00B2               	movwf	(_timer0_millis+1)^(0+128)	;volatile
 10161  0829  3000               	movlw	0
 10162  082A  00B1               	movwf	_timer0_millis^(0+128)	;volatile
 10163  082B  0008               	return
 10164  082C                     __end_of_init_millis:	
 10165                           
 10166                           	psect	text58
 10167  09E2                     __ptext58:	
 10168 ;; *************** function _get_millis *****************
 10169 ;; Defined at:
 10170 ;;		line 18 in file "millis.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  now             4    0[BANK0 ] unsigned long 
 10173 ;;  prev_now        4    4[BANK0 ] unsigned long 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;		None
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  4    0[BANK0 ] unsigned long 
 10178 ;; Registers used:
 10179 ;;		wreg, status,2, status,0
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10185 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;Total ram usage:       16 bytes
 10190 ;; Hardware stack levels used:    1
 10191 ;; Hardware stack levels required when called:    2
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		_I2CAck
 10196 ;;		_I2CWait
 10197 ;;		_I2CAck_2
 10198 ;;		_I2CWait_2
 10199 ;;		_I2CNak
 10200 ;;		_I2CNak_2
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           
 10205                           ;psect for function _get_millis
 10206  09E2                     _get_millis:	
 10207                           
 10208                           ;millis.c: 20: return (now - prev_now);
 10209                           
 10210                           ;incstack = 0
 10211                           ; Regs used in _get_millis: [wreg+status,2+status,0]
 10212  09E2  0020               	movlb	0	; select bank0
 10213  09E3  0820               	movf	get_millis@now,w
 10214  09E4  00A8               	movwf	??_get_millis
 10215  09E5  0821               	movf	get_millis@now+1,w
 10216  09E6  00A9               	movwf	??_get_millis+1
 10217  09E7  0822               	movf	get_millis@now+2,w
 10218  09E8  00AA               	movwf	??_get_millis+2
 10219  09E9  0823               	movf	get_millis@now+3,w
 10220  09EA  00AB               	movwf	??_get_millis+3
 10221  09EB  0924               	comf	get_millis@prev_now,w
 10222  09EC  00AC               	movwf	??_get_millis+4
 10223  09ED  0925               	comf	get_millis@prev_now+1,w
 10224  09EE  00AD               	movwf	??_get_millis+5
 10225  09EF  0926               	comf	get_millis@prev_now+2,w
 10226  09F0  00AE               	movwf	??_get_millis+6
 10227  09F1  0927               	comf	get_millis@prev_now+3,w
 10228  09F2  00AF               	movwf	??_get_millis+7
 10229  09F3  0AAC               	incf	??_get_millis+4,f
 10230  09F4  1903               	skipnz
 10231  09F5  0AAD               	incf	??_get_millis+5,f
 10232  09F6  1903               	skipnz
 10233  09F7  0AAE               	incf	??_get_millis+6,f
 10234  09F8  1903               	skipnz
 10235  09F9  0AAF               	incf	??_get_millis+7,f
 10236  09FA  082C               	movf	??_get_millis+4,w
 10237  09FB  07A8               	addwf	??_get_millis,f
 10238  09FC  082D               	movf	??_get_millis+5,w
 10239  09FD  3DA9               	addwfc	??_get_millis+1,f
 10240  09FE  082E               	movf	??_get_millis+6,w
 10241  09FF  3DAA               	addwfc	??_get_millis+2,f
 10242  0A00  082F               	movf	??_get_millis+7,w
 10243  0A01  3DAB               	addwfc	??_get_millis+3,f
 10244  0A02  082B               	movf	??_get_millis+3,w
 10245  0A03  00A3               	movwf	?_get_millis+3
 10246  0A04  082A               	movf	??_get_millis+2,w
 10247  0A05  00A2               	movwf	?_get_millis+2
 10248  0A06  0829               	movf	??_get_millis+1,w
 10249  0A07  00A1               	movwf	?_get_millis+1
 10250  0A08  0828               	movf	??_get_millis,w
 10251  0A09  00A0               	movwf	?_get_millis
 10252  0A0A  0008               	return
 10253  0A0B                     __end_of_get_millis:	
 10254                           
 10255                           	psect	text59
 10256  0BA4                     __ptext59:	
 10257 ;; *************** function _I2CInit_2 *****************
 10258 ;; Defined at:
 10259 ;;		line 122 in file "I2C.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  freq            2   21[BANK0 ] unsigned int 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1    wreg      void 
 10266 ;; Registers used:
 10267 ;;		wreg, status,2, status,0, pclath, cstack
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;Total ram usage:        8 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    3
 10280 ;; This function calls:
 10281 ;;		___aldiv
 10282 ;;		___wmul
 10283 ;; This function is called by:
 10284 ;;		_apInit
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           
 10289                           ;psect for function _I2CInit_2
 10290  0BA4                     _I2CInit_2:	
 10291                           
 10292                           ;I2C.c: 125: SSP2STATbits.SMP = 1;
 10293                           
 10294                           ;incstack = 0
 10295                           ; Regs used in _I2CInit_2: [wreg+status,2+status,0+pclath+cstack]
 10296  0BA4  0024               	movlb	4	; select bank4
 10297  0BA5  179C               	bsf	28,7	;volatile
 10298                           
 10299                           ;I2C.c: 126: SSP2STATbits.CKE = 1;
 10300  0BA6  171C               	bsf	28,6	;volatile
 10301                           
 10302                           ;I2C.c: 128: SSP2CON1bits.SSPEN = 1;
 10303  0BA7  169D               	bsf	29,5	;volatile
 10304                           
 10305                           ;I2C.c: 129: SSP2CON1bits.SSPM3 = 1;
 10306  0BA8  159D               	bsf	29,3	;volatile
 10307                           
 10308                           ;I2C.c: 130: SSP2CON1bits.SSPM2 = 0;
 10309  0BA9  111D               	bcf	29,2	;volatile
 10310                           
 10311                           ;I2C.c: 131: SSP2CON1bits.SSPM1 = 0;
 10312  0BAA  109D               	bcf	29,1	;volatile
 10313                           
 10314                           ;I2C.c: 132: SSP2CON1bits.SSPM0 = 0;
 10315  0BAB  101D               	bcf	29,0	;volatile
 10316                           
 10317                           ;I2C.c: 134: SSP2CON2 = 0;
 10318  0BAC  019E               	clrf	30	;volatile
 10319                           
 10320                           ;I2C.c: 135: SSP2ADD = (4000000/(4*freq*1000))-1;
 10321  0BAD  30E8               	movlw	232
 10322  0BAE  0020               	movlb	0	; select bank0
 10323  0BAF  00A2               	movwf	___wmul@multiplicand
 10324  0BB0  3003               	movlw	3
 10325  0BB1  00A3               	movwf	___wmul@multiplicand+1
 10326  0BB2  0836               	movf	I2CInit_2@freq+1,w
 10327  0BB3  00B8               	movwf	??_I2CInit_2+1
 10328  0BB4  0835               	movf	I2CInit_2@freq,w
 10329  0BB5  00B7               	movwf	??_I2CInit_2
 10330  0BB6  35B7               	lslf	??_I2CInit_2,f
 10331  0BB7  0DB8               	rlf	??_I2CInit_2+1,f
 10332  0BB8  35B7               	lslf	??_I2CInit_2,f
 10333  0BB9  0DB8               	rlf	??_I2CInit_2+1,f
 10334  0BBA  0837               	movf	??_I2CInit_2,w
 10335  0BBB  00A0               	movwf	___wmul@multiplier
 10336  0BBC  0838               	movf	??_I2CInit_2+1,w
 10337  0BBD  00A1               	movwf	___wmul@multiplier+1
 10338  0BBE  3189  2121  318B   	fcall	___wmul
 10339  0BC1  0020               	movlb	0	; select bank0
 10340  0BC2  0820               	movf	?___wmul,w
 10341  0BC3  00B9               	movwf	??_I2CInit_2+2
 10342  0BC4  0821               	movf	?___wmul+1,w
 10343  0BC5  00BA               	movwf	??_I2CInit_2+3
 10344  0BC6  01BB               	clrf	??_I2CInit_2+4
 10345  0BC7  01BC               	clrf	??_I2CInit_2+5
 10346  0BC8  083C               	movf	??_I2CInit_2+5,w
 10347  0BC9  00A9               	movwf	___aldiv@divisor+3
 10348  0BCA  083B               	movf	??_I2CInit_2+4,w
 10349  0BCB  00A8               	movwf	___aldiv@divisor+2
 10350  0BCC  083A               	movf	??_I2CInit_2+3,w
 10351  0BCD  00A7               	movwf	___aldiv@divisor+1
 10352  0BCE  0839               	movf	??_I2CInit_2+2,w
 10353  0BCF  00A6               	movwf	___aldiv@divisor
 10354  0BD0  3000               	movlw	0
 10355  0BD1  00AD               	movwf	___aldiv@dividend+3
 10356  0BD2  303D               	movlw	61
 10357  0BD3  00AC               	movwf	___aldiv@dividend+2
 10358  0BD4  3009               	movlw	9
 10359  0BD5  00AB               	movwf	___aldiv@dividend+1
 10360  0BD6  3000               	movlw	0
 10361  0BD7  00AA               	movwf	___aldiv@dividend
 10362  0BD8  318E  26E4         	fcall	___aldiv
 10363  0BDA  0020               	movlb	0	; select bank0
 10364  0BDB  0826               	movf	?___aldiv,w
 10365  0BDC  3EFF               	addlw	255
 10366  0BDD  0024               	movlb	4	; select bank4
 10367  0BDE  009A               	movwf	26	;volatile
 10368                           
 10369                           ;I2C.c: 136: SSP2STAT = 0;
 10370  0BDF  019C               	clrf	28	;volatile
 10371  0BE0  0008               	return
 10372  0BE1                     __end_of_I2CInit_2:	
 10373                           
 10374                           	psect	text60
 10375  0B67                     __ptext60:	
 10376 ;; *************** function _I2CInit *****************
 10377 ;; Defined at:
 10378 ;;		line 14 in file "I2C.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  freq            2   21[BANK0 ] unsigned int 
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, status,2, status,0, pclath, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;Total ram usage:        8 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    3
 10399 ;; This function calls:
 10400 ;;		___aldiv
 10401 ;;		___wmul
 10402 ;; This function is called by:
 10403 ;;		_apInit
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           
 10408                           ;psect for function _I2CInit
 10409  0B67                     _I2CInit:	
 10410                           
 10411                           ;I2C.c: 17: SSP1STATbits.SMP = 1;
 10412                           
 10413                           ;incstack = 0
 10414                           ; Regs used in _I2CInit: [wreg+status,2+status,0+pclath+cstack]
 10415  0B67  0024               	movlb	4	; select bank4
 10416  0B68  1794               	bsf	20,7	;volatile
 10417                           
 10418                           ;I2C.c: 18: SSP1STATbits.CKE = 1;
 10419  0B69  1714               	bsf	20,6	;volatile
 10420                           
 10421                           ;I2C.c: 20: SSP1CON1bits.SSPEN = 1;
 10422  0B6A  1695               	bsf	21,5	;volatile
 10423                           
 10424                           ;I2C.c: 21: SSP1CON1bits.SSPM3 = 1;
 10425  0B6B  1595               	bsf	21,3	;volatile
 10426                           
 10427                           ;I2C.c: 22: SSP1CON1bits.SSPM2 = 0;
 10428  0B6C  1115               	bcf	21,2	;volatile
 10429                           
 10430                           ;I2C.c: 23: SSP1CON1bits.SSPM1 = 0;
 10431  0B6D  1095               	bcf	21,1	;volatile
 10432                           
 10433                           ;I2C.c: 24: SSP1CON1bits.SSPM0 = 0;
 10434  0B6E  1015               	bcf	21,0	;volatile
 10435                           
 10436                           ;I2C.c: 26: SSP1CON2 = 0;
 10437  0B6F  0196               	clrf	22	;volatile
 10438                           
 10439                           ;I2C.c: 27: SSP1ADD = (4000000/(4*freq*1000))-1;
 10440  0B70  30E8               	movlw	232
 10441  0B71  0020               	movlb	0	; select bank0
 10442  0B72  00A2               	movwf	___wmul@multiplicand
 10443  0B73  3003               	movlw	3
 10444  0B74  00A3               	movwf	___wmul@multiplicand+1
 10445  0B75  0836               	movf	I2CInit@freq+1,w
 10446  0B76  00B8               	movwf	??_I2CInit+1
 10447  0B77  0835               	movf	I2CInit@freq,w
 10448  0B78  00B7               	movwf	??_I2CInit
 10449  0B79  35B7               	lslf	??_I2CInit,f
 10450  0B7A  0DB8               	rlf	??_I2CInit+1,f
 10451  0B7B  35B7               	lslf	??_I2CInit,f
 10452  0B7C  0DB8               	rlf	??_I2CInit+1,f
 10453  0B7D  0837               	movf	??_I2CInit,w
 10454  0B7E  00A0               	movwf	___wmul@multiplier
 10455  0B7F  0838               	movf	??_I2CInit+1,w
 10456  0B80  00A1               	movwf	___wmul@multiplier+1
 10457  0B81  3189  2121  318B   	fcall	___wmul
 10458  0B84  0020               	movlb	0	; select bank0
 10459  0B85  0820               	movf	?___wmul,w
 10460  0B86  00B9               	movwf	??_I2CInit+2
 10461  0B87  0821               	movf	?___wmul+1,w
 10462  0B88  00BA               	movwf	??_I2CInit+3
 10463  0B89  01BB               	clrf	??_I2CInit+4
 10464  0B8A  01BC               	clrf	??_I2CInit+5
 10465  0B8B  083C               	movf	??_I2CInit+5,w
 10466  0B8C  00A9               	movwf	___aldiv@divisor+3
 10467  0B8D  083B               	movf	??_I2CInit+4,w
 10468  0B8E  00A8               	movwf	___aldiv@divisor+2
 10469  0B8F  083A               	movf	??_I2CInit+3,w
 10470  0B90  00A7               	movwf	___aldiv@divisor+1
 10471  0B91  0839               	movf	??_I2CInit+2,w
 10472  0B92  00A6               	movwf	___aldiv@divisor
 10473  0B93  3000               	movlw	0
 10474  0B94  00AD               	movwf	___aldiv@dividend+3
 10475  0B95  303D               	movlw	61
 10476  0B96  00AC               	movwf	___aldiv@dividend+2
 10477  0B97  3009               	movlw	9
 10478  0B98  00AB               	movwf	___aldiv@dividend+1
 10479  0B99  3000               	movlw	0
 10480  0B9A  00AA               	movwf	___aldiv@dividend
 10481  0B9B  318E  26E4         	fcall	___aldiv
 10482  0B9D  0020               	movlb	0	; select bank0
 10483  0B9E  0826               	movf	?___aldiv,w
 10484  0B9F  3EFF               	addlw	255
 10485  0BA0  0024               	movlb	4	; select bank4
 10486  0BA1  0092               	movwf	18	;volatile
 10487                           
 10488                           ;I2C.c: 28: SSP1STAT = 0;
 10489  0BA2  0194               	clrf	20	;volatile
 10490  0BA3  0008               	return
 10491  0BA4                     __end_of_I2CInit:	
 10492                           
 10493                           	psect	text61
 10494  0921                     __ptext61:	
 10495 ;; *************** function ___wmul *****************
 10496 ;; Defined at:
 10497 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10500 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;  product         2    4[BANK0 ] unsigned int 
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  2    0[BANK0 ] unsigned int 
 10505 ;; Registers used:
 10506 ;;		wreg, status,2, status,0
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/0
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;Total ram usage:        6 bytes
 10517 ;; Hardware stack levels used:    1
 10518 ;; Hardware stack levels required when called:    2
 10519 ;; This function calls:
 10520 ;;		Nothing
 10521 ;; This function is called by:
 10522 ;;		_I2CInit
 10523 ;;		_I2CInit_2
 10524 ;;		_disp_ma_result
 10525 ;;		_disp_kv
 10526 ;;		_disp_ADC
 10527 ;;		_disp_ma
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           
 10532                           ;psect for function ___wmul
 10533  0921                     ___wmul:	
 10534                           
 10535                           ;incstack = 0
 10536                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10537  0921  0020               	movlb	0	; select bank0
 10538  0922  01A4               	clrf	___wmul@product
 10539  0923  01A5               	clrf	___wmul@product+1
 10540  0924                     l2402:	
 10541  0924  1C20               	btfss	___wmul@multiplier,0
 10542  0925  292A               	goto	l584
 10543  0926  0822               	movf	___wmul@multiplicand,w
 10544  0927  07A4               	addwf	___wmul@product,f
 10545  0928  0823               	movf	___wmul@multiplicand+1,w
 10546  0929  3DA5               	addwfc	___wmul@product+1,f
 10547  092A                     l584:	
 10548  092A  3001               	movlw	1
 10549  092B                     u2255:	
 10550  092B  35A2               	lslf	___wmul@multiplicand,f
 10551  092C  0DA3               	rlf	___wmul@multiplicand+1,f
 10552  092D  0B89               	decfsz	9,f
 10553  092E  292B               	goto	u2255
 10554  092F  3001               	movlw	1
 10555  0930                     u2265:	
 10556  0930  36A1               	lsrf	___wmul@multiplier+1,f
 10557  0931  0CA0               	rrf	___wmul@multiplier,f
 10558  0932  0B89               	decfsz	9,f
 10559  0933  2930               	goto	u2265
 10560  0934  0820               	movf	___wmul@multiplier,w
 10561  0935  0421               	iorwf	___wmul@multiplier+1,w
 10562  0936  1D03               	btfss	3,2
 10563  0937  2924               	goto	l2402
 10564  0938  0825               	movf	___wmul@product+1,w
 10565  0939  00A1               	movwf	?___wmul+1
 10566  093A  0824               	movf	___wmul@product,w
 10567  093B  00A0               	movwf	?___wmul
 10568  093C  0008               	return
 10569  093D                     __end_of___wmul:	
 10570                           
 10571                           	psect	text62
 10572  0EE4                     __ptext62:	
 10573 ;; *************** function ___aldiv *****************
 10574 ;; Defined at:
 10575 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  divisor         4    6[BANK0 ] long 
 10578 ;;  dividend        4   10[BANK0 ] long 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  quotient        4   17[BANK0 ] long 
 10581 ;;  sign            1   16[BANK0 ] unsigned char 
 10582 ;;  counter         1   15[BANK0 ] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  4    6[BANK0 ] long 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10592 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;Total ram usage:       15 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    2
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_I2CInit
 10603 ;;		_I2CInit_2
 10604 ;;		_pwmInit_ccp2
 10605 ;;		_pwmInit_ccp3
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           
 10610                           ;psect for function ___aldiv
 10611  0EE4                     ___aldiv:	
 10612                           
 10613                           ;incstack = 0
 10614                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10615  0EE4  0020               	movlb	0	; select bank0
 10616  0EE5  01B0               	clrf	___aldiv@sign
 10617  0EE6  1FA9               	btfss	___aldiv@divisor+3,7
 10618  0EE7  2EF5               	goto	l639
 10619  0EE8  09A6               	comf	___aldiv@divisor,f
 10620  0EE9  09A7               	comf	___aldiv@divisor+1,f
 10621  0EEA  09A8               	comf	___aldiv@divisor+2,f
 10622  0EEB  09A9               	comf	___aldiv@divisor+3,f
 10623  0EEC  0AA6               	incf	___aldiv@divisor,f
 10624  0EED  1903               	skipnz
 10625  0EEE  0AA7               	incf	___aldiv@divisor+1,f
 10626  0EEF  1903               	skipnz
 10627  0EF0  0AA8               	incf	___aldiv@divisor+2,f
 10628  0EF1  1903               	skipnz
 10629  0EF2  0AA9               	incf	___aldiv@divisor+3,f
 10630  0EF3  01B0               	clrf	___aldiv@sign
 10631  0EF4  0AB0               	incf	___aldiv@sign,f
 10632  0EF5                     l639:	
 10633  0EF5  1FAD               	btfss	___aldiv@dividend+3,7
 10634  0EF6  2F06               	goto	l2054
 10635  0EF7  09AA               	comf	___aldiv@dividend,f
 10636  0EF8  09AB               	comf	___aldiv@dividend+1,f
 10637  0EF9  09AC               	comf	___aldiv@dividend+2,f
 10638  0EFA  09AD               	comf	___aldiv@dividend+3,f
 10639  0EFB  0AAA               	incf	___aldiv@dividend,f
 10640  0EFC  1903               	skipnz
 10641  0EFD  0AAB               	incf	___aldiv@dividend+1,f
 10642  0EFE  1903               	skipnz
 10643  0EFF  0AAC               	incf	___aldiv@dividend+2,f
 10644  0F00  1903               	skipnz
 10645  0F01  0AAD               	incf	___aldiv@dividend+3,f
 10646  0F02  3001               	movlw	1
 10647  0F03  00AE               	movwf	??___aldiv
 10648  0F04  082E               	movf	??___aldiv,w
 10649  0F05  06B0               	xorwf	___aldiv@sign,f
 10650  0F06                     l2054:	
 10651  0F06  3000               	movlw	0
 10652  0F07  00B4               	movwf	___aldiv@quotient+3
 10653  0F08  3000               	movlw	0
 10654  0F09  00B3               	movwf	___aldiv@quotient+2
 10655  0F0A  3000               	movlw	0
 10656  0F0B  00B2               	movwf	___aldiv@quotient+1
 10657  0F0C  3000               	movlw	0
 10658  0F0D  00B1               	movwf	___aldiv@quotient
 10659  0F0E  0829               	movf	___aldiv@divisor+3,w
 10660  0F0F  0428               	iorwf	___aldiv@divisor+2,w
 10661  0F10  0427               	iorwf	___aldiv@divisor+1,w
 10662  0F11  0426               	iorwf	___aldiv@divisor,w
 10663  0F12  1903               	skipnz
 10664  0F13  2F4F               	goto	l2076
 10665  0F14  01AF               	clrf	___aldiv@counter
 10666  0F15  0AAF               	incf	___aldiv@counter,f
 10667  0F16                     l2062:	
 10668  0F16  1BA9               	btfsc	___aldiv@divisor+3,7
 10669  0F17  2F24               	goto	l2064
 10670  0F18  3001               	movlw	1
 10671  0F19                     u1735:	
 10672  0F19  35A6               	lslf	___aldiv@divisor,f
 10673  0F1A  0DA7               	rlf	___aldiv@divisor+1,f
 10674  0F1B  0DA8               	rlf	___aldiv@divisor+2,f
 10675  0F1C  0DA9               	rlf	___aldiv@divisor+3,f
 10676  0F1D  0B89               	decfsz	9,f
 10677  0F1E  2F19               	goto	u1735
 10678  0F1F  3001               	movlw	1
 10679  0F20  00AE               	movwf	??___aldiv
 10680  0F21  082E               	movf	??___aldiv,w
 10681  0F22  07AF               	addwf	___aldiv@counter,f
 10682  0F23  2F16               	goto	l2062
 10683  0F24                     l2064:	
 10684  0F24  3001               	movlw	1
 10685  0F25                     u1755:	
 10686  0F25  35B1               	lslf	___aldiv@quotient,f
 10687  0F26  0DB2               	rlf	___aldiv@quotient+1,f
 10688  0F27  0DB3               	rlf	___aldiv@quotient+2,f
 10689  0F28  0DB4               	rlf	___aldiv@quotient+3,f
 10690  0F29  0B89               	decfsz	9,f
 10691  0F2A  2F25               	goto	u1755
 10692  0F2B  0829               	movf	___aldiv@divisor+3,w
 10693  0F2C  022D               	subwf	___aldiv@dividend+3,w
 10694  0F2D  1D03               	skipz
 10695  0F2E  2F39               	goto	u1765
 10696  0F2F  0828               	movf	___aldiv@divisor+2,w
 10697  0F30  022C               	subwf	___aldiv@dividend+2,w
 10698  0F31  1D03               	skipz
 10699  0F32  2F39               	goto	u1765
 10700  0F33  0827               	movf	___aldiv@divisor+1,w
 10701  0F34  022B               	subwf	___aldiv@dividend+1,w
 10702  0F35  1D03               	skipz
 10703  0F36  2F39               	goto	u1765
 10704  0F37  0826               	movf	___aldiv@divisor,w
 10705  0F38  022A               	subwf	___aldiv@dividend,w
 10706  0F39                     u1765:	
 10707  0F39  1C03               	skipc
 10708  0F3A  2F44               	goto	l2072
 10709  0F3B  0826               	movf	___aldiv@divisor,w
 10710  0F3C  02AA               	subwf	___aldiv@dividend,f
 10711  0F3D  0827               	movf	___aldiv@divisor+1,w
 10712  0F3E  3BAB               	subwfb	___aldiv@dividend+1,f
 10713  0F3F  0828               	movf	___aldiv@divisor+2,w
 10714  0F40  3BAC               	subwfb	___aldiv@dividend+2,f
 10715  0F41  0829               	movf	___aldiv@divisor+3,w
 10716  0F42  3BAD               	subwfb	___aldiv@dividend+3,f
 10717  0F43  1431               	bsf	___aldiv@quotient,0
 10718  0F44                     l2072:	
 10719  0F44  3001               	movlw	1
 10720  0F45                     u1775:	
 10721  0F45  36A9               	lsrf	___aldiv@divisor+3,f
 10722  0F46  0CA8               	rrf	___aldiv@divisor+2,f
 10723  0F47  0CA7               	rrf	___aldiv@divisor+1,f
 10724  0F48  0CA6               	rrf	___aldiv@divisor,f
 10725  0F49  0B89               	decfsz	9,f
 10726  0F4A  2F45               	goto	u1775
 10727  0F4B  3001               	movlw	1
 10728  0F4C  02AF               	subwf	___aldiv@counter,f
 10729  0F4D  1D03               	btfss	3,2
 10730  0F4E  2F24               	goto	l2064
 10731  0F4F                     l2076:	
 10732  0F4F  0830               	movf	___aldiv@sign,w
 10733  0F50  1903               	btfsc	3,2
 10734  0F51  2F5D               	goto	l2080
 10735  0F52  09B1               	comf	___aldiv@quotient,f
 10736  0F53  09B2               	comf	___aldiv@quotient+1,f
 10737  0F54  09B3               	comf	___aldiv@quotient+2,f
 10738  0F55  09B4               	comf	___aldiv@quotient+3,f
 10739  0F56  0AB1               	incf	___aldiv@quotient,f
 10740  0F57  1903               	skipnz
 10741  0F58  0AB2               	incf	___aldiv@quotient+1,f
 10742  0F59  1903               	skipnz
 10743  0F5A  0AB3               	incf	___aldiv@quotient+2,f
 10744  0F5B  1903               	skipnz
 10745  0F5C  0AB4               	incf	___aldiv@quotient+3,f
 10746  0F5D                     l2080:	
 10747  0F5D  0834               	movf	___aldiv@quotient+3,w
 10748  0F5E  00A9               	movwf	?___aldiv+3
 10749  0F5F  0833               	movf	___aldiv@quotient+2,w
 10750  0F60  00A8               	movwf	?___aldiv+2
 10751  0F61  0832               	movf	___aldiv@quotient+1,w
 10752  0F62  00A7               	movwf	?___aldiv+1
 10753  0F63  0831               	movf	___aldiv@quotient,w
 10754  0F64  00A6               	movwf	?___aldiv
 10755  0F65  0008               	return
 10756  0F66                     __end_of___aldiv:	
 10757                           
 10758                           	psect	intentry
 10759  0004                     __pintentry:	
 10760 ;; *************** function _isr *****************
 10761 ;; Defined at:
 10762 ;;		line 386 in file "ap.c"
 10763 ;; Parameters:    Size  Location     Type
 10764 ;;		None
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;		None
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  1    wreg      void 
 10769 ;; Registers used:
 10770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10780 ;;Total ram usage:        2 bytes
 10781 ;; Hardware stack levels used:    1
 10782 ;; Hardware stack levels required when called:    1
 10783 ;; This function calls:
 10784 ;;		_timerInterruptProc
 10785 ;; This function is called by:
 10786 ;;		Interrupt level 1
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790  0004                     _isr:	
 10791                           
 10792                           ;incstack = 0
 10793  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10794                           
 10795                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10796  0005  3180               	pagesel	$
 10797  0006  0020               	movlb	0	; select bank0
 10798  0007  087F               	movf	127,w
 10799  0008  00FC               	movwf	??_isr+1
 10800                           
 10801                           ;ap.c: 389: if(PIR4bits.RC2IF)
 10802  0009  0814               	movf	20,w	;volatile
 10803                           
 10804                           ;ap.c: 393: }
 10805                           ;ap.c: 395: if (INTCONbits.TMR0IF)
 10806                           
 10807                           ;ap.c: 390: {
 10808  000A  1D0B               	btfss	11,2	;volatile
 10809  000B  281F               	goto	i1l371
 10810                           
 10811                           ;ap.c: 396: {
 10812                           ;ap.c: 397: INTCONbits.TMR0IF = 0;
 10813  000C  110B               	bcf	11,2	;volatile
 10814                           
 10815                           ;ap.c: 398: TMR0 = 131;
 10816  000D  3083               	movlw	131
 10817  000E  0095               	movwf	21	;volatile
 10818                           
 10819                           ;ap.c: 399: timer0_millis ++;
 10820  000F  3001               	movlw	1
 10821  0010  0021               	movlb	1	; select bank1
 10822  0011  07B1               	addwf	_timer0_millis^(0+128),f	;volatile
 10823  0012  3000               	movlw	0
 10824  0013  3DB2               	addwfc	(_timer0_millis+1)^(0+128),f	;volatile
 10825  0014  3000               	movlw	0
 10826  0015  3DB3               	addwfc	(_timer0_millis+2)^(0+128),f	;volatile
 10827  0016  3000               	movlw	0
 10828  0017  3DB4               	addwfc	(_timer0_millis+3)^(0+128),f	;volatile
 10829                           
 10830                           ;ap.c: 401: timerInterruptProc(Timer, 6);
 10831  0018  3006               	movlw	6
 10832  0019  00FB               	movwf	??_isr
 10833  001A  087B               	movf	??_isr,w
 10834  001B  00F0               	movwf	timerInterruptProc@ch_count
 10835  001C  30B5               	movlw	(low (_Timer| 0))& (0+255)
 10836  001D  318D  25E8         	fcall	_timerInterruptProc
 10837  001F                     i1l371:	
 10838  001F  087C               	movf	??_isr+1,w
 10839  0020  0020               	movlb	0	; select bank0
 10840  0021  00FF               	movwf	127
 10841  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10842  0023  0009               	retfie
 10843  0024                     __end_of_isr:	
 10844                           
 10845                           	psect	text64
 10846  0DE8                     __ptext64:	
 10847 ;; *************** function _timerInterruptProc *****************
 10848 ;; Defined at:
 10849 ;;		line 41 in file "timer.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;  time            1    wreg     PTR struct .
 10852 ;;		 -> Timer(48), 
 10853 ;;  ch_count        1    0[COMMON] unsigned char 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  time            1    9[COMMON] PTR struct .
 10856 ;;		 -> Timer(48), 
 10857 ;;  i               1   10[COMMON] unsigned char 
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  1    wreg      void 
 10860 ;; Registers used:
 10861 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10867 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;Total ram usage:       11 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_isr
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           
 10881                           ;psect for function _timerInterruptProc
 10882  0DE8                     _timerInterruptProc:	
 10883                           
 10884                           ;incstack = 0
 10885                           ; Regs used in _timerInterruptProc: [wreg+fsr1l+fsr1h+status,2+status,0]
 10886                           ;timerInterruptProc@time stored from wreg
 10887  0DE8  00F9               	movwf	timerInterruptProc@time
 10888                           
 10889                           ;timer.c: 43: for(uint8_t i=0; i < ch_count; i++)
 10890  0DE9  01FA               	clrf	timerInterruptProc@i
 10891  0DEA                     i1l2886:	
 10892  0DEA  0870               	movf	timerInterruptProc@ch_count,w
 10893  0DEB  027A               	subwf	timerInterruptProc@i,w
 10894  0DEC  1803               	btfsc	3,0
 10895  0DED  0008               	return
 10896                           
 10897                           ;timer.c: 44: {
 10898                           ;timer.c: 45: if((time+i)->start)
 10899  0DEE  087A               	movf	timerInterruptProc@i,w
 10900  0DEF  00F1               	movwf	??_timerInterruptProc
 10901  0DF0  3002               	movlw	2
 10902  0DF1                     u289_25:	
 10903  0DF1  35F1               	lslf	??_timerInterruptProc,f
 10904  0DF2  3EFF               	addlw	-1
 10905  0DF3  1D03               	skipz
 10906  0DF4  2DF1               	goto	u289_25
 10907  0DF5  3571               	lslf	??_timerInterruptProc,w
 10908  0DF6  0779               	addwf	timerInterruptProc@time,w
 10909  0DF7  00F2               	movwf	??_timerInterruptProc+1
 10910  0DF8  0872               	movf	??_timerInterruptProc+1,w
 10911  0DF9  0086               	movwf	6
 10912  0DFA  0187               	clrf	7
 10913  0DFB  0801               	movf	1,w
 10914  0DFC  1903               	btfsc	3,2
 10915  0DFD  2E5E               	goto	i1l2884
 10916                           
 10917                           ;timer.c: 46: {
 10918                           ;timer.c: 47: if((time+i)->interval < (time+i)->set)
 10919  0DFE  087A               	movf	timerInterruptProc@i,w
 10920  0DFF  00F1               	movwf	??_timerInterruptProc
 10921  0E00  3002               	movlw	2
 10922  0E01                     u291_25:	
 10923  0E01  35F1               	lslf	??_timerInterruptProc,f
 10924  0E02  3EFF               	addlw	-1
 10925  0E03  1D03               	skipz
 10926  0E04  2E01               	goto	u291_25
 10927  0E05  3571               	lslf	??_timerInterruptProc,w
 10928  0E06  0779               	addwf	timerInterruptProc@time,w
 10929  0E07  00F2               	movwf	??_timerInterruptProc+1
 10930  0E08  0872               	movf	??_timerInterruptProc+1,w
 10931  0E09  3E02               	addlw	2
 10932  0E0A  0086               	movwf	6
 10933  0E0B  0187               	clrf	7
 10934  0E0C  3F40               	moviw [0]fsr1
 10935  0E0D  00F3               	movwf	??_timerInterruptProc+2
 10936  0E0E  3F41               	moviw [1]fsr1
 10937  0E0F  00F4               	movwf	??_timerInterruptProc+3
 10938  0E10  087A               	movf	timerInterruptProc@i,w
 10939  0E11  00F5               	movwf	??_timerInterruptProc+4
 10940  0E12  3002               	movlw	2
 10941  0E13                     u292_25:	
 10942  0E13  35F5               	lslf	??_timerInterruptProc+4,f
 10943  0E14  3EFF               	addlw	-1
 10944  0E15  1D03               	skipz
 10945  0E16  2E13               	goto	u292_25
 10946  0E17  3575               	lslf	??_timerInterruptProc+4,w
 10947  0E18  0779               	addwf	timerInterruptProc@time,w
 10948  0E19  00F6               	movwf	??_timerInterruptProc+5
 10949  0E1A  0876               	movf	??_timerInterruptProc+5,w
 10950  0E1B  3E04               	addlw	4
 10951  0E1C  0086               	movwf	6
 10952  0E1D  0187               	clrf	7
 10953  0E1E  3F40               	moviw [0]fsr1
 10954  0E1F  00F7               	movwf	??_timerInterruptProc+6
 10955  0E20  3F41               	moviw [1]fsr1
 10956  0E21  00F8               	movwf	??_timerInterruptProc+7
 10957  0E22  0874               	movf	??_timerInterruptProc+3,w
 10958  0E23  0278               	subwf	??_timerInterruptProc+7,w
 10959  0E24  1D03               	skipz
 10960  0E25  2E28               	goto	u293_25
 10961  0E26  0873               	movf	??_timerInterruptProc+2,w
 10962  0E27  0277               	subwf	??_timerInterruptProc+6,w
 10963  0E28                     u293_25:	
 10964  0E28  1803               	skipnc
 10965  0E29  2E3E               	goto	i1l2882
 10966                           
 10967                           ;timer.c: 48: {
 10968                           ;timer.c: 49: ++ (time+i)->interval;
 10969  0E2A  087A               	movf	timerInterruptProc@i,w
 10970  0E2B  00F1               	movwf	??_timerInterruptProc
 10971  0E2C  3002               	movlw	2
 10972  0E2D                     u294_25:	
 10973  0E2D  35F1               	lslf	??_timerInterruptProc,f
 10974  0E2E  3EFF               	addlw	-1
 10975  0E2F  1D03               	skipz
 10976  0E30  2E2D               	goto	u294_25
 10977  0E31  3571               	lslf	??_timerInterruptProc,w
 10978  0E32  0779               	addwf	timerInterruptProc@time,w
 10979  0E33  00F2               	movwf	??_timerInterruptProc+1
 10980  0E34  0872               	movf	??_timerInterruptProc+1,w
 10981  0E35  3E04               	addlw	4
 10982  0E36  0086               	movwf	6
 10983  0E37  0187               	clrf	7
 10984  0E38  3001               	movlw	1
 10985  0E39  0781               	addwf	1,f
 10986  0E3A  3141               	addfsr 1,1
 10987  0E3B  1803               	skipnc
 10988  0E3C  0A81               	incf	1,f
 10989                           
 10990                           ;timer.c: 50: }
 10991  0E3D  2E5E               	goto	i1l2884
 10992  0E3E                     i1l2882:	
 10993                           
 10994                           ;timer.c: 51: else
 10995                           ;timer.c: 52: {
 10996                           ;timer.c: 53: (time+i)->interval = 0;
 10997  0E3E  087A               	movf	timerInterruptProc@i,w
 10998  0E3F  00F1               	movwf	??_timerInterruptProc
 10999  0E40  3002               	movlw	2
 11000  0E41                     u295_25:	
 11001  0E41  35F1               	lslf	??_timerInterruptProc,f
 11002  0E42  3EFF               	addlw	-1
 11003  0E43  1D03               	skipz
 11004  0E44  2E41               	goto	u295_25
 11005  0E45  3571               	lslf	??_timerInterruptProc,w
 11006  0E46  0779               	addwf	timerInterruptProc@time,w
 11007  0E47  00F2               	movwf	??_timerInterruptProc+1
 11008  0E48  0872               	movf	??_timerInterruptProc+1,w
 11009  0E49  3E04               	addlw	4
 11010  0E4A  0086               	movwf	6
 11011  0E4B  0187               	clrf	7
 11012  0E4C  3000               	movlw	0
 11013  0E4D  3FC0               	movwi [0]fsr1
 11014  0E4E  3FC1               	movwi [1]fsr1
 11015                           
 11016                           ;timer.c: 54: (time+i)->tick = 1;
 11017  0E4F  087A               	movf	timerInterruptProc@i,w
 11018  0E50  00F1               	movwf	??_timerInterruptProc
 11019  0E51  3002               	movlw	2
 11020  0E52                     u296_25:	
 11021  0E52  35F1               	lslf	??_timerInterruptProc,f
 11022  0E53  3EFF               	addlw	-1
 11023  0E54  1D03               	skipz
 11024  0E55  2E52               	goto	u296_25
 11025  0E56  3571               	lslf	??_timerInterruptProc,w
 11026  0E57  0779               	addwf	timerInterruptProc@time,w
 11027  0E58  00F2               	movwf	??_timerInterruptProc+1
 11028  0E59  0A72               	incf	??_timerInterruptProc+1,w
 11029  0E5A  0086               	movwf	6
 11030  0E5B  0187               	clrf	7
 11031  0E5C  0181               	clrf	1
 11032  0E5D  0A81               	incf	1,f
 11033  0E5E                     i1l2884:	
 11034  0E5E  3001               	movlw	1
 11035  0E5F  00F1               	movwf	??_timerInterruptProc
 11036  0E60  0871               	movf	??_timerInterruptProc,w
 11037  0E61  07FA               	addwf	timerInterruptProc@i,f
 11038  0E62  2DEA               	goto	i1l2886
 11039  0E63                     __end_of_timerInterruptProc:	
 11040  007E                     btemp	set	126	;btemp
 11041  007E                     int$flags	set	126
 11042  007E                     wtemp	set	126
 11043  007E                     wtemp0	set	126
 11044  0080                     wtemp1	set	128
 11045  0082                     wtemp2	set	130
 11046  0084                     wtemp3	set	132
 11047  0086                     wtemp4	set	134
 11048  0088                     wtemp5	set	136
 11049  007F                     wtemp6	set	127
 11050  007E                     ttemp	set	126
 11051  007E                     ttemp0	set	126
 11052  0081                     ttemp1	set	129
 11053  0084                     ttemp2	set	132
 11054  0087                     ttemp3	set	135
 11055  007F                     ttemp4	set	127
 11056  007E                     ltemp	set	126
 11057  007E                     ltemp0	set	126
 11058  0082                     ltemp1	set	130
 11059  0086                     ltemp2	set	134
 11060  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     80      80
    BANK1            80      3      72
    BANK2            80      0      18
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Timer.timeProc	PTR FTN()void  size(2) Largest target is 0
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInterruptProc@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInterruptProc@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerTickClear@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerTickClear@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerGetTick@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerGetTick@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerEventStart@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerEventStart@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerProc@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerProc@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerInit@func	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    S416$timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInit@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInit@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    buttons_setFuncs@btn2	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), 

    buttons_setFuncs@btn1	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Expose(), 

    processButton@button.onPress	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), event_btn_Expose(), 

    processButton@button	PTR struct . size(1) Largest target is 18
		 -> buttons(BANK2[18]), 

    S963$onPress	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), event_btn_Expose(), 

    buttons.onPress	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), event_btn_Expose(), 

    I2C_DAC_Write@data	PTR int  size(1) Largest target is 2
		 -> apInit@D_temp(BANK0[2]), event_btn_Stop@temp(BANK0[2]), event_btn_Expose@temp(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_timerInterruptProc

Critical Paths under _main in BANK0

    _apMain->_timerProc
    _event_timer_Button->_processButtons
    _processButtons->_processButton
    _processButton->_event_btn_Expose
    _event_btn_Expose->_pwmInit_ccp2
    _event_btn_Expose->_pwmInit_ccp3
    _pwmInit_ccp3->___fttol
    _adcTodac->___fttol
    _event_rst->_timerTickClear
    _event_expose->_timerTickClear
    _event_display->_disp_kv
    _event_display->_disp_ma_result
    _disp_ma_result->___fttol
    _disp_kv->___fttol
    ___lwtoft->___ftpack
    ___lwmod->___lwdiv
    _event_anodeCurrent->_pwmInit_ccp2
    _pwmInit_ccp2->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___awtoft->___ftpack
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    _apInit->_event_btn_Stop
    _event_btn_Stop->_I2C_DAC_Write
    _I2C_DAC_Write->_I2CSend_2
    _I2CStop_2->_I2CWait_2
    _I2CStart_2->_I2CWait_2
    _I2CSend_2->_I2CWait_2
    _I2CWait_2->_get_millis
    _I2CAck_2->_get_millis
    _I2C_AS1115_Write->_I2CSend
    _I2CStop->_I2CWait
    _I2CStart->_I2CWait
    _I2CSend->_I2CWait
    _I2CWait->_get_millis
    _I2CAck->_get_millis
    _I2CInit_2->___aldiv
    _I2CInit->___aldiv
    ___aldiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _event_timer_Button->_processButtons

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  127503
                             _apInit
                             _apMain
 ---------------------------------------------------------------------------------
 (1) _apMain                                               0     0      0  108235
                          _timerProc
 ---------------------------------------------------------------------------------
 (2) _timerProc                                            1     1      0  108235
                                             79 BANK0      1     1      0
                 _event_anodeCurrent *
                      _event_display *
                       _event_expose *
                          _event_rst *
                 _event_timer_Button *
 ---------------------------------------------------------------------------------
 (3) _event_timer_Button                                   0     0      0   39168
                     _processButtons
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _processButtons                                       5     5      0   38250
                                             77 BANK0      2     2      0
                                              0 BANK1      3     3      0
                             ___bmul
                      _processButton
 ---------------------------------------------------------------------------------
 (5) _processButton                                        6     5      1   38017
                                             71 BANK0      6     5      1
                             ___bmul (ARG)
                   _event_btn_Expose *
                     _event_btn_Stop *
 ---------------------------------------------------------------------------------
 (6) _event_btn_Expose                                     4     4      0   32739
                                             67 BANK0      4     4      0
                      _I2C_DAC_Write
                           _adcTodac
                       _pwmInit_ccp2
                       _pwmInit_ccp3
                      _pwmStart_ccp2
                      _pwmStart_ccp3
                    _timerEventStart
 ---------------------------------------------------------------------------------
 (7) _pwmStart_ccp3                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pwmStart_ccp2                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pwmInit_ccp3                                         9     4      5   10759
                                             58 BANK0      9     4      5
                            ___aldiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) _adcTodac                                             5     3      2    6783
                                             58 BANK0      5     3      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     118
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _event_rst                                            0     0      0     918
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (3) _event_expose                                         0     0      0     918
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (3) _event_display                                        2     2      0   47873
                                             66 BANK0      2     2      0
                   _I2C_AS1115_Write
                            _adcRead
                            _disp_kv
                     _disp_ma_result
                    _timerEventStart
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _disp_ma_result                                       8     6      2   20423
                                             58 BANK0      8     6      2
                   _I2C_AS1115_Write
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _disp_kv                                              8     6      2   21054
                                             58 BANK0      8     6      2
                   _I2C_AS1115_Write
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             4     1      3    2451
                                              8 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4    2463
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4    1698
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _adcRead                                              4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _event_anodeCurrent                                   2     2      0   19186
                                             67 BANK0      2     2      0
                            ___ftadd
                             ___ftge
                            ___ftsub
                       _pwmInit_ccp2
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _timerGetTick                                         1     1      0     172
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _pwmInit_ccp2                                         9     4      5   10887
                                             58 BANK0      9     4      5
                            ___aldiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             14    10      4     764
                                             44 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             16    10      6    3459
                                             28 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftdiv                                             16    10      6    3157
                                             12 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awtoft                                             6     3      3    2328
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    3528
                                             21 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    3333
                                              8 BANK0     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     520
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _apInit                                               3     3      0   19268
                                             33 BANK0      3     3      0
                            _I2CInit
                          _I2CInit_2
                   _I2C_AS1115_Write
                      _I2C_DAC_Write
                            _adcInit
                       _buttons_init
                   _buttons_setFuncs
                     _event_btn_Stop
                           _initPort
                          _initTimer
                    _timerEventStart
                          _timerInit
 ---------------------------------------------------------------------------------
 (2) _timerInit                                            5     1      4     944
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _timerEventStart                                      1     1      0     202
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _event_btn_Stop                                       4     4      0    4854
                                             29 BANK0      4     4      0
                      _I2C_DAC_Write
                       _pwmStop_ccp2
                       _pwmStop_ccp3
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _timerTickClear                                       3     2      1     746
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (7) _pwmStop_ccp3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pwmStop_ccp2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DAC_Write                                        4     3      1    4060
                                             25 BANK0      4     3      1
                           _I2CAck_2
                          _I2CSend_2
                         _I2CStart_2
                          _I2CStop_2
 ---------------------------------------------------------------------------------
 (8) _I2CStop_2                                            0     0      0     881
                          _I2CWait_2
 ---------------------------------------------------------------------------------
 (8) _I2CStart_2                                           0     0      0     881
                          _I2CWait_2
 ---------------------------------------------------------------------------------
 (8) _I2CSend_2                                            1     1      0     903
                                             24 BANK0      1     1      0
                          _I2CWait_2
 ---------------------------------------------------------------------------------
 (9) _I2CWait_2                                            8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (8) _I2CAck_2                                             8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (2) _buttons_setFuncs                                     4     0      4     172
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_AS1115_Write                                     2     1      1    5254
                                             25 BANK0      2     1      1
                             _I2CAck
                            _I2CSend
                           _I2CStart
                            _I2CStop
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _I2CStop                                              0     0      0     881
                            _I2CWait
 ---------------------------------------------------------------------------------
 (6) _I2CStart                                             0     0      0     881
                            _I2CWait
 ---------------------------------------------------------------------------------
 (6) _I2CSend                                              1     1      0     903
                                             24 BANK0      1     1      0
                            _I2CWait
 ---------------------------------------------------------------------------------
 (7) _I2CWait                                              8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (6) _I2CAck                                               8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (10) _millis                                              8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (10) _init_millis                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _get_millis                                         16     8      8     812
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _I2CInit_2                                            8     6      2    1834
                                             21 BANK0      8     6      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _I2CInit                                              8     6      2    1834
                                             21 BANK0      8     6      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     936
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             15     7      8     812
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 2     2      0     404
                                             11 COMMON     2     2      0
                 _timerInterruptProc
 ---------------------------------------------------------------------------------
 (12) _timerInterruptProc                                 11    10      1     404
                                              0 COMMON    11    10      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _apInit
     _I2CInit
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _I2CInit_2
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _I2C_AS1115_Write
       _I2CAck
         _get_millis
         _init_millis
         _millis
       _I2CSend
         _I2CWait
           _get_millis
           _init_millis
           _millis
       _I2CStart
         _I2CWait
           _get_millis
           _init_millis
           _millis
       _I2CStop
         _I2CWait
           _get_millis
           _init_millis
           _millis
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
     _I2C_DAC_Write
       _I2CAck_2
         _get_millis
         _init_millis
         _millis
       _I2CSend_2
         _I2CWait_2
           _get_millis
           _init_millis
           _millis
       _I2CStart_2
         _I2CWait_2
           _get_millis
           _init_millis
           _millis
       _I2CStop_2
         _I2CWait_2
           _get_millis
           _init_millis
           _millis
     _adcInit
     _buttons_init
     _buttons_setFuncs
     _event_btn_Stop
       _I2C_DAC_Write
         _I2CAck_2
           _get_millis
           _init_millis
           _millis
         _I2CSend_2
           _I2CWait_2
             _get_millis
             _init_millis
             _millis
         _I2CStart_2
           _I2CWait_2
             _get_millis
             _init_millis
             _millis
         _I2CStop_2
           _I2CWait_2
             _get_millis
             _init_millis
             _millis
       _pwmStop_ccp2
       _pwmStop_ccp3
       _timerTickClear
     _initPort
     _initTimer
     _timerEventStart
     _timerInit
   _apMain
     _timerProc
       _event_anodeCurrent *
         ___ftadd
           ___ftpack
         ___ftge
         ___ftsub
           ___ftadd
             ___ftpack
         _pwmInit_ccp2
           ___aldiv
             ___wmul (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
         _timerGetTick
         _timerTickClear
       _event_display *
         _I2C_AS1115_Write
           _I2CAck
             _get_millis
             _init_millis
             _millis
           _I2CSend
             _I2CWait
               _get_millis
               _init_millis
               _millis
           _I2CStart
             _I2CWait
               _get_millis
               _init_millis
               _millis
           _I2CStop
             _I2CWait
               _get_millis
               _init_millis
               _millis
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         _adcRead
         _disp_kv
           _I2C_AS1115_Write
             _I2CAck
               _get_millis
               _init_millis
               _millis
             _I2CSend
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStart
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStop
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___lwtoft
             ___ftpack
             ___wmul (ARG)
           ___wmul
         _disp_ma_result
           _I2C_AS1115_Write
             _I2CAck
               _get_millis
               _init_millis
               _millis
             _I2CSend
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStart
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStop
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___lwtoft
             ___ftpack
             ___wmul (ARG)
           ___wmul
         _timerEventStart
         _timerGetTick
         _timerTickClear
       _event_expose *
         _timerGetTick
         _timerTickClear
       _event_rst *
         _timerGetTick
         _timerTickClear
       _event_timer_Button *
         _processButtons
           ___bmul
           _processButton
             ___bmul (ARG)
             _event_btn_Expose (ARG) *
               _I2C_DAC_Write
                 _I2CAck_2
                   _get_millis
                   _init_millis
                   _millis
                 _I2CSend_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStart_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStop_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
               _adcTodac
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                         ___wmul (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                 ___lwtoft
                   ___ftpack
                   ___wmul (ARG)
               _pwmInit_ccp2
                 ___aldiv
                   ___wmul (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                         ___wmul (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
               _pwmInit_ccp3
                 ___aldiv
                   ___wmul (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                         ___wmul (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
               _pwmStart_ccp2
               _pwmStart_ccp3
               _timerEventStart
             _event_btn_Stop (ARG) *
               _I2C_DAC_Write
                 _I2CAck_2
                   _get_millis
                   _init_millis
                   _millis
                 _I2CSend_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStart_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStop_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
               _pwmStop_ccp2
               _pwmStop_ccp3
               _timerTickClear
         _timerGetTick
         _timerTickClear

 _isr (ROOT)
   _timerInterruptProc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      12       9       22.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Jan 02 16:08:05 2023

         __size_of_I2CInit_2 003D           __size_of_I2CSend_2 0009           __size_of_I2CWait_2 0042  
             ___bmul@product 0022                  __CFG_CP$OFF 0000           __size_of_I2CStop_2 0005  
                         l73 0BED                           l76 0C1D          ___wmul@multiplicand 0022  
             ?_pwmStart_ccp2 0070               ?_pwmStart_ccp3 0070      processButtons@isPressed 00E5  
               ___ftadd@exp1 0034                 ___ftadd@exp2 0033          __size_of_I2CStart_2 0005  
               ___ftadd@sign 0032                          l112 0C2D                          l115 0C5D  
                        l412 0EC3                          l175 0A2A                          l348 02E4  
                        l357 08F2                          l639 0EF5                          l584 092A  
                        l752 0DC9                          l753 0DD1                          l745 0DB6  
                        l836 07E5                          l776 0201                          _GIE 005F  
                        _PR2 001B                          _PR4 0416                 __CFG_CPD$OFF 0000  
                        _cmd 00A0              __end_of_I2CInit 0BA4                          _isr 0004  
            __end_of_I2CSend 0819              __end_of_I2CWait 0CA3              __end_of_I2CStop 17DC  
                        wreg 0009                  disp_kv@data 005A                  disp_kv@temp 005D  
              _I2C_DAC_Write 0AF2                 ___ftdiv@cntr 0036                 ___ftdiv@sign 003B  
                       l2000 0D9D                         l2010 0DC3                         l2002 0DA2  
                       l2102 05A9                         l2008 0DBB                         l2130 0619  
                       l2122 0600                         l2108 05BF                         l2220 07DC  
                       l2212 07C1                         l2062 0F16                         l2054 0F06  
                       l2150 050B                         l2222 07E8                         l2214 07CF  
                       l2080 0F5D                         l2072 0F44                         l2064 0F24  
                       l2144 04F5                         l2402 0924                         l2162 0546  
                       l2226 07F6                         l2076 0F4F                         l2244 0C6D  
                       l2092 09A7                         l2420 08BF                         l2246 0CA0  
                       l2238 0C72                         l2502 0B42                         l2174 0562  
                       l2166 054E                         l2600 00ED                         l2416 08B9  
                       l2506 0B58                         l2434 018A                         l2178 056A  
                       l2194 0791                         l2530 0AD2                         l2444 01A0  
                       l2540 0AED                         l2356 0D80                         l2462 01CD  
                       l2438 0191                         l2480 0213                         l2464 01D7  
                       l2456 01BA                         l2536 0AE4                         l2528 0AC6  
                       l2552 0A3B                         l2474 01F3                         l2466 01DC  
                       l2618 0945                         l2554 0A47                         l2562 0A5C  
                       l2650 03A7                         l2484 0225                         l2476 01FD  
                       l2468 01E0                         l2494 0240                         l2558 0A53  
                       l2398 0ECF                         l2590 0AA0                         l2654 03D2  
                       l2658 03D9                         l2690 031E                         l2682 02C4  
                       l1980 0CB4                         l2686 0301                         l2678 029E  
                       l1986 0CAF                         l1994 0D8C                         l1988 0CE2  
                       l1998 0D93                         ?_isr 0070                         u2025 0798  
                       u2205 0E94                         _LATA 010C                         _LATB 010D  
                       u2055 07C2                         _LATC 010E                         _LATD 010F  
                       u2145 0B02                         _LATE 0110                         _LATF 038C  
                       _LATG 038D                         u1605 0DB1                         u2085 07DD  
                       u2255 092B                         u3047 0A23                         u2265 0930  
                       u1625 0DBE                         u2425 01CE                         u2605 0ADD  
                       u1735 0F19                         u2455 01E1                         u2615 0AE5  
                       u1665 0DD8                         u1585 0D98                         u1755 0F25  
                       u2395 01BB                         u1835 05D1                         u1915 0517  
                       u1765 0F39                         u2485 01F4                         u1845 05E1  
                       u1925 0527                         u2645 0A3E                         u1775 0F45  
                       u1855 0601                         u2575 0AC9                         u1865 0610  
                       u1945 054F                         u2665 0A4D                         u1875 061A  
                       u1955 0555                         u2595 0AD3                         u2675 0A54  
                       u2835 027D                         u2845 02B1                         u2775 03A0  
                       u1985 056B                         u2785 03BB                         u1995 0571  
                       u2795 03D0                         _TMR0 0015                         _WPUB 020D  
                       _WPUG 048D             __end_of_I2CAck_2 0C61                         _main 17F9  
               ___ftpack@arg 0020                 ___ftpack@exp 0023                         fsr0h 0005  
                       fsr1h 0007                         fsr0l 0004                         indf0 0000  
                       indf1 0001                         fsr1l 0006                         btemp 007E  
           __end_of_I2CStart 17D7                __CFG_BOREN$ON 0000           _timerInterruptProc 0DE8  
                       ltemp 007E                         start 0024                         ttemp 007E  
                       wtemp 007E                __CFG_IESO$OFF 0000                 disp_kv@temp2 0060  
          ___bmul@multiplier 0023                 ___ftmul@cntr 004A                 ___ftmul@sign 004B  
       I2C_DAC_Write@address 003C          ?_timerInterruptProc 0070                 ___fttol@exp1 0059  
           ??_timerTickClear 0021                 ___fttol@lval 0055                        ??_isr 007B  
              __CFG_PLLEN$ON 0000              __end_of___aldiv 0F66                        ?_main 0070  
            __end_of_adcInit 0841              __end_of_adcRead 0A34              __end_of___ftadd 0258  
              __CFG_WDTE$OFF 0000              __end_of___ftdiv 063B              __end_of___ftmul 0592  
            __end_of___ftsub 095B              __end_of___fttol 07FF              __end_of___lwdiv 0AF2  
            __end_of___lwmod 0A61                        i1l371 001F                        _PORTA 000C  
                      _PORTB 000D                        _PORTC 000E                        _PORTD 000F  
                      _PORTE 0010                        _PORTF 028C                        _PORTG 028D  
     timerInterruptProc@time 0079                        _TRISA 008C                        _TRISB 008D  
                      _TRISC 008E                        _TRISD 008F                        _TRISE 0090  
                      _TRISF 030C                        _TRISG 030D                 ?_init_millis 0070  
             __CFG_FCMEN$OFF 0000               ?_I2C_DAC_Write 0039                        _Timer 00B5  
            __end_of_disp_kv 0162              ??_processButton 0068                ___awtoft@sign 002D  
       ??_timerInterruptProc 0071            __end_of_I2CInit_2 0BE1            __end_of_I2CSend_2 0822  
          ??_timerEventStart 0020                ___ftpack@sign 0024            __end_of_I2CWait_2 0CE5  
          __end_of_I2CStop_2 17E6                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F           disp_ma_result@data 005A           disp_ma_result@temp 005D  
             __CFG_MCLRE$OFF 0000              __initialization 0026                 __end_of_main 1800  
               I2CAck_2@prev 0034                get_millis@now 0020              ??_pwmStart_ccp2 0020  
            ??_pwmStart_ccp3 0020                    I2CAck@now 0030                    ??_I2CInit 0037  
                  ??_I2CSend 0038                    ??_I2CWait 0030                    ??_I2CStop 0038  
                     ??_main 0070       __size_of_event_display 00D8                ___fttol@sign1 0054  
        processButton@button 006C                ?_event_expose 0070                       _I2CAck 0BE1  
                     _ADRESH 009C                       _ADRESL 009B                       _CCPR2L 0298  
                     _CCPR3L 0311             __end_of_adcTodac 0A8E             __end_of___awtoft 09BE  
                     _ANSELA 018C                       _ANSELE 0190                       _ANSELF 040C  
           __end_of___ftpack 0DE8                       _ANSELG 040D                       i1l2882 0E3E  
                     i1l2884 0E5E                       i1l2886 0DEA                 ??_I2CStart_2 0038  
           __end_of___lwtoft 08F2                       u291_25 0E01                       u292_25 0E13  
                     u293_25 0E28                       u294_25 0E2D                       u295_25 0E41  
                     u296_25 0E52                       u289_25 0DF1               __CFG_PWRTE$OFF 0000  
 __end_of_event_timer_Button 08B6                ?_buttons_init 0070                 _CCPTMRS0bits 029E  
                     ___bmul 08B6                       ___ftge 0B2B   pwmInit_ccp3@ccpr3l_ccp3con 0061  
           ??_processButtons 006D                       _apMain 08F2                    ??___aldiv 002E  
                     _apInit 0408                       ___wmul 0921                    ??_adcInit 0020  
                  ??_adcRead 0022                    ??___ftadd 002E                    ??___ftdiv 0032  
                  ??___ftmul 0042                    ??___ftsub 003B                    ??___fttol 0050  
                  ??___lwdiv 0024                    ??___lwmod 002C             __end_of_initPort 0D2E  
                     _millis 0908            ?_buttons_setFuncs 0020                 adcTodac@data 005A  
                  ??_disp_kv 005C                    ?_I2CAck_2 0070   timerInterruptProc@ch_count 0070  
               adcTodac@temp 005C        ___ftmul@f3_as_product 0047           ??_buttons_setFuncs 0024  
         __end_of_I2CStart_2 17E1               ??_event_expose 0023              ??_I2C_DAC_Write 003A  
                  ?_I2CStart 0070     __end_of_I2C_AS1115_Write 097A     __end_of_event_btn_Expose 0D83  
           ??_disp_ma_result 005C          disp_ma_result@temp2 0060       processButton@isPressed 0067  
    __end_of__initialization 0035                _event_display 0330                   ___ftadd@f1 0028  
                 ___ftadd@f2 002B                   ___ftge@ff1 0020                   ___ftge@ff2 0023  
                 ___ftdiv@f1 002F                   ___ftdiv@f2 002C                   ___ftdiv@f3 0037  
                 ___awtoft@c 0028               ??_buttons_init 0020          ___bmul@multiplicand 0020  
                 ___ftmul@f1 003C                   ___ftmul@f2 003F                   ___ftsub@f1 0038  
                 ___ftsub@f2 0035                   ___fttol@f1 004C               __pcstackCOMMON 0070  
        I2C_AS1115_Write@cmd 003A                   ___lwtoft@c 0028                   ??_I2CAck_2 0030  
                 I2CAck@prev 0034               _OPTION_REGbits 0095                   ??_I2CStart 0038  
        event_btn_Expose@ret 0064  __size_of_event_anodeCurrent 00D8         __size_of_init_millis 000A  
    __size_of_event_btn_Stop 0024                      ?_I2CAck 0070                   __pbssBANK1 00A0  
                 __pbssBANK2 0120               ?_event_display 0070         buttons_setFuncs@btn1 0020  
       buttons_setFuncs@btn2 0022           __size_of_initTimer 000E           __size_of_event_rst 000F  
               I2CSend_2@dat 0038                   I2CSend@dat 0038                   __pmaintext 17F9  
                    ?___bmul 0020                      ?___ftge 0020                      ?_apMain 0070  
                 I2CWait@now 0030                      ?_apInit 0070                      ?___wmul 0020  
                 __pintentry 0004            event_btn_Stop@ret 003E             timerGetTick@time 0020  
                    _I2CInit 0B67                      _I2CSend 0810                      _I2CWait 0C61  
                    ?_millis 0020                 I2CWait_2@now 0030                      _I2CStop 17D7  
                  ?_adcTodac 005A                    ?___awtoft 0028                    ?___ftpack 0020  
            _timerEventStart 0808                    ?___lwtoft 0028           __size_of_timerInit 0022  
         __size_of_timerProc 000C                   _get_millis 09E2                      _SSP1ADD 0212  
                    _SSP2ADD 021A                      _SSP1BUF 0211                      _SSP2BUF 0219  
               apInit@D_temp 0042              __size_of_I2CAck 0040                    _I2CInit_2 0BA4  
                  ?_initPort 0070              processButtons@i 00E7                    _I2CSend_2 0819  
                  _I2CWait_2 0CA3                    _I2CStop_2 17E1         __end_of_event_expose 0885  
                    ___aldiv 0EE4              __size_of___bmul 0012              __size_of___ftge 003C  
                    _adcInit 0836                      _adcRead 0A0B                      ___ftadd 0162  
            __size_of_apMain 0016              __size_of_apInit 00D6                      ___ftdiv 0592  
            __size_of___wmul 001C                      ___ftmul 04DE                      ___ftsub 093D  
                    ___fttol 0778                      ___lwdiv 0ABD                      ___lwmod 0A34  
                 ??_adcTodac 005C                   ??___awtoft 002B                   ??___ftpack 0025  
            __size_of_millis 0019                      __ptext1 08F2                      __ptext2 0841  
                    __ptext3 0258                      __ptext4 0885                      __ptext5 0330  
                    __ptext6 0877                      __ptext7 08A5                      __ptext8 0A8E  
                    __ptext9 0E63                      _disp_kv 0039                   ??___lwtoft 002B  
          __end_of_initTimer 085B            __end_of_event_rst 0894                    _T2CONbits 001C  
               __size_of_isr 0020                      _buttons 0120             ___aldiv@dividend 002A  
                  _T4CONbits 0417         __end_of_buttons_init 0836  __size_of_timerInterruptProc 007B  
                    clrloop0 17ED              ??_event_display 0062        __end_of_processButton 0EE4  
       end_of_initialization 0035                ?_timerGetTick 0070                   ?_I2CInit_2 0035  
                 ??_initPort 0020                   ?_I2CSend_2 0070                   ?_I2CWait_2 0070  
              ?_pwmInit_ccp2 005A                ?_pwmInit_ccp3 005A                   ?_I2CStop_2 0070  
          __end_of_timerInit 099C            __end_of_timerProc 084D      __end_of_timerEventStart 0810  
           ___aldiv@quotient 0031        __end_of_pwmStart_ccp2 0869        __end_of_pwmStart_ccp3 0877  
                  _PORTFbits 028C           _event_timer_Button 08A5             __CFG_FOSC$INTOSC 0000  
          __size_of_I2CAck_2 0040                  ?_get_millis 0020      __size_of_timerTickClear 0015  
             _event_btn_Stop 09BE            ?_I2C_AS1115_Write 0039            ?_event_btn_Expose 0070  
          __size_of_I2CStart 0005               ??_timerGetTick 0020          ?_event_timer_Button 0070  
          I2C_DAC_Write@data 0039          timerInterruptProc@i 007A    __size_of_buttons_setFuncs 0011  
         ??_I2C_AS1115_Write 003A               __end_of_I2CAck 0C21           ??_event_btn_Expose 0063  
              ?_pwmStop_ccp2 0070                ?_pwmStop_ccp3 0070           get_millis@prev_now 0024  
                ___ftdiv@exp 003A               ??_pwmInit_ccp2 005F               ??_pwmInit_ccp3 005F  
                _CCP2CONbits 029A                  _CCP3CONbits 0313                  ___ftmul@exp 0046  
       ??_event_timer_Button 006F          timerEventStart@time 0020               __end_of___bmul 08C8  
             __end_of___ftge 0B67               __end_of_apMain 0908               __end_of_apInit 04DE  
             __end_of___wmul 093D             timerInit@timeSet 0020               __end_of_millis 0921  
     __end_of_event_btn_Stop 09E2          start_initialization 0026         I2C_AS1115_Write@data 0039  
      __end_of_I2C_DAC_Write 0B2B                I2CInit_2@freq 0035                  I2CAck_2@now 0030  
                __end_of_isr 0024                     ??_I2CAck 0030               ??_pwmStop_ccp2 0020  
             ??_pwmStop_ccp3 0020        __size_of_event_expose 000E                  ??_I2CInit_2 0037  
                ??_I2CSend_2 0038                  ??_I2CWait_2 0030                  ??_I2CStop_2 0038  
       event_btn_Expose@temp 0065               adcRead@channel 0023                     ??___bmul 0021  
                   ??___ftge 0026             ?_timerEventStart 0070          __size_of_get_millis 0029  
                   ??_apMain 0070                     ??_apInit 0041                     ??___wmul 0024  
                   ?_I2CInit 0035                     ?_I2CSend 0070                     ?_I2CWait 0070  
                   ??_millis 0024                     ?_I2CStop 0070        __size_of_buttons_init 000A  
 __end_of_event_anodeCurrent 0330            __size_of_adcTodac 002D            __size_of___awtoft 0022  
          __size_of___ftpack 0065                ??_init_millis 0020              ?_event_btn_Stop 0070  
    __size_of_processButtons 002F                 _event_expose 0877                    ___latbits 0003  
          __size_of___lwtoft 0015                __pcstackBANK0 0020                __pcstackBANK1 00E5  
                I2CInit@freq 0035   pwmInit_ccp2@ccpr1l_ccp1con 0061            __size_of_initPort 0049  
    __size_of_disp_ma_result 00A2             ___lwdiv@dividend 0022                 _buttons_init 082C  
                   ?___aldiv 0026                     ?_adcInit 0070                     ?_adcRead 0020  
                   ?___ftadd 0028                     ?___ftdiv 002C                     ?___ftmul 003C  
                   ?___ftsub 0035                     ?___fttol 004C                     ?___lwdiv 0020  
       __end_of_timerGetTick 17F9                     ?___lwmod 0028                  I2CWait@prev 0034  
                   ?_disp_kv 005A                     _I2CAck_2 0C21           event_btn_Stop@temp 003F  
       __end_of_pwmInit_ccp2 1000         __end_of_pwmInit_ccp3 0778                     _I2CStart 17D2  
              I2CWait_2@prev 0034               _timerTickClear 08C8                    _initTimer 084D  
                  _event_rst 0885             ___lwdiv@quotient 0025             _buttons_setFuncs 0894  
        __end_of_init_millis 082C              ___aldiv@divisor 0026              ___aldiv@counter 002F  
             ___wmul@product 0024                     _LATBbits 010D                     _LATCbits 010E  
                   _LATDbits 010F                     _LATEbits 0110                    clear_ram0 17EC  
                   _PIR1bits 0011                     _PIR4bits 0014                     _SSP1CON2 0216  
                  _timerInit 097A                     _SSP2CON2 021E                    _timerProc 0841  
                   _SSP1STAT 0214                     _SSP2STAT 021C         __end_of_pwmStop_ccp2 17EC  
       __end_of_pwmStop_ccp3 0808             __size_of_I2CInit 003D             __size_of_I2CSend 0009  
           __size_of_I2CWait 0042                   _ADCON0bits 009D                   _ADCON1bits 009E  
           __size_of_I2CStop 0005            ___wmul@multiplier 0020       __end_of_timerTickClear 08DD  
 __end_of_timerInterruptProc 0E63                 ??_get_millis 0028                   ?_initTimer 0070  
                 ?_event_rst 0070                _timer0_millis 00B1        __end_of_event_display 0408  
                 _I2CStart_2 17DC             pwmInit_ccp2@freq 005A             pwmInit_ccp3@freq 005A  
           pwmInit_ccp2@duty 005C             pwmInit_ccp3@duty 005C    __size_of_I2C_AS1115_Write 001F  
  __size_of_event_btn_Expose 0055                   _APFCONbits 011D                   ?_timerInit 0020  
                 ?_timerProc 0070           __end_of_get_millis 0A0B             __size_of___aldiv 0082  
           __size_of_adcInit 000B             __size_of_adcRead 0029             __size_of___ftadd 00F6  
           __size_of___ftdiv 00A9             __size_of___ftmul 00B4             __size_of___ftsub 001E  
           __size_of___fttol 0087             __size_of___lwdiv 0035       __size_of_processButton 0081  
           __size_of___lwmod 002D                     _adcTodac 0A61                     ___awtoft 099C  
                   ___ftpack 0D83                     ___lwtoft 08DD              ?_timerTickClear 0020  
           __size_of_disp_kv 0129               _processButtons 0A8E                  _init_millis 0822  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0027                     __ptext10 09BE  
                   __ptext11 0D2E                     __ptext20 0A34                     __ptext12 0869  
                   __ptext21 0ABD                     __ptext13 085B                     __ptext30 0162  
                   __ptext22 0A0B                     __ptext14 06DD                     __ptext31 0D83  
                   __ptext23 17F2                     __ptext15 0A61                     __ptext40 17E6  
                   __ptext32 0B2B                     __ptext24 0F66                     __ptext16 08B6  
                   __ptext41 0AF2                     __ptext33 0408                     __ptext25 0778  
                   __ptext17 063B                     __ptext50 095B                     __ptext42 17E1  
                   __ptext34 097A                     __ptext26 04DE                     __ptext18 0039  
                   __ptext51 17D7                     __ptext43 17DC                     __ptext35 0808  
                   __ptext27 0592                     __ptext19 08DD                     __ptext60 0B67  
                   __ptext52 17D2                     __ptext44 0819                     __ptext36 084D  
                   __ptext28 099C                     __ptext61 0921                     __ptext53 0810  
                   __ptext45 0CA3                     __ptext37 0CE5                     __ptext29 093D  
                   __ptext62 0EE4                     __ptext54 0C61                     __ptext46 0C21  
                   __ptext38 08C8                     __ptext55 0BE1                     __ptext47 0894  
                   __ptext39 0800                     __ptext64 0DE8                     __ptext56 0908  
                   __ptext48 082C                     __ptext57 0822                     __ptext49 0836  
                   __ptext58 09E2                     __ptext59 0BA4                 _SSP1CON1bits 0215  
               _SSP1CON2bits 0216                 _SSP2CON1bits 021D                 _SSP2CON2bits 021E  
                   _initPort 0CE5                __size_of_main 0007       __size_of_pwmStart_ccp2 000E  
     __size_of_pwmStart_ccp3 000E               _disp_ma_result 063B        __size_of_timerGetTick 0007  
                   int$flags 007E  __size_of_event_timer_Button 0011        __size_of_pwmInit_ccp2 009A  
      __size_of_pwmInit_ccp3 009B             ??_event_btn_Stop 003D                 _SSP1STATbits 0214  
               _SSP2STATbits 021C       __end_of_processButtons 0ABD                   _INTCONbits 000B  
                ??_initTimer 0020                  ??_event_rst 0023                     millis@ms 0024  
        timerTickClear@start 0020                     intlevel1 0000                 _timerGetTick 17F2  
              _processButton 0E63           _event_anodeCurrent 0258                  ?_I2CStart_2 0070  
     __end_of_disp_ma_result 06DD             ___lwmod@dividend 002A            __CFG_CLKOUTEN$OFF 0000  
               _pwmInit_ccp2 0F66                 _pwmInit_ccp3 06DD          ?_event_anodeCurrent 0070  
                 _OSCCONbits 0099        __size_of_pwmStop_ccp2 0006        __size_of_pwmStop_ccp3 0008  
     __size_of_I2C_DAC_Write 0039                  ??_timerInit 0024                  ??_timerProc 006F  
              timerInit@func 0022                timerInit@time 0024     __end_of_buttons_setFuncs 08A5  
            ?_processButtons 0070                _pwmStart_ccp2 085B                _pwmStart_ccp3 0869  
         timerTickClear@time 0022     __size_of_timerEventStart 0008              ___lwmod@divisor 0028  
       ??_event_anodeCurrent 0063              ___lwmod@counter 002D                 ___aldiv@sign 0030  
                 _WDTCONbits 0097               ?_processButton 0067                timerProc@time 006F  
            ?_disp_ma_result 005A                 _pwmStop_ccp2 17E6                 _pwmStop_ccp3 0800  
           _I2C_AS1115_Write 095B             _event_btn_Expose 0D2E  
