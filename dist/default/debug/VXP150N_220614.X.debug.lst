

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Dec 30 15:55:54 2022

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,delta=2
    59                           	psect	text48,local,class=CODE,merge=1,delta=2
    60                           	psect	text49,local,class=CODE,merge=1,delta=2
    61                           	psect	text50,local,class=CODE,merge=1,delta=2
    62                           	psect	text51,local,class=CODE,merge=1,delta=2
    63                           	psect	text52,local,class=CODE,merge=1,delta=2
    64                           	psect	text53,local,class=CODE,merge=1,delta=2
    65                           	psect	text54,local,class=CODE,merge=1,delta=2
    66                           	psect	text55,local,class=CODE,merge=1,delta=2
    67                           	psect	text56,local,class=CODE,merge=1,delta=2
    68                           	psect	text57,local,class=CODE,merge=1,delta=2
    69                           	psect	text58,local,class=CODE,merge=1,delta=2
    70                           	psect	text59,local,class=CODE,merge=1,delta=2
    71                           	psect	text60,local,class=CODE,merge=1,delta=2
    72                           	psect	text61,local,class=CODE,merge=1,delta=2
    73                           	psect	text62,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text64,local,class=CODE,merge=1,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  018C                     	;# 
   149  0190                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020D                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  0219                     	;# 
   192  021A                     	;# 
   193  021B                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  029E                     	;# 
   217  029F                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  0311                     	;# 
   221  0311                     	;# 
   222  0312                     	;# 
   223  0313                     	;# 
   224  0314                     	;# 
   225  0315                     	;# 
   226  0315                     	;# 
   227  0316                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  031C                     	;# 
   233  031C                     	;# 
   234  031D                     	;# 
   235  031E                     	;# 
   236  038C                     	;# 
   237  038D                     	;# 
   238  0394                     	;# 
   239  0395                     	;# 
   240  0396                     	;# 
   241  040C                     	;# 
   242  040D                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  048D                     	;# 
   250  0491                     	;# 
   251  0492                     	;# 
   252  0493                     	;# 
   253  0493                     	;# 
   254  0494                     	;# 
   255  0495                     	;# 
   256  0496                     	;# 
   257  0497                     	;# 
   258  0791                     	;# 
   259  0792                     	;# 
   260  0793                     	;# 
   261  0794                     	;# 
   262  0795                     	;# 
   263  0798                     	;# 
   264  0799                     	;# 
   265  079A                     	;# 
   266  079B                     	;# 
   267  079C                     	;# 
   268  079D                     	;# 
   269  07A0                     	;# 
   270  07A1                     	;# 
   271  07A2                     	;# 
   272  07A3                     	;# 
   273  07A4                     	;# 
   274  07A5                     	;# 
   275  07A6                     	;# 
   276  07A7                     	;# 
   277  07A8                     	;# 
   278  07A9                     	;# 
   279  07AA                     	;# 
   280  07AB                     	;# 
   281  07AC                     	;# 
   282  07AD                     	;# 
   283  07AE                     	;# 
   284  07AF                     	;# 
   285  07B0                     	;# 
   286  07B1                     	;# 
   287  07B2                     	;# 
   288  07B3                     	;# 
   289  07B4                     	;# 
   290  07B5                     	;# 
   291  07B6                     	;# 
   292  07B7                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0110                     	;# 
   361  0111                     	;# 
   362  0112                     	;# 
   363  0113                     	;# 
   364  0114                     	;# 
   365  0115                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  0118                     	;# 
   369  0119                     	;# 
   370  011A                     	;# 
   371  011B                     	;# 
   372  011D                     	;# 
   373  011E                     	;# 
   374  011F                     	;# 
   375  018C                     	;# 
   376  0190                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0193                     	;# 
   383  0194                     	;# 
   384  0195                     	;# 
   385  0196                     	;# 
   386  0199                     	;# 
   387  0199                     	;# 
   388  019A                     	;# 
   389  019A                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019C                     	;# 
   395  019C                     	;# 
   396  019D                     	;# 
   397  019D                     	;# 
   398  019E                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  019F                     	;# 
   402  020D                     	;# 
   403  0211                     	;# 
   404  0211                     	;# 
   405  0212                     	;# 
   406  0212                     	;# 
   407  0213                     	;# 
   408  0213                     	;# 
   409  0214                     	;# 
   410  0214                     	;# 
   411  0215                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0216                     	;# 
   415  0216                     	;# 
   416  0217                     	;# 
   417  0217                     	;# 
   418  0219                     	;# 
   419  021A                     	;# 
   420  021B                     	;# 
   421  021C                     	;# 
   422  021D                     	;# 
   423  021E                     	;# 
   424  021F                     	;# 
   425  028C                     	;# 
   426  028D                     	;# 
   427  0291                     	;# 
   428  0291                     	;# 
   429  0292                     	;# 
   430  0293                     	;# 
   431  0294                     	;# 
   432  0295                     	;# 
   433  0295                     	;# 
   434  0296                     	;# 
   435  0298                     	;# 
   436  0298                     	;# 
   437  0299                     	;# 
   438  029A                     	;# 
   439  029B                     	;# 
   440  029C                     	;# 
   441  029C                     	;# 
   442  029D                     	;# 
   443  029E                     	;# 
   444  029F                     	;# 
   445  030C                     	;# 
   446  030D                     	;# 
   447  0311                     	;# 
   448  0311                     	;# 
   449  0312                     	;# 
   450  0313                     	;# 
   451  0314                     	;# 
   452  0315                     	;# 
   453  0315                     	;# 
   454  0316                     	;# 
   455  0318                     	;# 
   456  0318                     	;# 
   457  0319                     	;# 
   458  031A                     	;# 
   459  031C                     	;# 
   460  031C                     	;# 
   461  031D                     	;# 
   462  031E                     	;# 
   463  038C                     	;# 
   464  038D                     	;# 
   465  0394                     	;# 
   466  0395                     	;# 
   467  0396                     	;# 
   468  040C                     	;# 
   469  040D                     	;# 
   470  0415                     	;# 
   471  0416                     	;# 
   472  0417                     	;# 
   473  041C                     	;# 
   474  041D                     	;# 
   475  041E                     	;# 
   476  048D                     	;# 
   477  0491                     	;# 
   478  0492                     	;# 
   479  0493                     	;# 
   480  0493                     	;# 
   481  0494                     	;# 
   482  0495                     	;# 
   483  0496                     	;# 
   484  0497                     	;# 
   485  0791                     	;# 
   486  0792                     	;# 
   487  0793                     	;# 
   488  0794                     	;# 
   489  0795                     	;# 
   490  0798                     	;# 
   491  0799                     	;# 
   492  079A                     	;# 
   493  079B                     	;# 
   494  079C                     	;# 
   495  079D                     	;# 
   496  07A0                     	;# 
   497  07A1                     	;# 
   498  07A2                     	;# 
   499  07A3                     	;# 
   500  07A4                     	;# 
   501  07A5                     	;# 
   502  07A6                     	;# 
   503  07A7                     	;# 
   504  07A8                     	;# 
   505  07A9                     	;# 
   506  07AA                     	;# 
   507  07AB                     	;# 
   508  07AC                     	;# 
   509  07AD                     	;# 
   510  07AE                     	;# 
   511  07AF                     	;# 
   512  07B0                     	;# 
   513  07B1                     	;# 
   514  07B2                     	;# 
   515  07B3                     	;# 
   516  07B4                     	;# 
   517  07B5                     	;# 
   518  07B6                     	;# 
   519  07B7                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  000D                     	;# 
   545  000E                     	;# 
   546  000F                     	;# 
   547  0010                     	;# 
   548  0011                     	;# 
   549  0012                     	;# 
   550  0013                     	;# 
   551  0014                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  008F                     	;# 
   567  0090                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0093                     	;# 
   571  0094                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  010C                     	;# 
   584  010D                     	;# 
   585  010E                     	;# 
   586  010F                     	;# 
   587  0110                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  011F                     	;# 
   602  018C                     	;# 
   603  0190                     	;# 
   604  0191                     	;# 
   605  0191                     	;# 
   606  0192                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0194                     	;# 
   611  0195                     	;# 
   612  0196                     	;# 
   613  0199                     	;# 
   614  0199                     	;# 
   615  019A                     	;# 
   616  019A                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019C                     	;# 
   622  019C                     	;# 
   623  019D                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  020D                     	;# 
   630  0211                     	;# 
   631  0211                     	;# 
   632  0212                     	;# 
   633  0212                     	;# 
   634  0213                     	;# 
   635  0213                     	;# 
   636  0214                     	;# 
   637  0214                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0216                     	;# 
   643  0217                     	;# 
   644  0217                     	;# 
   645  0219                     	;# 
   646  021A                     	;# 
   647  021B                     	;# 
   648  021C                     	;# 
   649  021D                     	;# 
   650  021E                     	;# 
   651  021F                     	;# 
   652  028C                     	;# 
   653  028D                     	;# 
   654  0291                     	;# 
   655  0291                     	;# 
   656  0292                     	;# 
   657  0293                     	;# 
   658  0294                     	;# 
   659  0295                     	;# 
   660  0295                     	;# 
   661  0296                     	;# 
   662  0298                     	;# 
   663  0298                     	;# 
   664  0299                     	;# 
   665  029A                     	;# 
   666  029B                     	;# 
   667  029C                     	;# 
   668  029C                     	;# 
   669  029D                     	;# 
   670  029E                     	;# 
   671  029F                     	;# 
   672  030C                     	;# 
   673  030D                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0314                     	;# 
   679  0315                     	;# 
   680  0315                     	;# 
   681  0316                     	;# 
   682  0318                     	;# 
   683  0318                     	;# 
   684  0319                     	;# 
   685  031A                     	;# 
   686  031C                     	;# 
   687  031C                     	;# 
   688  031D                     	;# 
   689  031E                     	;# 
   690  038C                     	;# 
   691  038D                     	;# 
   692  0394                     	;# 
   693  0395                     	;# 
   694  0396                     	;# 
   695  040C                     	;# 
   696  040D                     	;# 
   697  0415                     	;# 
   698  0416                     	;# 
   699  0417                     	;# 
   700  041C                     	;# 
   701  041D                     	;# 
   702  041E                     	;# 
   703  048D                     	;# 
   704  0491                     	;# 
   705  0492                     	;# 
   706  0493                     	;# 
   707  0493                     	;# 
   708  0494                     	;# 
   709  0495                     	;# 
   710  0496                     	;# 
   711  0497                     	;# 
   712  0791                     	;# 
   713  0792                     	;# 
   714  0793                     	;# 
   715  0794                     	;# 
   716  0795                     	;# 
   717  0798                     	;# 
   718  0799                     	;# 
   719  079A                     	;# 
   720  079B                     	;# 
   721  079C                     	;# 
   722  079D                     	;# 
   723  07A0                     	;# 
   724  07A1                     	;# 
   725  07A2                     	;# 
   726  07A3                     	;# 
   727  07A4                     	;# 
   728  07A5                     	;# 
   729  07A6                     	;# 
   730  07A7                     	;# 
   731  07A8                     	;# 
   732  07A9                     	;# 
   733  07AA                     	;# 
   734  07AB                     	;# 
   735  07AC                     	;# 
   736  07AD                     	;# 
   737  07AE                     	;# 
   738  07AF                     	;# 
   739  07B0                     	;# 
   740  07B1                     	;# 
   741  07B2                     	;# 
   742  07B3                     	;# 
   743  07B4                     	;# 
   744  07B5                     	;# 
   745  07B6                     	;# 
   746  07B7                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001E                     	;# 
   789  001F                     	;# 
   790  008C                     	;# 
   791  008D                     	;# 
   792  008E                     	;# 
   793  008F                     	;# 
   794  0090                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0093                     	;# 
   798  0094                     	;# 
   799  0095                     	;# 
   800  0096                     	;# 
   801  0097                     	;# 
   802  0098                     	;# 
   803  0099                     	;# 
   804  009A                     	;# 
   805  009B                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  010C                     	;# 
   811  010D                     	;# 
   812  010E                     	;# 
   813  010F                     	;# 
   814  0110                     	;# 
   815  0111                     	;# 
   816  0112                     	;# 
   817  0113                     	;# 
   818  0114                     	;# 
   819  0115                     	;# 
   820  0116                     	;# 
   821  0117                     	;# 
   822  0118                     	;# 
   823  0119                     	;# 
   824  011A                     	;# 
   825  011B                     	;# 
   826  011D                     	;# 
   827  011E                     	;# 
   828  011F                     	;# 
   829  018C                     	;# 
   830  0190                     	;# 
   831  0191                     	;# 
   832  0191                     	;# 
   833  0192                     	;# 
   834  0193                     	;# 
   835  0193                     	;# 
   836  0193                     	;# 
   837  0194                     	;# 
   838  0195                     	;# 
   839  0196                     	;# 
   840  0199                     	;# 
   841  0199                     	;# 
   842  019A                     	;# 
   843  019A                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019B                     	;# 
   848  019C                     	;# 
   849  019C                     	;# 
   850  019D                     	;# 
   851  019D                     	;# 
   852  019E                     	;# 
   853  019E                     	;# 
   854  019F                     	;# 
   855  019F                     	;# 
   856  020D                     	;# 
   857  0211                     	;# 
   858  0211                     	;# 
   859  0212                     	;# 
   860  0212                     	;# 
   861  0213                     	;# 
   862  0213                     	;# 
   863  0214                     	;# 
   864  0214                     	;# 
   865  0215                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0216                     	;# 
   869  0216                     	;# 
   870  0217                     	;# 
   871  0217                     	;# 
   872  0219                     	;# 
   873  021A                     	;# 
   874  021B                     	;# 
   875  021C                     	;# 
   876  021D                     	;# 
   877  021E                     	;# 
   878  021F                     	;# 
   879  028C                     	;# 
   880  028D                     	;# 
   881  0291                     	;# 
   882  0291                     	;# 
   883  0292                     	;# 
   884  0293                     	;# 
   885  0294                     	;# 
   886  0295                     	;# 
   887  0295                     	;# 
   888  0296                     	;# 
   889  0298                     	;# 
   890  0298                     	;# 
   891  0299                     	;# 
   892  029A                     	;# 
   893  029B                     	;# 
   894  029C                     	;# 
   895  029C                     	;# 
   896  029D                     	;# 
   897  029E                     	;# 
   898  029F                     	;# 
   899  030C                     	;# 
   900  030D                     	;# 
   901  0311                     	;# 
   902  0311                     	;# 
   903  0312                     	;# 
   904  0313                     	;# 
   905  0314                     	;# 
   906  0315                     	;# 
   907  0315                     	;# 
   908  0316                     	;# 
   909  0318                     	;# 
   910  0318                     	;# 
   911  0319                     	;# 
   912  031A                     	;# 
   913  031C                     	;# 
   914  031C                     	;# 
   915  031D                     	;# 
   916  031E                     	;# 
   917  038C                     	;# 
   918  038D                     	;# 
   919  0394                     	;# 
   920  0395                     	;# 
   921  0396                     	;# 
   922  040C                     	;# 
   923  040D                     	;# 
   924  0415                     	;# 
   925  0416                     	;# 
   926  0417                     	;# 
   927  041C                     	;# 
   928  041D                     	;# 
   929  041E                     	;# 
   930  048D                     	;# 
   931  0491                     	;# 
   932  0492                     	;# 
   933  0493                     	;# 
   934  0493                     	;# 
   935  0494                     	;# 
   936  0495                     	;# 
   937  0496                     	;# 
   938  0497                     	;# 
   939  0791                     	;# 
   940  0792                     	;# 
   941  0793                     	;# 
   942  0794                     	;# 
   943  0795                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  079B                     	;# 
   948  079C                     	;# 
   949  079D                     	;# 
   950  07A0                     	;# 
   951  07A1                     	;# 
   952  07A2                     	;# 
   953  07A3                     	;# 
   954  07A4                     	;# 
   955  07A5                     	;# 
   956  07A6                     	;# 
   957  07A7                     	;# 
   958  07A8                     	;# 
   959  07A9                     	;# 
   960  07AA                     	;# 
   961  07AB                     	;# 
   962  07AC                     	;# 
   963  07AD                     	;# 
   964  07AE                     	;# 
   965  07AF                     	;# 
   966  07B0                     	;# 
   967  07B1                     	;# 
   968  07B2                     	;# 
   969  07B3                     	;# 
   970  07B4                     	;# 
   971  07B5                     	;# 
   972  07B6                     	;# 
   973  07B7                     	;# 
   974  0FE4                     	;# 
   975  0FE5                     	;# 
   976  0FE6                     	;# 
   977  0FE7                     	;# 
   978  0FE8                     	;# 
   979  0FE9                     	;# 
   980  0FEA                     	;# 
   981  0FEB                     	;# 
   982  0FED                     	;# 
   983  0FEE                     	;# 
   984  0FEF                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0008                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  000F                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0016                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001B                     	;# 
  1014  001C                     	;# 
  1015  001E                     	;# 
  1016  001F                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  008F                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0094                     	;# 
  1026  0095                     	;# 
  1027  0096                     	;# 
  1028  0097                     	;# 
  1029  0098                     	;# 
  1030  0099                     	;# 
  1031  009A                     	;# 
  1032  009B                     	;# 
  1033  009B                     	;# 
  1034  009C                     	;# 
  1035  009D                     	;# 
  1036  009E                     	;# 
  1037  010C                     	;# 
  1038  010D                     	;# 
  1039  010E                     	;# 
  1040  010F                     	;# 
  1041  0110                     	;# 
  1042  0111                     	;# 
  1043  0112                     	;# 
  1044  0113                     	;# 
  1045  0114                     	;# 
  1046  0115                     	;# 
  1047  0116                     	;# 
  1048  0117                     	;# 
  1049  0118                     	;# 
  1050  0119                     	;# 
  1051  011A                     	;# 
  1052  011B                     	;# 
  1053  011D                     	;# 
  1054  011E                     	;# 
  1055  011F                     	;# 
  1056  018C                     	;# 
  1057  0190                     	;# 
  1058  0191                     	;# 
  1059  0191                     	;# 
  1060  0192                     	;# 
  1061  0193                     	;# 
  1062  0193                     	;# 
  1063  0193                     	;# 
  1064  0194                     	;# 
  1065  0195                     	;# 
  1066  0196                     	;# 
  1067  0199                     	;# 
  1068  0199                     	;# 
  1069  019A                     	;# 
  1070  019A                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019C                     	;# 
  1076  019C                     	;# 
  1077  019D                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  020D                     	;# 
  1084  0211                     	;# 
  1085  0211                     	;# 
  1086  0212                     	;# 
  1087  0212                     	;# 
  1088  0213                     	;# 
  1089  0213                     	;# 
  1090  0214                     	;# 
  1091  0214                     	;# 
  1092  0215                     	;# 
  1093  0215                     	;# 
  1094  0215                     	;# 
  1095  0216                     	;# 
  1096  0216                     	;# 
  1097  0217                     	;# 
  1098  0217                     	;# 
  1099  0219                     	;# 
  1100  021A                     	;# 
  1101  021B                     	;# 
  1102  021C                     	;# 
  1103  021D                     	;# 
  1104  021E                     	;# 
  1105  021F                     	;# 
  1106  028C                     	;# 
  1107  028D                     	;# 
  1108  0291                     	;# 
  1109  0291                     	;# 
  1110  0292                     	;# 
  1111  0293                     	;# 
  1112  0294                     	;# 
  1113  0295                     	;# 
  1114  0295                     	;# 
  1115  0296                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  029B                     	;# 
  1121  029C                     	;# 
  1122  029C                     	;# 
  1123  029D                     	;# 
  1124  029E                     	;# 
  1125  029F                     	;# 
  1126  030C                     	;# 
  1127  030D                     	;# 
  1128  0311                     	;# 
  1129  0311                     	;# 
  1130  0312                     	;# 
  1131  0313                     	;# 
  1132  0314                     	;# 
  1133  0315                     	;# 
  1134  0315                     	;# 
  1135  0316                     	;# 
  1136  0318                     	;# 
  1137  0318                     	;# 
  1138  0319                     	;# 
  1139  031A                     	;# 
  1140  031C                     	;# 
  1141  031C                     	;# 
  1142  031D                     	;# 
  1143  031E                     	;# 
  1144  038C                     	;# 
  1145  038D                     	;# 
  1146  0394                     	;# 
  1147  0395                     	;# 
  1148  0396                     	;# 
  1149  040C                     	;# 
  1150  040D                     	;# 
  1151  0415                     	;# 
  1152  0416                     	;# 
  1153  0417                     	;# 
  1154  041C                     	;# 
  1155  041D                     	;# 
  1156  041E                     	;# 
  1157  048D                     	;# 
  1158  0491                     	;# 
  1159  0492                     	;# 
  1160  0493                     	;# 
  1161  0493                     	;# 
  1162  0494                     	;# 
  1163  0495                     	;# 
  1164  0496                     	;# 
  1165  0497                     	;# 
  1166  0791                     	;# 
  1167  0792                     	;# 
  1168  0793                     	;# 
  1169  0794                     	;# 
  1170  0795                     	;# 
  1171  0798                     	;# 
  1172  0799                     	;# 
  1173  079A                     	;# 
  1174  079B                     	;# 
  1175  079C                     	;# 
  1176  079D                     	;# 
  1177  07A0                     	;# 
  1178  07A1                     	;# 
  1179  07A2                     	;# 
  1180  07A3                     	;# 
  1181  07A4                     	;# 
  1182  07A5                     	;# 
  1183  07A6                     	;# 
  1184  07A7                     	;# 
  1185  07A8                     	;# 
  1186  07A9                     	;# 
  1187  07AA                     	;# 
  1188  07AB                     	;# 
  1189  07AC                     	;# 
  1190  07AD                     	;# 
  1191  07AE                     	;# 
  1192  07AF                     	;# 
  1193  07B0                     	;# 
  1194  07B1                     	;# 
  1195  07B2                     	;# 
  1196  07B3                     	;# 
  1197  07B4                     	;# 
  1198  07B5                     	;# 
  1199  07B6                     	;# 
  1200  07B7                     	;# 
  1201  0FE4                     	;# 
  1202  0FE5                     	;# 
  1203  0FE6                     	;# 
  1204  0FE7                     	;# 
  1205  0FE8                     	;# 
  1206  0FE9                     	;# 
  1207  0FEA                     	;# 
  1208  0FEB                     	;# 
  1209  0FED                     	;# 
  1210  0FEE                     	;# 
  1211  0FEF                     	;# 
  1212  0000                     	;# 
  1213  0001                     	;# 
  1214  0002                     	;# 
  1215  0003                     	;# 
  1216  0004                     	;# 
  1217  0005                     	;# 
  1218  0006                     	;# 
  1219  0007                     	;# 
  1220  0008                     	;# 
  1221  0009                     	;# 
  1222  000A                     	;# 
  1223  000B                     	;# 
  1224  000C                     	;# 
  1225  000D                     	;# 
  1226  000E                     	;# 
  1227  000F                     	;# 
  1228  0010                     	;# 
  1229  0011                     	;# 
  1230  0012                     	;# 
  1231  0013                     	;# 
  1232  0014                     	;# 
  1233  0015                     	;# 
  1234  0016                     	;# 
  1235  0016                     	;# 
  1236  0017                     	;# 
  1237  0018                     	;# 
  1238  0019                     	;# 
  1239  001A                     	;# 
  1240  001B                     	;# 
  1241  001C                     	;# 
  1242  001E                     	;# 
  1243  001F                     	;# 
  1244  008C                     	;# 
  1245  008D                     	;# 
  1246  008E                     	;# 
  1247  008F                     	;# 
  1248  0090                     	;# 
  1249  0091                     	;# 
  1250  0092                     	;# 
  1251  0093                     	;# 
  1252  0094                     	;# 
  1253  0095                     	;# 
  1254  0096                     	;# 
  1255  0097                     	;# 
  1256  0098                     	;# 
  1257  0099                     	;# 
  1258  009A                     	;# 
  1259  009B                     	;# 
  1260  009B                     	;# 
  1261  009C                     	;# 
  1262  009D                     	;# 
  1263  009E                     	;# 
  1264  010C                     	;# 
  1265  010D                     	;# 
  1266  010E                     	;# 
  1267  010F                     	;# 
  1268  0110                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  011A                     	;# 
  1279  011B                     	;# 
  1280  011D                     	;# 
  1281  011E                     	;# 
  1282  011F                     	;# 
  1283  018C                     	;# 
  1284  0190                     	;# 
  1285  0191                     	;# 
  1286  0191                     	;# 
  1287  0192                     	;# 
  1288  0193                     	;# 
  1289  0193                     	;# 
  1290  0193                     	;# 
  1291  0194                     	;# 
  1292  0195                     	;# 
  1293  0196                     	;# 
  1294  0199                     	;# 
  1295  0199                     	;# 
  1296  019A                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  019C                     	;# 
  1304  019D                     	;# 
  1305  019D                     	;# 
  1306  019E                     	;# 
  1307  019E                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  020D                     	;# 
  1311  0211                     	;# 
  1312  0211                     	;# 
  1313  0212                     	;# 
  1314  0212                     	;# 
  1315  0213                     	;# 
  1316  0213                     	;# 
  1317  0214                     	;# 
  1318  0214                     	;# 
  1319  0215                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0216                     	;# 
  1323  0216                     	;# 
  1324  0217                     	;# 
  1325  0217                     	;# 
  1326  0219                     	;# 
  1327  021A                     	;# 
  1328  021B                     	;# 
  1329  021C                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  0291                     	;# 
  1336  0291                     	;# 
  1337  0292                     	;# 
  1338  0293                     	;# 
  1339  0294                     	;# 
  1340  0295                     	;# 
  1341  0295                     	;# 
  1342  0296                     	;# 
  1343  0298                     	;# 
  1344  0298                     	;# 
  1345  0299                     	;# 
  1346  029A                     	;# 
  1347  029B                     	;# 
  1348  029C                     	;# 
  1349  029C                     	;# 
  1350  029D                     	;# 
  1351  029E                     	;# 
  1352  029F                     	;# 
  1353  030C                     	;# 
  1354  030D                     	;# 
  1355  0311                     	;# 
  1356  0311                     	;# 
  1357  0312                     	;# 
  1358  0313                     	;# 
  1359  0314                     	;# 
  1360  0315                     	;# 
  1361  0315                     	;# 
  1362  0316                     	;# 
  1363  0318                     	;# 
  1364  0318                     	;# 
  1365  0319                     	;# 
  1366  031A                     	;# 
  1367  031C                     	;# 
  1368  031C                     	;# 
  1369  031D                     	;# 
  1370  031E                     	;# 
  1371  038C                     	;# 
  1372  038D                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  040C                     	;# 
  1377  040D                     	;# 
  1378  0415                     	;# 
  1379  0416                     	;# 
  1380  0417                     	;# 
  1381  041C                     	;# 
  1382  041D                     	;# 
  1383  041E                     	;# 
  1384  048D                     	;# 
  1385  0491                     	;# 
  1386  0492                     	;# 
  1387  0493                     	;# 
  1388  0493                     	;# 
  1389  0494                     	;# 
  1390  0495                     	;# 
  1391  0496                     	;# 
  1392  0497                     	;# 
  1393  0791                     	;# 
  1394  0792                     	;# 
  1395  0793                     	;# 
  1396  0794                     	;# 
  1397  0795                     	;# 
  1398  0798                     	;# 
  1399  0799                     	;# 
  1400  079A                     	;# 
  1401  079B                     	;# 
  1402  079C                     	;# 
  1403  079D                     	;# 
  1404  07A0                     	;# 
  1405  07A1                     	;# 
  1406  07A2                     	;# 
  1407  07A3                     	;# 
  1408  07A4                     	;# 
  1409  07A5                     	;# 
  1410  07A6                     	;# 
  1411  07A7                     	;# 
  1412  07A8                     	;# 
  1413  07A9                     	;# 
  1414  07AA                     	;# 
  1415  07AB                     	;# 
  1416  07AC                     	;# 
  1417  07AD                     	;# 
  1418  07AE                     	;# 
  1419  07AF                     	;# 
  1420  07B0                     	;# 
  1421  07B1                     	;# 
  1422  07B2                     	;# 
  1423  07B3                     	;# 
  1424  07B4                     	;# 
  1425  07B5                     	;# 
  1426  07B6                     	;# 
  1427  07B7                     	;# 
  1428  0FE4                     	;# 
  1429  0FE5                     	;# 
  1430  0FE6                     	;# 
  1431  0FE7                     	;# 
  1432  0FE8                     	;# 
  1433  0FE9                     	;# 
  1434  0FEA                     	;# 
  1435  0FEB                     	;# 
  1436  0FED                     	;# 
  1437  0FEE                     	;# 
  1438  0FEF                     	;# 
  1439  0000                     	;# 
  1440  0001                     	;# 
  1441  0002                     	;# 
  1442  0003                     	;# 
  1443  0004                     	;# 
  1444  0005                     	;# 
  1445  0006                     	;# 
  1446  0007                     	;# 
  1447  0008                     	;# 
  1448  0009                     	;# 
  1449  000A                     	;# 
  1450  000B                     	;# 
  1451  000C                     	;# 
  1452  000D                     	;# 
  1453  000E                     	;# 
  1454  000F                     	;# 
  1455  0010                     	;# 
  1456  0011                     	;# 
  1457  0012                     	;# 
  1458  0013                     	;# 
  1459  0014                     	;# 
  1460  0015                     	;# 
  1461  0016                     	;# 
  1462  0016                     	;# 
  1463  0017                     	;# 
  1464  0018                     	;# 
  1465  0019                     	;# 
  1466  001A                     	;# 
  1467  001B                     	;# 
  1468  001C                     	;# 
  1469  001E                     	;# 
  1470  001F                     	;# 
  1471  008C                     	;# 
  1472  008D                     	;# 
  1473  008E                     	;# 
  1474  008F                     	;# 
  1475  0090                     	;# 
  1476  0091                     	;# 
  1477  0092                     	;# 
  1478  0093                     	;# 
  1479  0094                     	;# 
  1480  0095                     	;# 
  1481  0096                     	;# 
  1482  0097                     	;# 
  1483  0098                     	;# 
  1484  0099                     	;# 
  1485  009A                     	;# 
  1486  009B                     	;# 
  1487  009B                     	;# 
  1488  009C                     	;# 
  1489  009D                     	;# 
  1490  009E                     	;# 
  1491  010C                     	;# 
  1492  010D                     	;# 
  1493  010E                     	;# 
  1494  010F                     	;# 
  1495  0110                     	;# 
  1496  0111                     	;# 
  1497  0112                     	;# 
  1498  0113                     	;# 
  1499  0114                     	;# 
  1500  0115                     	;# 
  1501  0116                     	;# 
  1502  0117                     	;# 
  1503  0118                     	;# 
  1504  0119                     	;# 
  1505  011A                     	;# 
  1506  011B                     	;# 
  1507  011D                     	;# 
  1508  011E                     	;# 
  1509  011F                     	;# 
  1510  018C                     	;# 
  1511  0190                     	;# 
  1512  0191                     	;# 
  1513  0191                     	;# 
  1514  0192                     	;# 
  1515  0193                     	;# 
  1516  0193                     	;# 
  1517  0193                     	;# 
  1518  0194                     	;# 
  1519  0195                     	;# 
  1520  0196                     	;# 
  1521  0199                     	;# 
  1522  0199                     	;# 
  1523  019A                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019C                     	;# 
  1530  019C                     	;# 
  1531  019D                     	;# 
  1532  019D                     	;# 
  1533  019E                     	;# 
  1534  019E                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  020D                     	;# 
  1538  0211                     	;# 
  1539  0211                     	;# 
  1540  0212                     	;# 
  1541  0212                     	;# 
  1542  0213                     	;# 
  1543  0213                     	;# 
  1544  0214                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0216                     	;# 
  1550  0216                     	;# 
  1551  0217                     	;# 
  1552  0217                     	;# 
  1553  0219                     	;# 
  1554  021A                     	;# 
  1555  021B                     	;# 
  1556  021C                     	;# 
  1557  021D                     	;# 
  1558  021E                     	;# 
  1559  021F                     	;# 
  1560  028C                     	;# 
  1561  028D                     	;# 
  1562  0291                     	;# 
  1563  0291                     	;# 
  1564  0292                     	;# 
  1565  0293                     	;# 
  1566  0294                     	;# 
  1567  0295                     	;# 
  1568  0295                     	;# 
  1569  0296                     	;# 
  1570  0298                     	;# 
  1571  0298                     	;# 
  1572  0299                     	;# 
  1573  029A                     	;# 
  1574  029B                     	;# 
  1575  029C                     	;# 
  1576  029C                     	;# 
  1577  029D                     	;# 
  1578  029E                     	;# 
  1579  029F                     	;# 
  1580  030C                     	;# 
  1581  030D                     	;# 
  1582  0311                     	;# 
  1583  0311                     	;# 
  1584  0312                     	;# 
  1585  0313                     	;# 
  1586  0314                     	;# 
  1587  0315                     	;# 
  1588  0315                     	;# 
  1589  0316                     	;# 
  1590  0318                     	;# 
  1591  0318                     	;# 
  1592  0319                     	;# 
  1593  031A                     	;# 
  1594  031C                     	;# 
  1595  031C                     	;# 
  1596  031D                     	;# 
  1597  031E                     	;# 
  1598  038C                     	;# 
  1599  038D                     	;# 
  1600  0394                     	;# 
  1601  0395                     	;# 
  1602  0396                     	;# 
  1603  040C                     	;# 
  1604  040D                     	;# 
  1605  0415                     	;# 
  1606  0416                     	;# 
  1607  0417                     	;# 
  1608  041C                     	;# 
  1609  041D                     	;# 
  1610  041E                     	;# 
  1611  048D                     	;# 
  1612  0491                     	;# 
  1613  0492                     	;# 
  1614  0493                     	;# 
  1615  0493                     	;# 
  1616  0494                     	;# 
  1617  0495                     	;# 
  1618  0496                     	;# 
  1619  0497                     	;# 
  1620  0791                     	;# 
  1621  0792                     	;# 
  1622  0793                     	;# 
  1623  0794                     	;# 
  1624  0795                     	;# 
  1625  0798                     	;# 
  1626  0799                     	;# 
  1627  079A                     	;# 
  1628  079B                     	;# 
  1629  079C                     	;# 
  1630  079D                     	;# 
  1631  07A0                     	;# 
  1632  07A1                     	;# 
  1633  07A2                     	;# 
  1634  07A3                     	;# 
  1635  07A4                     	;# 
  1636  07A5                     	;# 
  1637  07A6                     	;# 
  1638  07A7                     	;# 
  1639  07A8                     	;# 
  1640  07A9                     	;# 
  1641  07AA                     	;# 
  1642  07AB                     	;# 
  1643  07AC                     	;# 
  1644  07AD                     	;# 
  1645  07AE                     	;# 
  1646  07AF                     	;# 
  1647  07B0                     	;# 
  1648  07B1                     	;# 
  1649  07B2                     	;# 
  1650  07B3                     	;# 
  1651  07B4                     	;# 
  1652  07B5                     	;# 
  1653  07B6                     	;# 
  1654  07B7                     	;# 
  1655  0FE4                     	;# 
  1656  0FE5                     	;# 
  1657  0FE6                     	;# 
  1658  0FE7                     	;# 
  1659  0FE8                     	;# 
  1660  0FE9                     	;# 
  1661  0FEA                     	;# 
  1662  0FEB                     	;# 
  1663  0FED                     	;# 
  1664  0FEE                     	;# 
  1665  0FEF                     	;# 
  1666  0000                     	;# 
  1667  0001                     	;# 
  1668  0002                     	;# 
  1669  0003                     	;# 
  1670  0004                     	;# 
  1671  0005                     	;# 
  1672  0006                     	;# 
  1673  0007                     	;# 
  1674  0008                     	;# 
  1675  0009                     	;# 
  1676  000A                     	;# 
  1677  000B                     	;# 
  1678  000C                     	;# 
  1679  000D                     	;# 
  1680  000E                     	;# 
  1681  000F                     	;# 
  1682  0010                     	;# 
  1683  0011                     	;# 
  1684  0012                     	;# 
  1685  0013                     	;# 
  1686  0014                     	;# 
  1687  0015                     	;# 
  1688  0016                     	;# 
  1689  0016                     	;# 
  1690  0017                     	;# 
  1691  0018                     	;# 
  1692  0019                     	;# 
  1693  001A                     	;# 
  1694  001B                     	;# 
  1695  001C                     	;# 
  1696  001E                     	;# 
  1697  001F                     	;# 
  1698  008C                     	;# 
  1699  008D                     	;# 
  1700  008E                     	;# 
  1701  008F                     	;# 
  1702  0090                     	;# 
  1703  0091                     	;# 
  1704  0092                     	;# 
  1705  0093                     	;# 
  1706  0094                     	;# 
  1707  0095                     	;# 
  1708  0096                     	;# 
  1709  0097                     	;# 
  1710  0098                     	;# 
  1711  0099                     	;# 
  1712  009A                     	;# 
  1713  009B                     	;# 
  1714  009B                     	;# 
  1715  009C                     	;# 
  1716  009D                     	;# 
  1717  009E                     	;# 
  1718  010C                     	;# 
  1719  010D                     	;# 
  1720  010E                     	;# 
  1721  010F                     	;# 
  1722  0110                     	;# 
  1723  0111                     	;# 
  1724  0112                     	;# 
  1725  0113                     	;# 
  1726  0114                     	;# 
  1727  0115                     	;# 
  1728  0116                     	;# 
  1729  0117                     	;# 
  1730  0118                     	;# 
  1731  0119                     	;# 
  1732  011A                     	;# 
  1733  011B                     	;# 
  1734  011D                     	;# 
  1735  011E                     	;# 
  1736  011F                     	;# 
  1737  018C                     	;# 
  1738  0190                     	;# 
  1739  0191                     	;# 
  1740  0191                     	;# 
  1741  0192                     	;# 
  1742  0193                     	;# 
  1743  0193                     	;# 
  1744  0193                     	;# 
  1745  0194                     	;# 
  1746  0195                     	;# 
  1747  0196                     	;# 
  1748  0199                     	;# 
  1749  0199                     	;# 
  1750  019A                     	;# 
  1751  019A                     	;# 
  1752  019B                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  019C                     	;# 
  1758  019D                     	;# 
  1759  019D                     	;# 
  1760  019E                     	;# 
  1761  019E                     	;# 
  1762  019F                     	;# 
  1763  019F                     	;# 
  1764  020D                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  0212                     	;# 
  1768  0212                     	;# 
  1769  0213                     	;# 
  1770  0213                     	;# 
  1771  0214                     	;# 
  1772  0214                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0219                     	;# 
  1781  021A                     	;# 
  1782  021B                     	;# 
  1783  021C                     	;# 
  1784  021D                     	;# 
  1785  021E                     	;# 
  1786  021F                     	;# 
  1787  028C                     	;# 
  1788  028D                     	;# 
  1789  0291                     	;# 
  1790  0291                     	;# 
  1791  0292                     	;# 
  1792  0293                     	;# 
  1793  0294                     	;# 
  1794  0295                     	;# 
  1795  0295                     	;# 
  1796  0296                     	;# 
  1797  0298                     	;# 
  1798  0298                     	;# 
  1799  0299                     	;# 
  1800  029A                     	;# 
  1801  029B                     	;# 
  1802  029C                     	;# 
  1803  029C                     	;# 
  1804  029D                     	;# 
  1805  029E                     	;# 
  1806  029F                     	;# 
  1807  030C                     	;# 
  1808  030D                     	;# 
  1809  0311                     	;# 
  1810  0311                     	;# 
  1811  0312                     	;# 
  1812  0313                     	;# 
  1813  0314                     	;# 
  1814  0315                     	;# 
  1815  0315                     	;# 
  1816  0316                     	;# 
  1817  0318                     	;# 
  1818  0318                     	;# 
  1819  0319                     	;# 
  1820  031A                     	;# 
  1821  031C                     	;# 
  1822  031C                     	;# 
  1823  031D                     	;# 
  1824  031E                     	;# 
  1825  038C                     	;# 
  1826  038D                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  040C                     	;# 
  1831  040D                     	;# 
  1832  0415                     	;# 
  1833  0416                     	;# 
  1834  0417                     	;# 
  1835  041C                     	;# 
  1836  041D                     	;# 
  1837  041E                     	;# 
  1838  048D                     	;# 
  1839  0491                     	;# 
  1840  0492                     	;# 
  1841  0493                     	;# 
  1842  0493                     	;# 
  1843  0494                     	;# 
  1844  0495                     	;# 
  1845  0496                     	;# 
  1846  0497                     	;# 
  1847  0791                     	;# 
  1848  0792                     	;# 
  1849  0793                     	;# 
  1850  0794                     	;# 
  1851  0795                     	;# 
  1852  0798                     	;# 
  1853  0799                     	;# 
  1854  079A                     	;# 
  1855  079B                     	;# 
  1856  079C                     	;# 
  1857  079D                     	;# 
  1858  07A0                     	;# 
  1859  07A1                     	;# 
  1860  07A2                     	;# 
  1861  07A3                     	;# 
  1862  07A4                     	;# 
  1863  07A5                     	;# 
  1864  07A6                     	;# 
  1865  07A7                     	;# 
  1866  07A8                     	;# 
  1867  07A9                     	;# 
  1868  07AA                     	;# 
  1869  07AB                     	;# 
  1870  07AC                     	;# 
  1871  07AD                     	;# 
  1872  07AE                     	;# 
  1873  07AF                     	;# 
  1874  07B0                     	;# 
  1875  07B1                     	;# 
  1876  07B2                     	;# 
  1877  07B3                     	;# 
  1878  07B4                     	;# 
  1879  07B5                     	;# 
  1880  07B6                     	;# 
  1881  07B7                     	;# 
  1882  0FE4                     	;# 
  1883  0FE5                     	;# 
  1884  0FE6                     	;# 
  1885  0FE7                     	;# 
  1886  0FE8                     	;# 
  1887  0FE9                     	;# 
  1888  0FEA                     	;# 
  1889  0FEB                     	;# 
  1890  0FED                     	;# 
  1891  0FEE                     	;# 
  1892  0FEF                     	;# 
  1893  0000                     	;# 
  1894  0001                     	;# 
  1895  0002                     	;# 
  1896  0003                     	;# 
  1897  0004                     	;# 
  1898  0005                     	;# 
  1899  0006                     	;# 
  1900  0007                     	;# 
  1901  0008                     	;# 
  1902  0009                     	;# 
  1903  000A                     	;# 
  1904  000B                     	;# 
  1905  000C                     	;# 
  1906  000D                     	;# 
  1907  000E                     	;# 
  1908  000F                     	;# 
  1909  0010                     	;# 
  1910  0011                     	;# 
  1911  0012                     	;# 
  1912  0013                     	;# 
  1913  0014                     	;# 
  1914  0015                     	;# 
  1915  0016                     	;# 
  1916  0016                     	;# 
  1917  0017                     	;# 
  1918  0018                     	;# 
  1919  0019                     	;# 
  1920  001A                     	;# 
  1921  001B                     	;# 
  1922  001C                     	;# 
  1923  001E                     	;# 
  1924  001F                     	;# 
  1925  008C                     	;# 
  1926  008D                     	;# 
  1927  008E                     	;# 
  1928  008F                     	;# 
  1929  0090                     	;# 
  1930  0091                     	;# 
  1931  0092                     	;# 
  1932  0093                     	;# 
  1933  0094                     	;# 
  1934  0095                     	;# 
  1935  0096                     	;# 
  1936  0097                     	;# 
  1937  0098                     	;# 
  1938  0099                     	;# 
  1939  009A                     	;# 
  1940  009B                     	;# 
  1941  009B                     	;# 
  1942  009C                     	;# 
  1943  009D                     	;# 
  1944  009E                     	;# 
  1945  010C                     	;# 
  1946  010D                     	;# 
  1947  010E                     	;# 
  1948  010F                     	;# 
  1949  0110                     	;# 
  1950  0111                     	;# 
  1951  0112                     	;# 
  1952  0113                     	;# 
  1953  0114                     	;# 
  1954  0115                     	;# 
  1955  0116                     	;# 
  1956  0117                     	;# 
  1957  0118                     	;# 
  1958  0119                     	;# 
  1959  011A                     	;# 
  1960  011B                     	;# 
  1961  011D                     	;# 
  1962  011E                     	;# 
  1963  011F                     	;# 
  1964  018C                     	;# 
  1965  0190                     	;# 
  1966  0191                     	;# 
  1967  0191                     	;# 
  1968  0192                     	;# 
  1969  0193                     	;# 
  1970  0193                     	;# 
  1971  0193                     	;# 
  1972  0194                     	;# 
  1973  0195                     	;# 
  1974  0196                     	;# 
  1975  0199                     	;# 
  1976  0199                     	;# 
  1977  019A                     	;# 
  1978  019A                     	;# 
  1979  019B                     	;# 
  1980  019B                     	;# 
  1981  019B                     	;# 
  1982  019B                     	;# 
  1983  019C                     	;# 
  1984  019C                     	;# 
  1985  019D                     	;# 
  1986  019D                     	;# 
  1987  019E                     	;# 
  1988  019E                     	;# 
  1989  019F                     	;# 
  1990  019F                     	;# 
  1991  020D                     	;# 
  1992  0211                     	;# 
  1993  0211                     	;# 
  1994  0212                     	;# 
  1995  0212                     	;# 
  1996  0213                     	;# 
  1997  0213                     	;# 
  1998  0214                     	;# 
  1999  0214                     	;# 
  2000  0215                     	;# 
  2001  0215                     	;# 
  2002  0215                     	;# 
  2003  0216                     	;# 
  2004  0216                     	;# 
  2005  0217                     	;# 
  2006  0217                     	;# 
  2007  0219                     	;# 
  2008  021A                     	;# 
  2009  021B                     	;# 
  2010  021C                     	;# 
  2011  021D                     	;# 
  2012  021E                     	;# 
  2013  021F                     	;# 
  2014  028C                     	;# 
  2015  028D                     	;# 
  2016  0291                     	;# 
  2017  0291                     	;# 
  2018  0292                     	;# 
  2019  0293                     	;# 
  2020  0294                     	;# 
  2021  0295                     	;# 
  2022  0295                     	;# 
  2023  0296                     	;# 
  2024  0298                     	;# 
  2025  0298                     	;# 
  2026  0299                     	;# 
  2027  029A                     	;# 
  2028  029B                     	;# 
  2029  029C                     	;# 
  2030  029C                     	;# 
  2031  029D                     	;# 
  2032  029E                     	;# 
  2033  029F                     	;# 
  2034  030C                     	;# 
  2035  030D                     	;# 
  2036  0311                     	;# 
  2037  0311                     	;# 
  2038  0312                     	;# 
  2039  0313                     	;# 
  2040  0314                     	;# 
  2041  0315                     	;# 
  2042  0315                     	;# 
  2043  0316                     	;# 
  2044  0318                     	;# 
  2045  0318                     	;# 
  2046  0319                     	;# 
  2047  031A                     	;# 
  2048  031C                     	;# 
  2049  031C                     	;# 
  2050  031D                     	;# 
  2051  031E                     	;# 
  2052  038C                     	;# 
  2053  038D                     	;# 
  2054  0394                     	;# 
  2055  0395                     	;# 
  2056  0396                     	;# 
  2057  040C                     	;# 
  2058  040D                     	;# 
  2059  0415                     	;# 
  2060  0416                     	;# 
  2061  0417                     	;# 
  2062  041C                     	;# 
  2063  041D                     	;# 
  2064  041E                     	;# 
  2065  048D                     	;# 
  2066  0491                     	;# 
  2067  0492                     	;# 
  2068  0493                     	;# 
  2069  0493                     	;# 
  2070  0494                     	;# 
  2071  0495                     	;# 
  2072  0496                     	;# 
  2073  0497                     	;# 
  2074  0791                     	;# 
  2075  0792                     	;# 
  2076  0793                     	;# 
  2077  0794                     	;# 
  2078  0795                     	;# 
  2079  0798                     	;# 
  2080  0799                     	;# 
  2081  079A                     	;# 
  2082  079B                     	;# 
  2083  079C                     	;# 
  2084  079D                     	;# 
  2085  07A0                     	;# 
  2086  07A1                     	;# 
  2087  07A2                     	;# 
  2088  07A3                     	;# 
  2089  07A4                     	;# 
  2090  07A5                     	;# 
  2091  07A6                     	;# 
  2092  07A7                     	;# 
  2093  07A8                     	;# 
  2094  07A9                     	;# 
  2095  07AA                     	;# 
  2096  07AB                     	;# 
  2097  07AC                     	;# 
  2098  07AD                     	;# 
  2099  07AE                     	;# 
  2100  07AF                     	;# 
  2101  07B0                     	;# 
  2102  07B1                     	;# 
  2103  07B2                     	;# 
  2104  07B3                     	;# 
  2105  07B4                     	;# 
  2106  07B5                     	;# 
  2107  07B6                     	;# 
  2108  07B7                     	;# 
  2109  0FE4                     	;# 
  2110  0FE5                     	;# 
  2111  0FE6                     	;# 
  2112  0FE7                     	;# 
  2113  0FE8                     	;# 
  2114  0FE9                     	;# 
  2115  0FEA                     	;# 
  2116  0FEB                     	;# 
  2117  0FED                     	;# 
  2118  0FEE                     	;# 
  2119  0FEF                     	;# 
  2120  0000                     	;# 
  2121  0001                     	;# 
  2122  0002                     	;# 
  2123  0003                     	;# 
  2124  0004                     	;# 
  2125  0005                     	;# 
  2126  0006                     	;# 
  2127  0007                     	;# 
  2128  0008                     	;# 
  2129  0009                     	;# 
  2130  000A                     	;# 
  2131  000B                     	;# 
  2132  000C                     	;# 
  2133  000D                     	;# 
  2134  000E                     	;# 
  2135  000F                     	;# 
  2136  0010                     	;# 
  2137  0011                     	;# 
  2138  0012                     	;# 
  2139  0013                     	;# 
  2140  0014                     	;# 
  2141  0015                     	;# 
  2142  0016                     	;# 
  2143  0016                     	;# 
  2144  0017                     	;# 
  2145  0018                     	;# 
  2146  0019                     	;# 
  2147  001A                     	;# 
  2148  001B                     	;# 
  2149  001C                     	;# 
  2150  001E                     	;# 
  2151  001F                     	;# 
  2152  008C                     	;# 
  2153  008D                     	;# 
  2154  008E                     	;# 
  2155  008F                     	;# 
  2156  0090                     	;# 
  2157  0091                     	;# 
  2158  0092                     	;# 
  2159  0093                     	;# 
  2160  0094                     	;# 
  2161  0095                     	;# 
  2162  0096                     	;# 
  2163  0097                     	;# 
  2164  0098                     	;# 
  2165  0099                     	;# 
  2166  009A                     	;# 
  2167  009B                     	;# 
  2168  009B                     	;# 
  2169  009C                     	;# 
  2170  009D                     	;# 
  2171  009E                     	;# 
  2172  010C                     	;# 
  2173  010D                     	;# 
  2174  010E                     	;# 
  2175  010F                     	;# 
  2176  0110                     	;# 
  2177  0111                     	;# 
  2178  0112                     	;# 
  2179  0113                     	;# 
  2180  0114                     	;# 
  2181  0115                     	;# 
  2182  0116                     	;# 
  2183  0117                     	;# 
  2184  0118                     	;# 
  2185  0119                     	;# 
  2186  011A                     	;# 
  2187  011B                     	;# 
  2188  011D                     	;# 
  2189  011E                     	;# 
  2190  011F                     	;# 
  2191  018C                     	;# 
  2192  0190                     	;# 
  2193  0191                     	;# 
  2194  0191                     	;# 
  2195  0192                     	;# 
  2196  0193                     	;# 
  2197  0193                     	;# 
  2198  0193                     	;# 
  2199  0194                     	;# 
  2200  0195                     	;# 
  2201  0196                     	;# 
  2202  0199                     	;# 
  2203  0199                     	;# 
  2204  019A                     	;# 
  2205  019A                     	;# 
  2206  019B                     	;# 
  2207  019B                     	;# 
  2208  019B                     	;# 
  2209  019B                     	;# 
  2210  019C                     	;# 
  2211  019C                     	;# 
  2212  019D                     	;# 
  2213  019D                     	;# 
  2214  019E                     	;# 
  2215  019E                     	;# 
  2216  019F                     	;# 
  2217  019F                     	;# 
  2218  020D                     	;# 
  2219  0211                     	;# 
  2220  0211                     	;# 
  2221  0212                     	;# 
  2222  0212                     	;# 
  2223  0213                     	;# 
  2224  0213                     	;# 
  2225  0214                     	;# 
  2226  0214                     	;# 
  2227  0215                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0216                     	;# 
  2231  0216                     	;# 
  2232  0217                     	;# 
  2233  0217                     	;# 
  2234  0219                     	;# 
  2235  021A                     	;# 
  2236  021B                     	;# 
  2237  021C                     	;# 
  2238  021D                     	;# 
  2239  021E                     	;# 
  2240  021F                     	;# 
  2241  028C                     	;# 
  2242  028D                     	;# 
  2243  0291                     	;# 
  2244  0291                     	;# 
  2245  0292                     	;# 
  2246  0293                     	;# 
  2247  0294                     	;# 
  2248  0295                     	;# 
  2249  0295                     	;# 
  2250  0296                     	;# 
  2251  0298                     	;# 
  2252  0298                     	;# 
  2253  0299                     	;# 
  2254  029A                     	;# 
  2255  029B                     	;# 
  2256  029C                     	;# 
  2257  029C                     	;# 
  2258  029D                     	;# 
  2259  029E                     	;# 
  2260  029F                     	;# 
  2261  030C                     	;# 
  2262  030D                     	;# 
  2263  0311                     	;# 
  2264  0311                     	;# 
  2265  0312                     	;# 
  2266  0313                     	;# 
  2267  0314                     	;# 
  2268  0315                     	;# 
  2269  0315                     	;# 
  2270  0316                     	;# 
  2271  0318                     	;# 
  2272  0318                     	;# 
  2273  0319                     	;# 
  2274  031A                     	;# 
  2275  031C                     	;# 
  2276  031C                     	;# 
  2277  031D                     	;# 
  2278  031E                     	;# 
  2279  038C                     	;# 
  2280  038D                     	;# 
  2281  0394                     	;# 
  2282  0395                     	;# 
  2283  0396                     	;# 
  2284  040C                     	;# 
  2285  040D                     	;# 
  2286  0415                     	;# 
  2287  0416                     	;# 
  2288  0417                     	;# 
  2289  041C                     	;# 
  2290  041D                     	;# 
  2291  041E                     	;# 
  2292  048D                     	;# 
  2293  0491                     	;# 
  2294  0492                     	;# 
  2295  0493                     	;# 
  2296  0493                     	;# 
  2297  0494                     	;# 
  2298  0495                     	;# 
  2299  0496                     	;# 
  2300  0497                     	;# 
  2301  0791                     	;# 
  2302  0792                     	;# 
  2303  0793                     	;# 
  2304  0794                     	;# 
  2305  0795                     	;# 
  2306  0798                     	;# 
  2307  0799                     	;# 
  2308  079A                     	;# 
  2309  079B                     	;# 
  2310  079C                     	;# 
  2311  079D                     	;# 
  2312  07A0                     	;# 
  2313  07A1                     	;# 
  2314  07A2                     	;# 
  2315  07A3                     	;# 
  2316  07A4                     	;# 
  2317  07A5                     	;# 
  2318  07A6                     	;# 
  2319  07A7                     	;# 
  2320  07A8                     	;# 
  2321  07A9                     	;# 
  2322  07AA                     	;# 
  2323  07AB                     	;# 
  2324  07AC                     	;# 
  2325  07AD                     	;# 
  2326  07AE                     	;# 
  2327  07AF                     	;# 
  2328  07B0                     	;# 
  2329  07B1                     	;# 
  2330  07B2                     	;# 
  2331  07B3                     	;# 
  2332  07B4                     	;# 
  2333  07B5                     	;# 
  2334  07B6                     	;# 
  2335  07B7                     	;# 
  2336  0FE4                     	;# 
  2337  0FE5                     	;# 
  2338  0FE6                     	;# 
  2339  0FE7                     	;# 
  2340  0FE8                     	;# 
  2341  0FE9                     	;# 
  2342  0FEA                     	;# 
  2343  0FEB                     	;# 
  2344  0FED                     	;# 
  2345  0FEE                     	;# 
  2346  0FEF                     	;# 
  2347  0000                     	;# 
  2348  0001                     	;# 
  2349  0002                     	;# 
  2350  0003                     	;# 
  2351  0004                     	;# 
  2352  0005                     	;# 
  2353  0006                     	;# 
  2354  0007                     	;# 
  2355  0008                     	;# 
  2356  0009                     	;# 
  2357  000A                     	;# 
  2358  000B                     	;# 
  2359  000C                     	;# 
  2360  000D                     	;# 
  2361  000E                     	;# 
  2362  000F                     	;# 
  2363  0010                     	;# 
  2364  0011                     	;# 
  2365  0012                     	;# 
  2366  0013                     	;# 
  2367  0014                     	;# 
  2368  0015                     	;# 
  2369  0016                     	;# 
  2370  0016                     	;# 
  2371  0017                     	;# 
  2372  0018                     	;# 
  2373  0019                     	;# 
  2374  001A                     	;# 
  2375  001B                     	;# 
  2376  001C                     	;# 
  2377  001E                     	;# 
  2378  001F                     	;# 
  2379  008C                     	;# 
  2380  008D                     	;# 
  2381  008E                     	;# 
  2382  008F                     	;# 
  2383  0090                     	;# 
  2384  0091                     	;# 
  2385  0092                     	;# 
  2386  0093                     	;# 
  2387  0094                     	;# 
  2388  0095                     	;# 
  2389  0096                     	;# 
  2390  0097                     	;# 
  2391  0098                     	;# 
  2392  0099                     	;# 
  2393  009A                     	;# 
  2394  009B                     	;# 
  2395  009B                     	;# 
  2396  009C                     	;# 
  2397  009D                     	;# 
  2398  009E                     	;# 
  2399  010C                     	;# 
  2400  010D                     	;# 
  2401  010E                     	;# 
  2402  010F                     	;# 
  2403  0110                     	;# 
  2404  0111                     	;# 
  2405  0112                     	;# 
  2406  0113                     	;# 
  2407  0114                     	;# 
  2408  0115                     	;# 
  2409  0116                     	;# 
  2410  0117                     	;# 
  2411  0118                     	;# 
  2412  0119                     	;# 
  2413  011A                     	;# 
  2414  011B                     	;# 
  2415  011D                     	;# 
  2416  011E                     	;# 
  2417  011F                     	;# 
  2418  018C                     	;# 
  2419  0190                     	;# 
  2420  0191                     	;# 
  2421  0191                     	;# 
  2422  0192                     	;# 
  2423  0193                     	;# 
  2424  0193                     	;# 
  2425  0193                     	;# 
  2426  0194                     	;# 
  2427  0195                     	;# 
  2428  0196                     	;# 
  2429  0199                     	;# 
  2430  0199                     	;# 
  2431  019A                     	;# 
  2432  019A                     	;# 
  2433  019B                     	;# 
  2434  019B                     	;# 
  2435  019B                     	;# 
  2436  019B                     	;# 
  2437  019C                     	;# 
  2438  019C                     	;# 
  2439  019D                     	;# 
  2440  019D                     	;# 
  2441  019E                     	;# 
  2442  019E                     	;# 
  2443  019F                     	;# 
  2444  019F                     	;# 
  2445  020D                     	;# 
  2446  0211                     	;# 
  2447  0211                     	;# 
  2448  0212                     	;# 
  2449  0212                     	;# 
  2450  0213                     	;# 
  2451  0213                     	;# 
  2452  0214                     	;# 
  2453  0214                     	;# 
  2454  0215                     	;# 
  2455  0215                     	;# 
  2456  0215                     	;# 
  2457  0216                     	;# 
  2458  0216                     	;# 
  2459  0217                     	;# 
  2460  0217                     	;# 
  2461  0219                     	;# 
  2462  021A                     	;# 
  2463  021B                     	;# 
  2464  021C                     	;# 
  2465  021D                     	;# 
  2466  021E                     	;# 
  2467  021F                     	;# 
  2468  028C                     	;# 
  2469  028D                     	;# 
  2470  0291                     	;# 
  2471  0291                     	;# 
  2472  0292                     	;# 
  2473  0293                     	;# 
  2474  0294                     	;# 
  2475  0295                     	;# 
  2476  0295                     	;# 
  2477  0296                     	;# 
  2478  0298                     	;# 
  2479  0298                     	;# 
  2480  0299                     	;# 
  2481  029A                     	;# 
  2482  029B                     	;# 
  2483  029C                     	;# 
  2484  029C                     	;# 
  2485  029D                     	;# 
  2486  029E                     	;# 
  2487  029F                     	;# 
  2488  030C                     	;# 
  2489  030D                     	;# 
  2490  0311                     	;# 
  2491  0311                     	;# 
  2492  0312                     	;# 
  2493  0313                     	;# 
  2494  0314                     	;# 
  2495  0315                     	;# 
  2496  0315                     	;# 
  2497  0316                     	;# 
  2498  0318                     	;# 
  2499  0318                     	;# 
  2500  0319                     	;# 
  2501  031A                     	;# 
  2502  031C                     	;# 
  2503  031C                     	;# 
  2504  031D                     	;# 
  2505  031E                     	;# 
  2506  038C                     	;# 
  2507  038D                     	;# 
  2508  0394                     	;# 
  2509  0395                     	;# 
  2510  0396                     	;# 
  2511  040C                     	;# 
  2512  040D                     	;# 
  2513  0415                     	;# 
  2514  0416                     	;# 
  2515  0417                     	;# 
  2516  041C                     	;# 
  2517  041D                     	;# 
  2518  041E                     	;# 
  2519  048D                     	;# 
  2520  0491                     	;# 
  2521  0492                     	;# 
  2522  0493                     	;# 
  2523  0493                     	;# 
  2524  0494                     	;# 
  2525  0495                     	;# 
  2526  0496                     	;# 
  2527  0497                     	;# 
  2528  0791                     	;# 
  2529  0792                     	;# 
  2530  0793                     	;# 
  2531  0794                     	;# 
  2532  0795                     	;# 
  2533  0798                     	;# 
  2534  0799                     	;# 
  2535  079A                     	;# 
  2536  079B                     	;# 
  2537  079C                     	;# 
  2538  079D                     	;# 
  2539  07A0                     	;# 
  2540  07A1                     	;# 
  2541  07A2                     	;# 
  2542  07A3                     	;# 
  2543  07A4                     	;# 
  2544  07A5                     	;# 
  2545  07A6                     	;# 
  2546  07A7                     	;# 
  2547  07A8                     	;# 
  2548  07A9                     	;# 
  2549  07AA                     	;# 
  2550  07AB                     	;# 
  2551  07AC                     	;# 
  2552  07AD                     	;# 
  2553  07AE                     	;# 
  2554  07AF                     	;# 
  2555  07B0                     	;# 
  2556  07B1                     	;# 
  2557  07B2                     	;# 
  2558  07B3                     	;# 
  2559  07B4                     	;# 
  2560  07B5                     	;# 
  2561  07B6                     	;# 
  2562  07B7                     	;# 
  2563  0FE4                     	;# 
  2564  0FE5                     	;# 
  2565  0FE6                     	;# 
  2566  0FE7                     	;# 
  2567  0FE8                     	;# 
  2568  0FE9                     	;# 
  2569  0FEA                     	;# 
  2570  0FEB                     	;# 
  2571  0FED                     	;# 
  2572  0FEE                     	;# 
  2573  0FEF                     	;# 
  2574  000B                     _INTCONbits	set	11
  2575  0011                     _PIR1bits	set	17
  2576  0014                     _PIR4bits	set	20
  2577  000C                     _PORTA	set	12
  2578  000D                     _PORTB	set	13
  2579  000E                     _PORTC	set	14
  2580  000F                     _PORTD	set	15
  2581  0010                     _PORTE	set	16
  2582  001C                     _T2CONbits	set	28
  2583  0015                     _TMR0	set	21
  2584  001B                     _PR2	set	27
  2585  005F                     _GIE	set	95
  2586  009D                     _ADCON0bits	set	157
  2587  009E                     _ADCON1bits	set	158
  2588  009C                     _ADRESH	set	156
  2589  009B                     _ADRESL	set	155
  2590  0095                     _OPTION_REGbits	set	149
  2591  0099                     _OSCCONbits	set	153
  2592  008C                     _TRISA	set	140
  2593  008D                     _TRISB	set	141
  2594  008E                     _TRISC	set	142
  2595  008F                     _TRISD	set	143
  2596  0090                     _TRISE	set	144
  2597  0097                     _WDTCONbits	set	151
  2598  011D                     _APFCONbits	set	285
  2599  010C                     _LATA	set	268
  2600  010D                     _LATB	set	269
  2601  010D                     _LATBbits	set	269
  2602  010E                     _LATC	set	270
  2603  010E                     _LATCbits	set	270
  2604  010F                     _LATD	set	271
  2605  010F                     _LATDbits	set	271
  2606  0110                     _LATE	set	272
  2607  0110                     _LATEbits	set	272
  2608  018C                     _ANSELA	set	396
  2609  0190                     _ANSELE	set	400
  2610  0212                     _SSP1ADD	set	530
  2611  0211                     _SSP1BUF	set	529
  2612  0215                     _SSP1CON1bits	set	533
  2613  0216                     _SSP1CON2	set	534
  2614  0216                     _SSP1CON2bits	set	534
  2615  0214                     _SSP1STAT	set	532
  2616  0214                     _SSP1STATbits	set	532
  2617  021A                     _SSP2ADD	set	538
  2618  0219                     _SSP2BUF	set	537
  2619  021D                     _SSP2CON1bits	set	541
  2620  021E                     _SSP2CON2	set	542
  2621  021E                     _SSP2CON2bits	set	542
  2622  021C                     _SSP2STAT	set	540
  2623  021C                     _SSP2STATbits	set	540
  2624  020D                     _WPUB	set	525
  2625  029A                     _CCP2CONbits	set	666
  2626  0298                     _CCPR2L	set	664
  2627  029E                     _CCPTMRS0bits	set	670
  2628  028C                     _PORTF	set	652
  2629  028C                     _PORTFbits	set	652
  2630  028D                     _PORTG	set	653
  2631  0313                     _CCP3CONbits	set	787
  2632  0311                     _CCPR3L	set	785
  2633  030C                     _TRISF	set	780
  2634  030D                     _TRISG	set	781
  2635  038C                     _LATF	set	908
  2636  038D                     _LATG	set	909
  2637  040C                     _ANSELF	set	1036
  2638  040D                     _ANSELG	set	1037
  2639  0417                     _T4CONbits	set	1047
  2640  0416                     _PR4	set	1046
  2641  048D                     _WPUG	set	1165
  2642                           
  2643                           ; #config settings
  2644  0000                     
  2645                           	psect	cinit
  2646  0026                     start_initialization:	
  2647  0026                     __initialization:	
  2648                           
  2649                           ; Clear objects allocated to BANK1
  2650  0026  30A0               	movlw	low __pbssBANK1
  2651  0027  0084               	movwf	4
  2652  0028  3000               	movlw	high __pbssBANK1
  2653  0029  0085               	movwf	5
  2654  002A  3045               	movlw	69
  2655  002B  3197  27D3  3180   	fcall	clear_ram0
  2656                           
  2657                           ; Clear objects allocated to BANK2
  2658  002E  3020               	movlw	low __pbssBANK2
  2659  002F  0084               	movwf	4
  2660  0030  3001               	movlw	high __pbssBANK2
  2661  0031  0085               	movwf	5
  2662  0032  3012               	movlw	18
  2663  0033  3197  27D3         	fcall	clear_ram0
  2664  0035                     end_of_initialization:	
  2665                           ;End of C runtime variable initialization code
  2666                           
  2667  0035                     __end_of__initialization:	
  2668  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2669  0036  0020               	movlb	0
  2670  0037  3197  2FE0         	ljmp	_main	;jump to C main() function
  2671                           
  2672                           	psect	bssBANK1
  2673  00A0                     __pbssBANK1:	
  2674  00A0                     _cmd:	
  2675  00A0                     	ds	17
  2676  00B1                     _timer0_millis:	
  2677  00B1                     	ds	4
  2678  00B5                     _Timer:	
  2679  00B5                     	ds	48
  2680                           
  2681                           	psect	bssBANK2
  2682  0120                     __pbssBANK2:	
  2683  0120                     _buttons:	
  2684  0120                     	ds	18
  2685                           
  2686                           	psect	clrtext
  2687  17D3                     clear_ram0:	
  2688                           ;	Called with FSR0 containing the base address, and
  2689                           ;	WREG with the size to clear
  2690                           
  2691  17D3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2692  17D4                     clrloop0:	
  2693  17D4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2694  17D5  3101               	addfsr 0,1
  2695  17D6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2696  17D7  2FD4               	goto	clrloop0	;have we reached the end yet?
  2697  17D8  3400               	retlw	0	;all done for this memory range, return
  2698                           
  2699                           	psect	cstackBANK1
  2700  00E5                     __pcstackBANK1:	
  2701  00E5                     processButtons@isPressed:	
  2702                           
  2703                           ; 2 bytes @ 0x0
  2704  00E5                     	ds	2
  2705  00E7                     processButtons@i:	
  2706                           
  2707                           ; 1 bytes @ 0x2
  2708  00E7                     	ds	1
  2709                           
  2710                           	psect	cstackCOMMON
  2711  0070                     __pcstackCOMMON:	
  2712  0070                     ?_apInit:	
  2713  0070                     ?_apMain:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0070                     ?_I2CStart:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0070                     ?_I2CSend:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0070                     ?_I2CAck:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0070                     ?_I2CStop:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0070                     ?_I2CWait:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0070                     ?_init_millis:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0070                     ?_I2CWait_2:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0070                     ?_pwmStart_ccp3:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0070                     ?_pwmStart_ccp2:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0070                     ?_timerEventStart:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0070                     ?_pwmStop_ccp3:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0070                     ?_pwmStop_ccp2:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0070                     ?_timerGetTick:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0070                     ?_processButtons:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0070                     ?_initPort:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0070                     ?_initTimer:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0070                     ?_buttons_init:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0070                     ?_timerProc:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ?_timerInterruptProc:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ?_main:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ?_I2CStart_2:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_I2CStop_2:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     ?_I2CAck_2:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     ?_I2CSend_2:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788  0070                     ?_adcInit:	
  2789                           ; 1 bytes @ 0x0
  2790                           
  2791  0070                     ?_event_btn_Expose:	
  2792                           ; 1 bytes @ 0x0
  2793                           
  2794  0070                     ?_event_btn_Stop:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797  0070                     ?_event_timer_Button:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  0070                     ?_event_expose:	
  2801                           ; 1 bytes @ 0x0
  2802                           
  2803  0070                     ?_event_display:	
  2804                           ; 1 bytes @ 0x0
  2805                           
  2806  0070                     ?_event_rst:	
  2807                           ; 1 bytes @ 0x0
  2808                           
  2809  0070                     ?_event_anodeCurrent:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812  0070                     ?_isr:	
  2813                           ; 1 bytes @ 0x0
  2814                           
  2815  0070                     timerInterruptProc@ch_count:	
  2816                           ; 1 bytes @ 0x0
  2817                           
  2818                           
  2819                           ; 1 bytes @ 0x0
  2820  0070                     	ds	1
  2821  0071                     ??_timerInterruptProc:	
  2822                           
  2823                           ; 1 bytes @ 0x1
  2824  0071                     	ds	8
  2825  0079                     timerInterruptProc@time:	
  2826                           
  2827                           ; 1 bytes @ 0x9
  2828  0079                     	ds	1
  2829  007A                     timerInterruptProc@i:	
  2830                           
  2831                           ; 1 bytes @ 0xA
  2832  007A                     	ds	1
  2833  007B                     ??_isr:	
  2834                           
  2835                           ; 1 bytes @ 0xB
  2836  007B                     	ds	2
  2837                           
  2838                           	psect	cstackBANK0
  2839  0020                     __pcstackBANK0:	
  2840  0020                     ?___ftge:	
  2841  0020                     ??_init_millis:	
  2842                           ; 1 bit 
  2843                           
  2844  0020                     ??_pwmStart_ccp3:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0020                     ??_pwmStart_ccp2:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0020                     ??_timerEventStart:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0020                     ??_pwmStop_ccp3:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0020                     ??_pwmStop_ccp2:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0020                     ?_timerTickClear:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0020                     ??_timerGetTick:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0020                     ??_initPort:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0020                     ??_initTimer:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0020                     ?_timerInit:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0020                     ??_buttons_init:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0020                     ?_buttons_setFuncs:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0020                     ??_adcInit:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0020                     ?___bmul:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0020                     ?_adcRead:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0020                     ?___wmul:	
  2890                           ; 2 bytes @ 0x0
  2891                           
  2892  0020                     ?___lwdiv:	
  2893                           ; 2 bytes @ 0x0
  2894                           
  2895  0020                     ?___ftpack:	
  2896                           ; 2 bytes @ 0x0
  2897                           
  2898  0020                     ?_millis:	
  2899                           ; 3 bytes @ 0x0
  2900                           
  2901  0020                     ?_get_millis:	
  2902                           ; 4 bytes @ 0x0
  2903                           
  2904  0020                     timerEventStart@time:	
  2905                           ; 4 bytes @ 0x0
  2906                           
  2907  0020                     timerGetTick@time:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0020                     timerTickClear@start:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0020                     ___bmul@multiplicand:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0020                     buttons_setFuncs@btn1:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0020                     timerInit@timeSet:	
  2920                           ; 2 bytes @ 0x0
  2921                           
  2922  0020                     ___wmul@multiplier:	
  2923                           ; 2 bytes @ 0x0
  2924                           
  2925  0020                     ___lwdiv@divisor:	
  2926                           ; 2 bytes @ 0x0
  2927                           
  2928  0020                     ___ftpack@arg:	
  2929                           ; 2 bytes @ 0x0
  2930                           
  2931  0020                     ___ftge@ff1:	
  2932                           ; 3 bytes @ 0x0
  2933                           
  2934  0020                     get_millis@now:	
  2935                           ; 3 bytes @ 0x0
  2936                           
  2937                           
  2938                           ; 4 bytes @ 0x0
  2939  0020                     	ds	1
  2940  0021                     ??_timerTickClear:	
  2941  0021                     ??___bmul:	
  2942                           ; 1 bytes @ 0x1
  2943                           
  2944                           
  2945                           ; 1 bytes @ 0x1
  2946  0021                     	ds	1
  2947  0022                     ??_adcRead:	
  2948  0022                     timerTickClear@time:	
  2949                           ; 1 bytes @ 0x2
  2950                           
  2951  0022                     ___bmul@product:	
  2952                           ; 1 bytes @ 0x2
  2953                           
  2954  0022                     buttons_setFuncs@btn2:	
  2955                           ; 1 bytes @ 0x2
  2956                           
  2957  0022                     timerInit@func:	
  2958                           ; 2 bytes @ 0x2
  2959                           
  2960  0022                     ___wmul@multiplicand:	
  2961                           ; 2 bytes @ 0x2
  2962                           
  2963  0022                     ___lwdiv@dividend:	
  2964                           ; 2 bytes @ 0x2
  2965                           
  2966                           
  2967                           ; 2 bytes @ 0x2
  2968  0022                     	ds	1
  2969  0023                     ??_event_expose:	
  2970  0023                     ??_event_rst:	
  2971                           ; 1 bytes @ 0x3
  2972                           
  2973  0023                     adcRead@channel:	
  2974                           ; 1 bytes @ 0x3
  2975                           
  2976  0023                     ___bmul@multiplier:	
  2977                           ; 1 bytes @ 0x3
  2978                           
  2979  0023                     ___ftpack@exp:	
  2980                           ; 1 bytes @ 0x3
  2981                           
  2982  0023                     ___ftge@ff2:	
  2983                           ; 1 bytes @ 0x3
  2984                           
  2985                           
  2986                           ; 3 bytes @ 0x3
  2987  0023                     	ds	1
  2988  0024                     ??_millis:	
  2989  0024                     ??_timerInit:	
  2990                           ; 1 bytes @ 0x4
  2991                           
  2992  0024                     ??_buttons_setFuncs:	
  2993                           ; 1 bytes @ 0x4
  2994                           
  2995  0024                     ??___wmul:	
  2996                           ; 1 bytes @ 0x4
  2997                           
  2998  0024                     ??___lwdiv:	
  2999                           ; 1 bytes @ 0x4
  3000                           
  3001  0024                     timerInit@time:	
  3002                           ; 1 bytes @ 0x4
  3003                           
  3004  0024                     ___ftpack@sign:	
  3005                           ; 1 bytes @ 0x4
  3006                           
  3007  0024                     ___wmul@product:	
  3008                           ; 1 bytes @ 0x4
  3009                           
  3010  0024                     millis@ms:	
  3011                           ; 2 bytes @ 0x4
  3012                           
  3013  0024                     get_millis@prev_now:	
  3014                           ; 4 bytes @ 0x4
  3015                           
  3016                           
  3017                           ; 4 bytes @ 0x4
  3018  0024                     	ds	1
  3019  0025                     ??___ftpack:	
  3020  0025                     ___lwdiv@quotient:	
  3021                           ; 1 bytes @ 0x5
  3022                           
  3023                           
  3024                           ; 2 bytes @ 0x5
  3025  0025                     	ds	1
  3026  0026                     ??___ftge:	
  3027  0026                     ?___aldiv:	
  3028                           ; 1 bytes @ 0x6
  3029                           
  3030  0026                     ___aldiv@divisor:	
  3031                           ; 4 bytes @ 0x6
  3032                           
  3033                           
  3034                           ; 4 bytes @ 0x6
  3035  0026                     	ds	1
  3036  0027                     ___lwdiv@counter:	
  3037                           
  3038                           ; 1 bytes @ 0x7
  3039  0027                     	ds	1
  3040  0028                     ??_get_millis:	
  3041  0028                     ?___lwmod:	
  3042                           ; 1 bytes @ 0x8
  3043                           
  3044  0028                     ?___awtoft:	
  3045                           ; 2 bytes @ 0x8
  3046                           
  3047  0028                     ?___ftadd:	
  3048                           ; 3 bytes @ 0x8
  3049                           
  3050  0028                     ?___lwtoft:	
  3051                           ; 3 bytes @ 0x8
  3052                           
  3053  0028                     ___awtoft@c:	
  3054                           ; 3 bytes @ 0x8
  3055                           
  3056  0028                     ___lwmod@divisor:	
  3057                           ; 2 bytes @ 0x8
  3058                           
  3059  0028                     ___lwtoft@c:	
  3060                           ; 2 bytes @ 0x8
  3061                           
  3062  0028                     ___ftadd@f1:	
  3063                           ; 2 bytes @ 0x8
  3064                           
  3065                           
  3066                           ; 3 bytes @ 0x8
  3067  0028                     	ds	2
  3068  002A                     ___lwmod@dividend:	
  3069  002A                     ___aldiv@dividend:	
  3070                           ; 2 bytes @ 0xA
  3071                           
  3072                           
  3073                           ; 4 bytes @ 0xA
  3074  002A                     	ds	1
  3075  002B                     ??___awtoft:	
  3076  002B                     ??___lwtoft:	
  3077                           ; 1 bytes @ 0xB
  3078                           
  3079  002B                     ___ftadd@f2:	
  3080                           ; 1 bytes @ 0xB
  3081                           
  3082                           
  3083                           ; 3 bytes @ 0xB
  3084  002B                     	ds	1
  3085  002C                     ??___lwmod:	
  3086  002C                     ?___ftdiv:	
  3087                           ; 1 bytes @ 0xC
  3088                           
  3089  002C                     ___ftdiv@f2:	
  3090                           ; 3 bytes @ 0xC
  3091                           
  3092                           
  3093                           ; 3 bytes @ 0xC
  3094  002C                     	ds	1
  3095  002D                     ___awtoft@sign:	
  3096  002D                     ___lwmod@counter:	
  3097                           ; 1 bytes @ 0xD
  3098                           
  3099                           
  3100                           ; 1 bytes @ 0xD
  3101  002D                     	ds	1
  3102  002E                     ??___aldiv:	
  3103  002E                     ??___ftadd:	
  3104                           ; 1 bytes @ 0xE
  3105                           
  3106                           
  3107                           ; 1 bytes @ 0xE
  3108  002E                     	ds	1
  3109  002F                     ___aldiv@counter:	
  3110  002F                     ___ftdiv@f1:	
  3111                           ; 1 bytes @ 0xF
  3112                           
  3113                           
  3114                           ; 3 bytes @ 0xF
  3115  002F                     	ds	1
  3116  0030                     ??_I2CAck:	
  3117  0030                     ??_I2CWait:	
  3118                           ; 1 bytes @ 0x10
  3119                           
  3120  0030                     ??_I2CWait_2:	
  3121                           ; 1 bytes @ 0x10
  3122                           
  3123  0030                     ??_I2CAck_2:	
  3124                           ; 1 bytes @ 0x10
  3125                           
  3126  0030                     ___aldiv@sign:	
  3127                           ; 1 bytes @ 0x10
  3128                           
  3129  0030                     I2CAck@now:	
  3130                           ; 1 bytes @ 0x10
  3131                           
  3132  0030                     I2CWait@now:	
  3133                           ; 4 bytes @ 0x10
  3134                           
  3135  0030                     I2CAck_2@now:	
  3136                           ; 4 bytes @ 0x10
  3137                           
  3138  0030                     I2CWait_2@now:	
  3139                           ; 4 bytes @ 0x10
  3140                           
  3141                           
  3142                           ; 4 bytes @ 0x10
  3143  0030                     	ds	1
  3144  0031                     ___aldiv@quotient:	
  3145                           
  3146                           ; 4 bytes @ 0x11
  3147  0031                     	ds	1
  3148  0032                     ??___ftdiv:	
  3149  0032                     ___ftadd@sign:	
  3150                           ; 1 bytes @ 0x12
  3151                           
  3152                           
  3153                           ; 1 bytes @ 0x12
  3154  0032                     	ds	1
  3155  0033                     ___ftadd@exp2:	
  3156                           
  3157                           ; 1 bytes @ 0x13
  3158  0033                     	ds	1
  3159  0034                     ___ftadd@exp1:	
  3160  0034                     I2CAck@prev:	
  3161                           ; 1 bytes @ 0x14
  3162                           
  3163  0034                     I2CWait@prev:	
  3164                           ; 4 bytes @ 0x14
  3165                           
  3166  0034                     I2CAck_2@prev:	
  3167                           ; 4 bytes @ 0x14
  3168                           
  3169  0034                     I2CWait_2@prev:	
  3170                           ; 4 bytes @ 0x14
  3171                           
  3172                           
  3173                           ; 4 bytes @ 0x14
  3174  0034                     	ds	1
  3175  0035                     ?_I2CInit:	
  3176  0035                     ?_I2CInit_2:	
  3177                           ; 1 bytes @ 0x15
  3178                           
  3179  0035                     ?___ftsub:	
  3180                           ; 1 bytes @ 0x15
  3181                           
  3182  0035                     I2CInit@freq:	
  3183                           ; 3 bytes @ 0x15
  3184                           
  3185  0035                     I2CInit_2@freq:	
  3186                           ; 2 bytes @ 0x15
  3187                           
  3188  0035                     ___ftsub@f2:	
  3189                           ; 2 bytes @ 0x15
  3190                           
  3191                           
  3192                           ; 3 bytes @ 0x15
  3193  0035                     	ds	1
  3194  0036                     ___ftdiv@cntr:	
  3195                           
  3196                           ; 1 bytes @ 0x16
  3197  0036                     	ds	1
  3198  0037                     ??_I2CInit:	
  3199  0037                     ??_I2CInit_2:	
  3200                           ; 1 bytes @ 0x17
  3201                           
  3202  0037                     ___ftdiv@f3:	
  3203                           ; 1 bytes @ 0x17
  3204                           
  3205                           
  3206                           ; 3 bytes @ 0x17
  3207  0037                     	ds	1
  3208  0038                     ??_I2CStart:	
  3209  0038                     ??_I2CSend:	
  3210                           ; 1 bytes @ 0x18
  3211                           
  3212  0038                     ??_I2CStop:	
  3213                           ; 1 bytes @ 0x18
  3214                           
  3215  0038                     ??_I2CStart_2:	
  3216                           ; 1 bytes @ 0x18
  3217                           
  3218  0038                     ??_I2CStop_2:	
  3219                           ; 1 bytes @ 0x18
  3220                           
  3221  0038                     ??_I2CSend_2:	
  3222                           ; 1 bytes @ 0x18
  3223                           
  3224  0038                     I2CSend@dat:	
  3225                           ; 1 bytes @ 0x18
  3226                           
  3227  0038                     I2CSend_2@dat:	
  3228                           ; 1 bytes @ 0x18
  3229                           
  3230  0038                     ___ftsub@f1:	
  3231                           ; 1 bytes @ 0x18
  3232                           
  3233                           
  3234                           ; 3 bytes @ 0x18
  3235  0038                     	ds	1
  3236  0039                     ?_I2C_AS1115_Write:	
  3237  0039                     ?_I2C_DAC_Write:	
  3238                           ; 1 bytes @ 0x19
  3239                           
  3240  0039                     I2C_AS1115_Write@data:	
  3241                           ; 1 bytes @ 0x19
  3242                           
  3243  0039                     I2C_DAC_Write@data:	
  3244                           ; 1 bytes @ 0x19
  3245                           
  3246                           
  3247                           ; 1 bytes @ 0x19
  3248  0039                     	ds	1
  3249  003A                     ??_I2C_AS1115_Write:	
  3250  003A                     ??_I2C_DAC_Write:	
  3251                           ; 1 bytes @ 0x1A
  3252                           
  3253  003A                     I2C_AS1115_Write@cmd:	
  3254                           ; 1 bytes @ 0x1A
  3255                           
  3256  003A                     ___ftdiv@exp:	
  3257                           ; 1 bytes @ 0x1A
  3258                           
  3259                           
  3260                           ; 1 bytes @ 0x1A
  3261  003A                     	ds	1
  3262  003B                     ??___ftsub:	
  3263  003B                     ___ftdiv@sign:	
  3264                           ; 1 bytes @ 0x1B
  3265                           
  3266                           
  3267                           ; 1 bytes @ 0x1B
  3268  003B                     	ds	1
  3269  003C                     ?___ftmul:	
  3270  003C                     I2C_DAC_Write@address:	
  3271                           ; 3 bytes @ 0x1C
  3272                           
  3273  003C                     ___ftmul@f1:	
  3274                           ; 1 bytes @ 0x1C
  3275                           
  3276                           
  3277                           ; 3 bytes @ 0x1C
  3278  003C                     	ds	1
  3279  003D                     ??_event_btn_Stop:	
  3280                           
  3281                           ; 1 bytes @ 0x1D
  3282  003D                     	ds	1
  3283  003E                     event_btn_Stop@ret:	
  3284                           
  3285                           ; 1 bytes @ 0x1E
  3286  003E                     	ds	1
  3287  003F                     event_btn_Stop@temp:	
  3288  003F                     ___ftmul@f2:	
  3289                           ; 2 bytes @ 0x1F
  3290                           
  3291                           
  3292                           ; 3 bytes @ 0x1F
  3293  003F                     	ds	2
  3294  0041                     ??_apInit:	
  3295                           
  3296                           ; 1 bytes @ 0x21
  3297  0041                     	ds	1
  3298  0042                     ??___ftmul:	
  3299  0042                     apInit@D_temp:	
  3300                           ; 1 bytes @ 0x22
  3301                           
  3302                           
  3303                           ; 2 bytes @ 0x22
  3304  0042                     	ds	4
  3305  0046                     ___ftmul@exp:	
  3306                           
  3307                           ; 1 bytes @ 0x26
  3308  0046                     	ds	1
  3309  0047                     ___ftmul@f3_as_product:	
  3310                           
  3311                           ; 3 bytes @ 0x27
  3312  0047                     	ds	3
  3313  004A                     ___ftmul@cntr:	
  3314                           
  3315                           ; 1 bytes @ 0x2A
  3316  004A                     	ds	1
  3317  004B                     ___ftmul@sign:	
  3318                           
  3319                           ; 1 bytes @ 0x2B
  3320  004B                     	ds	1
  3321  004C                     ?___fttol:	
  3322  004C                     ___fttol@f1:	
  3323                           ; 4 bytes @ 0x2C
  3324                           
  3325                           
  3326                           ; 3 bytes @ 0x2C
  3327  004C                     	ds	4
  3328  0050                     ??___fttol:	
  3329                           
  3330                           ; 1 bytes @ 0x30
  3331  0050                     	ds	4
  3332  0054                     ___fttol@sign1:	
  3333                           
  3334                           ; 1 bytes @ 0x34
  3335  0054                     	ds	1
  3336  0055                     ___fttol@lval:	
  3337                           
  3338                           ; 4 bytes @ 0x35
  3339  0055                     	ds	4
  3340  0059                     ___fttol@exp1:	
  3341                           
  3342                           ; 1 bytes @ 0x39
  3343  0059                     	ds	1
  3344  005A                     ?_pwmInit_ccp3:	
  3345  005A                     ?_pwmInit_ccp2:	
  3346                           ; 1 bytes @ 0x3A
  3347                           
  3348  005A                     ?_disp_kv:	
  3349                           ; 1 bytes @ 0x3A
  3350                           
  3351  005A                     ?_disp_ma_result:	
  3352                           ; 1 bytes @ 0x3A
  3353                           
  3354  005A                     ?_adcTodac:	
  3355                           ; 1 bytes @ 0x3A
  3356                           
  3357  005A                     disp_ma_result@data:	
  3358                           ; 2 bytes @ 0x3A
  3359                           
  3360  005A                     disp_kv@data:	
  3361                           ; 2 bytes @ 0x3A
  3362                           
  3363  005A                     adcTodac@data:	
  3364                           ; 2 bytes @ 0x3A
  3365                           
  3366  005A                     pwmInit_ccp2@freq:	
  3367                           ; 2 bytes @ 0x3A
  3368                           
  3369  005A                     pwmInit_ccp3@freq:	
  3370                           ; 2 bytes @ 0x3A
  3371                           
  3372                           
  3373                           ; 2 bytes @ 0x3A
  3374  005A                     	ds	2
  3375  005C                     ??_adcTodac:	
  3376  005C                     ??_disp_kv:	
  3377                           ; 1 bytes @ 0x3C
  3378                           
  3379  005C                     ??_disp_ma_result:	
  3380                           ; 1 bytes @ 0x3C
  3381                           
  3382  005C                     adcTodac@temp:	
  3383                           ; 1 bytes @ 0x3C
  3384                           
  3385  005C                     pwmInit_ccp2@duty:	
  3386                           ; 3 bytes @ 0x3C
  3387                           
  3388  005C                     pwmInit_ccp3@duty:	
  3389                           ; 3 bytes @ 0x3C
  3390                           
  3391                           
  3392                           ; 3 bytes @ 0x3C
  3393  005C                     	ds	1
  3394  005D                     disp_ma_result@temp:	
  3395  005D                     disp_kv@temp:	
  3396                           ; 3 bytes @ 0x3D
  3397                           
  3398                           
  3399                           ; 3 bytes @ 0x3D
  3400  005D                     	ds	2
  3401  005F                     ??_pwmInit_ccp3:	
  3402  005F                     ??_pwmInit_ccp2:	
  3403                           ; 1 bytes @ 0x3F
  3404                           
  3405                           
  3406                           ; 1 bytes @ 0x3F
  3407  005F                     	ds	1
  3408  0060                     disp_ma_result@temp2:	
  3409  0060                     disp_kv@temp2:	
  3410                           ; 2 bytes @ 0x40
  3411                           
  3412                           
  3413                           ; 2 bytes @ 0x40
  3414  0060                     	ds	1
  3415  0061                     pwmInit_ccp2@ccpr1l_ccp1con:	
  3416  0061                     pwmInit_ccp3@ccpr3l_ccp3con:	
  3417                           ; 2 bytes @ 0x41
  3418                           
  3419                           
  3420                           ; 2 bytes @ 0x41
  3421  0061                     	ds	1
  3422  0062                     ??_event_display:	
  3423                           
  3424                           ; 1 bytes @ 0x42
  3425  0062                     	ds	1
  3426  0063                     ??_event_btn_Expose:	
  3427  0063                     ??_event_anodeCurrent:	
  3428                           ; 1 bytes @ 0x43
  3429                           
  3430                           
  3431                           ; 1 bytes @ 0x43
  3432  0063                     	ds	1
  3433  0064                     event_btn_Expose@ret:	
  3434                           
  3435                           ; 1 bytes @ 0x44
  3436  0064                     	ds	1
  3437  0065                     event_btn_Expose@temp:	
  3438                           
  3439                           ; 2 bytes @ 0x45
  3440  0065                     	ds	2
  3441  0067                     ?_processButton:	
  3442  0067                     processButton@isPressed:	
  3443                           ; 1 bytes @ 0x47
  3444                           
  3445                           
  3446                           ; 1 bytes @ 0x47
  3447  0067                     	ds	1
  3448  0068                     ??_processButton:	
  3449                           
  3450                           ; 1 bytes @ 0x48
  3451  0068                     	ds	4
  3452  006C                     processButton@button:	
  3453                           
  3454                           ; 1 bytes @ 0x4C
  3455  006C                     	ds	1
  3456  006D                     ??_processButtons:	
  3457                           
  3458                           ; 1 bytes @ 0x4D
  3459  006D                     	ds	2
  3460  006F                     ??_timerProc:	
  3461  006F                     ??_event_timer_Button:	
  3462                           ; 1 bytes @ 0x4F
  3463                           
  3464  006F                     timerProc@time:	
  3465                           ; 1 bytes @ 0x4F
  3466                           
  3467                           
  3468                           ; 1 bytes @ 0x4F
  3469  006F                     	ds	1
  3470  0070                     ??_apMain:	
  3471  0070                     ??_main:	
  3472                           ; 1 bytes @ 0x50
  3473                           
  3474                           
  3475                           	psect	maintext
  3476  17E0                     __pmaintext:	
  3477                           ; 1 bytes @ 0x50
  3478 ;;
  3479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3480 ;;
  3481 ;; *************** function _main *****************
  3482 ;; Defined at:
  3483 ;;		line 11 in file "main.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : B1F/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels required when called:   12
  3503 ;; This function calls:
  3504 ;;		_apInit
  3505 ;;		_apMain
  3506 ;; This function is called by:
  3507 ;;		Startup code after reset
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _main
  3513  17E0                     _main:	
  3514                           
  3515                           ;main.c: 13: apInit();
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3519  17E0  3184  2413  3197   	fcall	_apInit
  3520                           
  3521                           ;main.c: 15: apMain();
  3522  17E3  3188  20D0         	fcall	_apMain
  3523  17E5  3180  2824         	ljmp	start
  3524  17E7                     __end_of_main:	
  3525                           
  3526                           	psect	text1
  3527  08D0                     __ptext1:	
  3528 ;; *************** function _apMain *****************
  3529 ;; Defined at:
  3530 ;;		line 236 in file "ap.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:   11
  3551 ;; This function calls:
  3552 ;;		_timerProc
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _apMain
  3560  08D0                     _apMain:	
  3561  08D0                     l357:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _apMain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3564                           ;ap.c: 240: while(1)
  3565                           
  3566                           
  3567                           ;ap.c: 241: {
  3568                           ;ap.c: 242: timerProc(&Timer[e_button]);
  3569  08D0  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  3570  08D1  3187  27F3  3188   	fcall	_timerProc
  3571                           
  3572                           ;ap.c: 243: timerProc(&Timer[e_expose]);
  3573  08D4  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  3574  08D5  3187  27F3  3188   	fcall	_timerProc
  3575                           
  3576                           ;ap.c: 244: timerProc(&Timer[e_display]);
  3577  08D8  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  3578  08D9  3187  27F3  3188   	fcall	_timerProc
  3579                           
  3580                           ;ap.c: 245: timerProc(&Timer[e_rst]);
  3581  08DC  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  3582  08DD  3187  27F3  3188   	fcall	_timerProc
  3583                           
  3584                           ;ap.c: 246: timerProc(&Timer[e_anodeCurrent]);
  3585  08E0  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  3586  08E1  3187  27F3  3188   	fcall	_timerProc
  3587  08E4  0064               	clrwdt	;# 
  3588  08E5  28D0               	goto	l357
  3589  08E6                     __end_of_apMain:	
  3590                           
  3591                           	psect	text2
  3592  07F3                     __ptext2:	
  3593 ;; *************** function _timerProc *****************
  3594 ;; Defined at:
  3595 ;;		line 19 in file "timer.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  time            1    wreg     PTR struct .
  3598 ;;		 -> Timer(48), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  time            1   79[BANK0 ] PTR struct .
  3601 ;;		 -> Timer(48), 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;Total ram usage:        1 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:   10
  3618 ;; This function calls:
  3619 ;;		_event_anodeCurrent
  3620 ;;		_event_display
  3621 ;;		_event_expose
  3622 ;;		_event_rst
  3623 ;;		_event_timer_Button
  3624 ;; This function is called by:
  3625 ;;		_apMain
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           
  3630                           ;psect for function _timerProc
  3631  07F3                     _timerProc:	
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _timerProc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3635                           ;timerProc@time stored from wreg
  3636  07F3  0020               	movlb	0	; select bank0
  3637  07F4  00EF               	movwf	timerProc@time
  3638                           
  3639                           ;timer.c: 21: time->timeProc();
  3640  07F5  086F               	movf	timerProc@time,w
  3641  07F6  3E06               	addlw	6
  3642  07F7  0086               	movwf	6
  3643  07F8  0187               	clrf	7
  3644  07F9  3F41               	moviw [1]fsr1
  3645  07FA  008A               	movwf	10
  3646  07FB  3F40               	moviw [0]fsr1
  3647  07FC  000A               	callw
  3648  07FD  3187               	pagesel	$
  3649  07FE  0008               	return
  3650  07FF                     __end_of_timerProc:	
  3651                           
  3652                           	psect	text3
  3653  0263                     __ptext3:	
  3654 ;; *************** function _event_anodeCurrent *****************
  3655 ;; Defined at:
  3656 ;;		line 148 in file "ap.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    5
  3677 ;; This function calls:
  3678 ;;		___ftadd
  3679 ;;		___ftge
  3680 ;;		___ftsub
  3681 ;;		_pwmInit_ccp2
  3682 ;;		_timerGetTick
  3683 ;;		_timerTickClear
  3684 ;; This function is called by:
  3685 ;;		_apInit
  3686 ;;		_timerProc
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _event_anodeCurrent
  3692  0263                     _event_anodeCurrent:	
  3693                           
  3694                           ;ap.c: 150: if(timerGetTick(&Timer[e_anodeCurrent]))
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _event_anodeCurrent: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3698  0263  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  3699  0264  3197  27D9  3182   	fcall	_timerGetTick
  3700  0267  3A00               	xorlw	0
  3701  0268  1903               	skipnz
  3702  0269  0008               	return
  3703                           
  3704                           ;ap.c: 151: {
  3705                           ;ap.c: 152: timerTickClear(&Timer[e_anodeCurrent],1);
  3706  026A  0020               	movlb	0	; select bank0
  3707  026B  01A0               	clrf	timerTickClear@start
  3708  026C  0AA0               	incf	timerTickClear@start,f
  3709  026D  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  3710  026E  3188  20A6  3182   	fcall	_timerTickClear
  3711                           
  3712                           ;ap.c: 154: if(cmd.f_anodeCurrent_serch)
  3713  0271  0021               	movlb	1	; select bank1
  3714  0272  0830               	movf	(_cmd^(0+128)+16),w
  3715  0273  1903               	btfsc	3,2
  3716  0274  2ACF               	goto	l2712
  3717                           
  3718                           ;ap.c: 155: {
  3719                           ;ap.c: 156: if(cmd.v_adc_mA > cmd.v_adc_mA_Adj + 10)
  3720  0275  0822               	movf	(_cmd^(0+128)+2),w
  3721  0276  3E0A               	addlw	10
  3722  0277  0020               	movlb	0	; select bank0
  3723  0278  00E3               	movwf	??_event_anodeCurrent
  3724  0279  3000               	movlw	0
  3725  027A  0021               	movlb	1	; select bank1
  3726  027B  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  3727  027C  0020               	movlb	0	; select bank0
  3728  027D  00E4               	movwf	??_event_anodeCurrent+1
  3729  027E  0021               	movlb	1	; select bank1
  3730  027F  0829               	movf	((_cmd+1)^(0+128)+8),w
  3731  0280  0020               	movlb	0	; select bank0
  3732  0281  0264               	subwf	??_event_anodeCurrent+1,w
  3733  0282  1D03               	skipz
  3734  0283  2A88               	goto	u2875
  3735  0284  0021               	movlb	1	; select bank1
  3736  0285  0828               	movf	(_cmd^(0+128)+8),w
  3737  0286  0020               	movlb	0	; select bank0
  3738  0287  0263               	subwf	??_event_anodeCurrent,w
  3739  0288                     u2875:	
  3740  0288  1803               	skipnc
  3741  0289  2AA9               	goto	l2708
  3742                           
  3743                           ;ap.c: 157: {
  3744                           ;ap.c: 158: cmd.c_anodeCurrent_cnt -= 0.1;
  3745  028A  30CD               	movlw	205
  3746  028B  00B5               	movwf	___ftsub@f2
  3747  028C  30CC               	movlw	204
  3748  028D  00B6               	movwf	___ftsub@f2+1
  3749  028E  303D               	movlw	61
  3750  028F  00B7               	movwf	___ftsub@f2+2
  3751  0290  300D               	movlw	13
  3752  0291  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3753  0292  0086               	movwf	6
  3754  0293  0187               	clrf	7
  3755  0294  3F40               	moviw [0]fsr1
  3756  0295  00B8               	movwf	___ftsub@f1
  3757  0296  3F41               	moviw [1]fsr1
  3758  0297  00B9               	movwf	___ftsub@f1+1
  3759  0298  3F42               	moviw [2]fsr1
  3760  0299  00BA               	movwf	___ftsub@f1+2
  3761  029A  3189  211B  3182   	fcall	___ftsub
  3762  029D  0020               	movlb	0	; select bank0
  3763  029E  0835               	movf	?___ftsub,w
  3764  029F  0021               	movlb	1	; select bank1
  3765  02A0  00AD               	movwf	(_cmd^(0+128)+13)
  3766  02A1  0020               	movlb	0	; select bank0
  3767  02A2  0836               	movf	?___ftsub+1,w
  3768  02A3  0021               	movlb	1	; select bank1
  3769  02A4  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3770  02A5  0020               	movlb	0	; select bank0
  3771  02A6  0837               	movf	?___ftsub+2,w
  3772  02A7  0021               	movlb	1	; select bank1
  3773  02A8  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3774  02A9                     l2708:	
  3775                           
  3776                           ;ap.c: 159: }if(cmd.v_adc_mA < cmd.v_adc_mA_Adj - 10)
  3777  02A9  0021               	movlb	1	; select bank1
  3778  02AA  0822               	movf	(_cmd^(0+128)+2),w
  3779  02AB  3EF6               	addlw	246
  3780  02AC  0020               	movlb	0	; select bank0
  3781  02AD  00E3               	movwf	??_event_anodeCurrent
  3782  02AE  30FF               	movlw	255
  3783  02AF  0021               	movlb	1	; select bank1
  3784  02B0  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  3785  02B1  0020               	movlb	0	; select bank0
  3786  02B2  00E4               	movwf	??_event_anodeCurrent+1
  3787  02B3  0864               	movf	??_event_anodeCurrent+1,w
  3788  02B4  0021               	movlb	1	; select bank1
  3789  02B5  0229               	subwf	((_cmd+1)^(0+128)+8),w
  3790  02B6  1D03               	skipz
  3791  02B7  2ABC               	goto	u2885
  3792  02B8  0020               	movlb	0	; select bank0
  3793  02B9  0863               	movf	??_event_anodeCurrent,w
  3794  02BA  0021               	movlb	1	; select bank1
  3795  02BB  0228               	subwf	(_cmd^(0+128)+8),w
  3796  02BC                     u2885:	
  3797  02BC  1803               	skipnc
  3798  02BD  2AEF               	goto	l348
  3799                           
  3800                           ;ap.c: 160: {
  3801                           ;ap.c: 161: cmd.c_anodeCurrent_cnt += 0.1;
  3802  02BE  30CD               	movlw	205
  3803  02BF  0020               	movlb	0	; select bank0
  3804  02C0  00A8               	movwf	___ftadd@f1
  3805  02C1  30CC               	movlw	204
  3806  02C2  00A9               	movwf	___ftadd@f1+1
  3807  02C3  303D               	movlw	61
  3808  02C4  00AA               	movwf	___ftadd@f1+2
  3809  02C5  300D               	movlw	13
  3810  02C6  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3811  02C7  0086               	movwf	6
  3812  02C8  0187               	clrf	7
  3813  02C9  3F40               	moviw [0]fsr1
  3814  02CA  00AB               	movwf	___ftadd@f2
  3815  02CB  3F41               	moviw [1]fsr1
  3816  02CC  00AC               	movwf	___ftadd@f2+1
  3817  02CD  3F42               	moviw [2]fsr1
  3818  02CE  2ADF               	goto	L1
  3819  02CF                     l2712:	
  3820                           ;ap.c: 162: }
  3821                           ;ap.c: 163: }else{
  3822                           
  3823                           
  3824                           ;ap.c: 164: cmd.c_anodeCurrent_cnt +=0.1;
  3825  02CF  30CD               	movlw	205
  3826  02D0  0020               	movlb	0	; select bank0
  3827  02D1  00A8               	movwf	___ftadd@f1
  3828  02D2  30CC               	movlw	204
  3829  02D3  00A9               	movwf	___ftadd@f1+1
  3830  02D4  303D               	movlw	61
  3831  02D5  00AA               	movwf	___ftadd@f1+2
  3832  02D6  300D               	movlw	13
  3833  02D7  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3834  02D8  0086               	movwf	6
  3835  02D9  0187               	clrf	7
  3836  02DA  3F40               	moviw [0]fsr1
  3837  02DB  00AB               	movwf	___ftadd@f2
  3838  02DC  3F41               	moviw [1]fsr1
  3839  02DD  00AC               	movwf	___ftadd@f2+1
  3840  02DE  3F42               	moviw [2]fsr1
  3841  02DF                     L1:	
  3842  02DF  00AD               	movwf	___ftadd@f2+2
  3843  02E0  3181  216D  3182   	fcall	___ftadd
  3844  02E3  0020               	movlb	0	; select bank0
  3845  02E4  0828               	movf	?___ftadd,w
  3846  02E5  0021               	movlb	1	; select bank1
  3847  02E6  00AD               	movwf	(_cmd^(0+128)+13)
  3848  02E7  0020               	movlb	0	; select bank0
  3849  02E8  0829               	movf	?___ftadd+1,w
  3850  02E9  0021               	movlb	1	; select bank1
  3851  02EA  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3852  02EB  0020               	movlb	0	; select bank0
  3853  02EC  082A               	movf	?___ftadd+2,w
  3854  02ED  0021               	movlb	1	; select bank1
  3855  02EE  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3856  02EF                     l348:	
  3857                           
  3858                           ;ap.c: 165: }
  3859                           ;ap.c: 167: if(cmd.c_anodeCurrent_cnt > 95)
  3860  02EF  3000               	movlw	0
  3861  02F0  0020               	movlb	0	; select bank0
  3862  02F1  00A0               	movwf	___ftge@ff1
  3863  02F2  30BE               	movlw	190
  3864  02F3  00A1               	movwf	___ftge@ff1+1
  3865  02F4  3042               	movlw	66
  3866  02F5  00A2               	movwf	___ftge@ff1+2
  3867  02F6  300D               	movlw	13
  3868  02F7  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3869  02F8  0086               	movwf	6
  3870  02F9  0187               	clrf	7
  3871  02FA  3F40               	moviw [0]fsr1
  3872  02FB  00A3               	movwf	___ftge@ff2
  3873  02FC  3F41               	moviw [1]fsr1
  3874  02FD  00A4               	movwf	___ftge@ff2+1
  3875  02FE  3F42               	moviw [2]fsr1
  3876  02FF  00A5               	movwf	___ftge@ff2+2
  3877  0300  318B  2309  3182   	fcall	___ftge
  3878  0303  1803               	btfsc	3,0
  3879  0304  2B0C               	goto	l2716
  3880                           
  3881                           ;ap.c: 168: {
  3882                           ;ap.c: 169: cmd.c_anodeCurrent_cnt = 95;
  3883  0305  3000               	movlw	0
  3884  0306  0021               	movlb	1	; select bank1
  3885  0307  00AD               	movwf	(_cmd^(0+128)+13)
  3886  0308  30BE               	movlw	190
  3887  0309  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3888  030A  3042               	movlw	66
  3889  030B  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3890  030C                     l2716:	
  3891                           
  3892                           ;ap.c: 170: }if(cmd.c_anodeCurrent_cnt < 5)
  3893  030C  300D               	movlw	13
  3894  030D  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3895  030E  0086               	movwf	6
  3896  030F  0187               	clrf	7
  3897  0310  3F40               	moviw [0]fsr1
  3898  0311  0020               	movlb	0	; select bank0
  3899  0312  00A0               	movwf	___ftge@ff1
  3900  0313  3F41               	moviw [1]fsr1
  3901  0314  00A1               	movwf	___ftge@ff1+1
  3902  0315  3F42               	moviw [2]fsr1
  3903  0316  00A2               	movwf	___ftge@ff1+2
  3904  0317  3000               	movlw	0
  3905  0318  00A3               	movwf	___ftge@ff2
  3906  0319  30A0               	movlw	160
  3907  031A  00A4               	movwf	___ftge@ff2+1
  3908  031B  3040               	movlw	64
  3909  031C  00A5               	movwf	___ftge@ff2+2
  3910  031D  318B  2309  3182   	fcall	___ftge
  3911  0320  1803               	btfsc	3,0
  3912  0321  2B29               	goto	l2720
  3913                           
  3914                           ;ap.c: 171: {
  3915                           ;ap.c: 172: cmd.c_anodeCurrent_cnt = 5;
  3916  0322  3000               	movlw	0
  3917  0323  0021               	movlb	1	; select bank1
  3918  0324  00AD               	movwf	(_cmd^(0+128)+13)
  3919  0325  30A0               	movlw	160
  3920  0326  00AE               	movwf	((_cmd+1)^(0+128)+13)
  3921  0327  3040               	movlw	64
  3922  0328  00AF               	movwf	((_cmd+2)^(0+128)+13)
  3923  0329                     l2720:	
  3924                           
  3925                           ;ap.c: 173: }
  3926                           ;ap.c: 175: pwmInit_ccp2(1000,cmd.c_anodeCurrent_cnt);
  3927  0329  30E8               	movlw	232
  3928  032A  0020               	movlb	0	; select bank0
  3929  032B  00DA               	movwf	pwmInit_ccp2@freq
  3930  032C  3003               	movlw	3
  3931  032D  00DB               	movwf	pwmInit_ccp2@freq+1
  3932  032E  300D               	movlw	13
  3933  032F  3EA0               	addlw	(low (_cmd| 0))& (0+255)
  3934  0330  0086               	movwf	6
  3935  0331  0187               	clrf	7
  3936  0332  3F40               	moviw [0]fsr1
  3937  0333  00DC               	movwf	pwmInit_ccp2@duty
  3938  0334  3F41               	moviw [1]fsr1
  3939  0335  00DD               	movwf	pwmInit_ccp2@duty+1
  3940  0336  3F42               	moviw [2]fsr1
  3941  0337  00DE               	movwf	pwmInit_ccp2@duty+2
  3942  0338  318F  2766         	fcall	_pwmInit_ccp2
  3943  033A  0008               	return
  3944  033B                     __end_of_event_anodeCurrent:	
  3945                           
  3946                           	psect	text4
  3947  0863                     __ptext4:	
  3948 ;; *************** function _event_rst *****************
  3949 ;; Defined at:
  3950 ;;		line 136 in file "ap.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    3
  3971 ;; This function calls:
  3972 ;;		_timerGetTick
  3973 ;;		_timerTickClear
  3974 ;; This function is called by:
  3975 ;;		_apInit
  3976 ;;		_timerProc
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _event_rst
  3982  0863                     _event_rst:	
  3983                           
  3984                           ;ap.c: 138: if(timerGetTick(&Timer[e_rst]))
  3985                           
  3986                           ;incstack = 0
  3987                           ; Regs used in _event_rst: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3988  0863  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  3989  0864  3197  27D9  3188   	fcall	_timerGetTick
  3990  0867  3A00               	xorlw	0
  3991  0868  1903               	skipnz
  3992  0869  0008               	return
  3993                           
  3994                           ;ap.c: 139: {
  3995                           ;ap.c: 140: timerTickClear(&Timer[e_rst],0);
  3996  086A  0020               	movlb	0	; select bank0
  3997  086B  01A0               	clrf	timerTickClear@start
  3998  086C  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  3999  086D  3188  20A6         	fcall	_timerTickClear
  4000                           
  4001                           ;ap.c: 142: LATBbits.LATB4 = 1;
  4002  086F  0022               	movlb	2	; select bank2
  4003  0870  160D               	bsf	13,4	;volatile
  4004  0871  0008               	return
  4005  0872                     __end_of_event_rst:	
  4006                           
  4007                           	psect	text5
  4008  033B                     __ptext5:	
  4009 ;; *************** function _event_display *****************
  4010 ;; Defined at:
  4011 ;;		line 89 in file "ap.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    7
  4032 ;; This function calls:
  4033 ;;		_I2C_AS1115_Write
  4034 ;;		_adcRead
  4035 ;;		_disp_kv
  4036 ;;		_disp_ma_result
  4037 ;;		_timerEventStart
  4038 ;;		_timerGetTick
  4039 ;;		_timerTickClear
  4040 ;; This function is called by:
  4041 ;;		_apInit
  4042 ;;		_timerProc
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _event_display
  4048  033B                     _event_display:	
  4049                           
  4050                           ;ap.c: 91: if(timerGetTick(&Timer[e_display]))
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _event_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4054  033B  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  4055  033C  3197  27D9  3183   	fcall	_timerGetTick
  4056  033F  3A00               	xorlw	0
  4057  0340  1903               	skipnz
  4058  0341  0008               	return
  4059                           
  4060                           ;ap.c: 92: {
  4061                           ;ap.c: 93: timerTickClear(&Timer[e_display],1);
  4062  0342  0020               	movlb	0	; select bank0
  4063  0343  01A0               	clrf	timerTickClear@start
  4064  0344  0AA0               	incf	timerTickClear@start,f
  4065  0345  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  4066  0346  3188  20A6  3183   	fcall	_timerTickClear
  4067                           
  4068                           ;ap.c: 95: I2C_AS1115_Write(SHUTDOWN,NORMAL_OPERATION);
  4069  0349  0020               	movlb	0	; select bank0
  4070  034A  01B9               	clrf	I2C_AS1115_Write@data
  4071  034B  0AB9               	incf	I2C_AS1115_Write@data,f
  4072  034C  300C               	movlw	12
  4073  034D  3189  2139  3183   	fcall	_I2C_AS1115_Write
  4074                           
  4075                           ;ap.c: 96: I2C_AS1115_Write(GLOBAL_INTENSITY,7);
  4076  0350  3007               	movlw	7
  4077  0351  0020               	movlb	0	; select bank0
  4078  0352  00E2               	movwf	??_event_display
  4079  0353  0862               	movf	??_event_display,w
  4080  0354  00B9               	movwf	I2C_AS1115_Write@data
  4081  0355  300A               	movlw	10
  4082  0356  3189  2139  3183   	fcall	_I2C_AS1115_Write
  4083                           
  4084                           ;ap.c: 97: I2C_AS1115_Write(DECODE_MODE,0x3F);
  4085  0359  303F               	movlw	63
  4086  035A  0020               	movlb	0	; select bank0
  4087  035B  00E2               	movwf	??_event_display
  4088  035C  0862               	movf	??_event_display,w
  4089  035D  00B9               	movwf	I2C_AS1115_Write@data
  4090  035E  3009               	movlw	9
  4091  035F  3189  2139  3183   	fcall	_I2C_AS1115_Write
  4092                           
  4093                           ;ap.c: 98: I2C_AS1115_Write(SCAN_LIMIT,0x05);
  4094  0362  3005               	movlw	5
  4095  0363  0020               	movlb	0	; select bank0
  4096  0364  00E2               	movwf	??_event_display
  4097  0365  0862               	movf	??_event_display,w
  4098  0366  00B9               	movwf	I2C_AS1115_Write@data
  4099  0367  300B               	movlw	11
  4100  0368  3189  2139  3183   	fcall	_I2C_AS1115_Write
  4101                           
  4102                           ;ap.c: 100: if(cmd.f_XRAY_ON)
  4103  036B  0021               	movlb	1	; select bank1
  4104  036C  082C               	movf	(_cmd^(0+128)+12),w
  4105  036D  1903               	btfsc	3,2
  4106  036E  2BE4               	goto	l2688
  4107                           
  4108                           ;ap.c: 101: {
  4109                           ;ap.c: 102: cmd.v_adc_kV = adcRead(3);
  4110  036F  3003               	movlw	3
  4111  0370  3189  21E9  3183   	fcall	_adcRead
  4112  0373  0020               	movlb	0	; select bank0
  4113  0374  0821               	movf	?_adcRead+1,w
  4114  0375  0021               	movlb	1	; select bank1
  4115  0376  00A7               	movwf	((_cmd+1)^(0+128)+6)
  4116  0377  0020               	movlb	0	; select bank0
  4117  0378  0820               	movf	?_adcRead,w
  4118  0379  0021               	movlb	1	; select bank1
  4119  037A  00A6               	movwf	(_cmd^(0+128)+6)
  4120                           
  4121                           ;ap.c: 103: cmd.v_adc_mA = adcRead(4);
  4122  037B  3004               	movlw	4
  4123  037C  3189  21E9  3183   	fcall	_adcRead
  4124  037F  0020               	movlb	0	; select bank0
  4125  0380  0821               	movf	?_adcRead+1,w
  4126  0381  0021               	movlb	1	; select bank1
  4127  0382  00A9               	movwf	((_cmd+1)^(0+128)+8)
  4128  0383  0020               	movlb	0	; select bank0
  4129  0384  0820               	movf	?_adcRead,w
  4130  0385  0021               	movlb	1	; select bank1
  4131  0386  00A8               	movwf	(_cmd^(0+128)+8)
  4132                           
  4133                           ;ap.c: 104: disp_kv(cmd.v_adc_kV);
  4134  0387  0827               	movf	((_cmd+1)^(0+128)+6),w
  4135  0388  0020               	movlb	0	; select bank0
  4136  0389  00DB               	movwf	disp_kv@data+1
  4137  038A  0021               	movlb	1	; select bank1
  4138  038B  0826               	movf	(_cmd^(0+128)+6),w
  4139  038C  0020               	movlb	0	; select bank0
  4140  038D  00DA               	movwf	disp_kv@data
  4141  038E  3180  2039  3183   	fcall	_disp_kv
  4142                           
  4143                           ;ap.c: 105: disp_ma_result(cmd.v_adc_mA);
  4144  0391  0021               	movlb	1	; select bank1
  4145  0392  0829               	movf	((_cmd+1)^(0+128)+8),w
  4146  0393  0020               	movlb	0	; select bank0
  4147  0394  00DB               	movwf	disp_ma_result@data+1
  4148  0395  0021               	movlb	1	; select bank1
  4149  0396  0828               	movf	(_cmd^(0+128)+8),w
  4150  0397  0020               	movlb	0	; select bank0
  4151  0398  00DA               	movwf	disp_ma_result@data
  4152  0399  3185  259D  3183   	fcall	_disp_ma_result
  4153                           
  4154                           ;ap.c: 107: if(cmd.v_adc_mA > cmd.f_anodeCurrent_serch)
  4155  039C  0021               	movlb	1	; select bank1
  4156  039D  0830               	movf	(_cmd^(0+128)+16),w
  4157  039E  0020               	movlb	0	; select bank0
  4158  039F  00E2               	movwf	??_event_display
  4159  03A0  01E3               	clrf	??_event_display+1
  4160  03A1  0021               	movlb	1	; select bank1
  4161  03A2  0829               	movf	((_cmd+1)^(0+128)+8),w
  4162  03A3  0020               	movlb	0	; select bank0
  4163  03A4  0263               	subwf	??_event_display+1,w
  4164  03A5  1D03               	skipz
  4165  03A6  2BAB               	goto	u2815
  4166  03A7  0021               	movlb	1	; select bank1
  4167  03A8  0828               	movf	(_cmd^(0+128)+8),w
  4168  03A9  0020               	movlb	0	; select bank0
  4169  03AA  0262               	subwf	??_event_display,w
  4170  03AB                     u2815:	
  4171  03AB  1803               	skipnc
  4172  03AC  2BB2               	goto	l2680
  4173                           
  4174                           ;ap.c: 108: {
  4175                           ;ap.c: 109: timerTickClear(&Timer[e_anodeCurrent],0);
  4176  03AD  01A0               	clrf	timerTickClear@start
  4177  03AE  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4178  03AF  3188  20A6  3183   	fcall	_timerTickClear
  4179  03B2                     l2680:	
  4180                           
  4181                           ;ap.c: 110: }
  4182                           ;ap.c: 112: if(cmd.v_adc_mA > (cmd.v_adc_mA_Adj) + 20 || cmd.v_adc_mA < (cmd.v_adc_mA_Ad
      +                          j) - 20)
  4183  03B2  0021               	movlb	1	; select bank1
  4184  03B3  0822               	movf	(_cmd^(0+128)+2),w
  4185  03B4  3E14               	addlw	20
  4186  03B5  0020               	movlb	0	; select bank0
  4187  03B6  00E2               	movwf	??_event_display
  4188  03B7  3000               	movlw	0
  4189  03B8  0021               	movlb	1	; select bank1
  4190  03B9  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  4191  03BA  0020               	movlb	0	; select bank0
  4192  03BB  00E3               	movwf	??_event_display+1
  4193  03BC  0021               	movlb	1	; select bank1
  4194  03BD  0829               	movf	((_cmd+1)^(0+128)+8),w
  4195  03BE  0020               	movlb	0	; select bank0
  4196  03BF  0263               	subwf	??_event_display+1,w
  4197  03C0  1D03               	skipz
  4198  03C1  2BC6               	goto	u2825
  4199  03C2  0021               	movlb	1	; select bank1
  4200  03C3  0828               	movf	(_cmd^(0+128)+8),w
  4201  03C4  0020               	movlb	0	; select bank0
  4202  03C5  0262               	subwf	??_event_display,w
  4203  03C6                     u2825:	
  4204  03C6  1C03               	skipc
  4205  03C7  2BDD               	goto	l2684
  4206  03C8  0021               	movlb	1	; select bank1
  4207  03C9  0822               	movf	(_cmd^(0+128)+2),w
  4208  03CA  3EEC               	addlw	236
  4209  03CB  0020               	movlb	0	; select bank0
  4210  03CC  00E2               	movwf	??_event_display
  4211  03CD  30FF               	movlw	255
  4212  03CE  0021               	movlb	1	; select bank1
  4213  03CF  3D23               	addwfc	((_cmd+1)^(0+128)+2),w
  4214  03D0  0020               	movlb	0	; select bank0
  4215  03D1  00E3               	movwf	??_event_display+1
  4216  03D2  0863               	movf	??_event_display+1,w
  4217  03D3  0021               	movlb	1	; select bank1
  4218  03D4  0229               	subwf	((_cmd+1)^(0+128)+8),w
  4219  03D5  1D03               	skipz
  4220  03D6  2BDB               	goto	u2835
  4221  03D7  0020               	movlb	0	; select bank0
  4222  03D8  0862               	movf	??_event_display,w
  4223  03D9  0021               	movlb	1	; select bank1
  4224  03DA  0228               	subwf	(_cmd^(0+128)+8),w
  4225  03DB                     u2835:	
  4226  03DB  1803               	skipnc
  4227  03DC  0008               	return
  4228  03DD                     l2684:	
  4229                           
  4230                           ;ap.c: 113: {
  4231                           ;ap.c: 114: timerEventStart(&Timer[e_anodeCurrent]);
  4232  03DD  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4233  03DE  3197  27EF         	fcall	_timerEventStart
  4234                           
  4235                           ;ap.c: 115: cmd.f_anodeCurrent_serch = 1;
  4236  03E0  0021               	movlb	1	; select bank1
  4237  03E1  01B0               	clrf	(_cmd^(0+128)+16)
  4238  03E2  0AB0               	incf	(_cmd^(0+128)+16),f
  4239                           
  4240                           ;ap.c: 116: }
  4241                           ;ap.c: 118: }else
  4242  03E3  0008               	return
  4243  03E4                     l2688:	
  4244                           
  4245                           ;ap.c: 119: {
  4246                           ;ap.c: 120: cmd.v_adc_kV_Adj = adcRead(2);
  4247  03E4  3002               	movlw	2
  4248  03E5  3189  21E9  3183   	fcall	_adcRead
  4249  03E8  0020               	movlb	0	; select bank0
  4250  03E9  0821               	movf	?_adcRead+1,w
  4251  03EA  0021               	movlb	1	; select bank1
  4252  03EB  00A5               	movwf	((_cmd+1)^(0+128)+4)
  4253  03EC  0020               	movlb	0	; select bank0
  4254  03ED  0820               	movf	?_adcRead,w
  4255  03EE  0021               	movlb	1	; select bank1
  4256  03EF  00A4               	movwf	(_cmd^(0+128)+4)
  4257                           
  4258                           ;ap.c: 121: cmd.v_adc_mA_Adj = adcRead(1);
  4259  03F0  3001               	movlw	1
  4260  03F1  3189  21E9  3183   	fcall	_adcRead
  4261  03F4  0020               	movlb	0	; select bank0
  4262  03F5  0821               	movf	?_adcRead+1,w
  4263  03F6  0021               	movlb	1	; select bank1
  4264  03F7  00A3               	movwf	((_cmd+1)^(0+128)+2)
  4265  03F8  0020               	movlb	0	; select bank0
  4266  03F9  0820               	movf	?_adcRead,w
  4267  03FA  0021               	movlb	1	; select bank1
  4268  03FB  00A2               	movwf	(_cmd^(0+128)+2)
  4269                           
  4270                           ;ap.c: 126: disp_kv(cmd.v_adc_kV_Adj);
  4271  03FC  0825               	movf	((_cmd+1)^(0+128)+4),w
  4272  03FD  0020               	movlb	0	; select bank0
  4273  03FE  00DB               	movwf	disp_kv@data+1
  4274  03FF  0021               	movlb	1	; select bank1
  4275  0400  0824               	movf	(_cmd^(0+128)+4),w
  4276  0401  0020               	movlb	0	; select bank0
  4277  0402  00DA               	movwf	disp_kv@data
  4278  0403  3180  2039  3183   	fcall	_disp_kv
  4279                           
  4280                           ;ap.c: 127: disp_ma_result(cmd.v_adc_mA_Adj);
  4281  0406  0021               	movlb	1	; select bank1
  4282  0407  0823               	movf	((_cmd+1)^(0+128)+2),w
  4283  0408  0020               	movlb	0	; select bank0
  4284  0409  00DB               	movwf	disp_ma_result@data+1
  4285  040A  0021               	movlb	1	; select bank1
  4286  040B  0822               	movf	(_cmd^(0+128)+2),w
  4287  040C  0020               	movlb	0	; select bank0
  4288  040D  00DA               	movwf	disp_ma_result@data
  4289  040E  3185  259D         	fcall	_disp_ma_result
  4290                           
  4291                           ;ap.c: 128: cmd.f_anodeCurrent_serch = 0;
  4292  0410  0021               	movlb	1	; select bank1
  4293  0411  01B0               	clrf	(_cmd^(0+128)+16)
  4294  0412  0008               	return
  4295  0413                     __end_of_event_display:	
  4296                           
  4297                           	psect	text6
  4298  0855                     __ptext6:	
  4299 ;; *************** function _event_expose *****************
  4300 ;; Defined at:
  4301 ;;		line 81 in file "ap.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    3
  4322 ;; This function calls:
  4323 ;;		_timerGetTick
  4324 ;;		_timerTickClear
  4325 ;; This function is called by:
  4326 ;;		_apInit
  4327 ;;		_timerProc
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _event_expose
  4333  0855                     _event_expose:	
  4334                           
  4335                           ;ap.c: 83: if(timerGetTick(&Timer[e_expose]))
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _event_expose: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4339  0855  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  4340  0856  3197  27D9  3188   	fcall	_timerGetTick
  4341  0859  3A00               	xorlw	0
  4342  085A  1903               	skipnz
  4343  085B  0008               	return
  4344                           
  4345                           ;ap.c: 84: {
  4346                           ;ap.c: 85: timerTickClear(&Timer[e_expose],1);
  4347  085C  0020               	movlb	0	; select bank0
  4348  085D  01A0               	clrf	timerTickClear@start
  4349  085E  0AA0               	incf	timerTickClear@start,f
  4350  085F  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  4351  0860  3188  20A6         	fcall	_timerTickClear
  4352  0862  0008               	return
  4353  0863                     __end_of_event_expose:	
  4354                           
  4355                           	psect	text7
  4356  0883                     __ptext7:	
  4357 ;; *************** function _event_timer_Button *****************
  4358 ;; Defined at:
  4359 ;;		line 71 in file "ap.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    9
  4380 ;; This function calls:
  4381 ;;		_processButtons
  4382 ;;		_timerGetTick
  4383 ;;		_timerTickClear
  4384 ;; This function is called by:
  4385 ;;		_apInit
  4386 ;;		_timerProc
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           
  4391                           ;psect for function _event_timer_Button
  4392  0883                     _event_timer_Button:	
  4393                           
  4394                           ;ap.c: 73: if(timerGetTick(&Timer[e_button]))
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in _event_timer_Button: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4398  0883  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  4399  0884  3197  27D9  3188   	fcall	_timerGetTick
  4400  0887  3A00               	xorlw	0
  4401  0888  1903               	skipnz
  4402  0889  0008               	return
  4403                           
  4404                           ;ap.c: 74: {
  4405                           ;ap.c: 75: timerTickClear(&Timer[e_button],1);
  4406  088A  0020               	movlb	0	; select bank0
  4407  088B  01A0               	clrf	timerTickClear@start
  4408  088C  0AA0               	incf	timerTickClear@start,f
  4409  088D  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  4410  088E  3188  20A6  3188   	fcall	_timerTickClear
  4411                           
  4412                           ;ap.c: 77: processButtons();
  4413  0891  318A  226C         	fcall	_processButtons
  4414  0893  0008               	return
  4415  0894                     __end_of_event_timer_Button:	
  4416                           
  4417                           	psect	text8
  4418  0A6C                     __ptext8:	
  4419 ;; *************** function _processButtons *****************
  4420 ;; Defined at:
  4421 ;;		line 32 in file "button.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  i               1    2[BANK1 ] unsigned char 
  4426 ;;  isPressed       2    0[BANK1 ] unsigned char [2]
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;Total ram usage:        5 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    8
  4443 ;; This function calls:
  4444 ;;		___bmul
  4445 ;;		_processButton
  4446 ;; This function is called by:
  4447 ;;		_event_timer_Button
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _processButtons
  4453  0A6C                     _processButtons:	
  4454                           
  4455                           ;button.c: 35: bool isPressed[BTN_COUNT];
  4456                           ;button.c: 36: isPressed[BTN_1] = PORTFbits.RF1;
  4457                           
  4458                           ;incstack = 0
  4459                           ; Regs used in _processButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4460  0A6C  3000               	movlw	0
  4461  0A6D  0025               	movlb	5	; select bank5
  4462  0A6E  188C               	btfsc	12,1	;volatile
  4463  0A6F  3001               	movlw	1
  4464  0A70  0021               	movlb	1	; select bank1
  4465  0A71  00E5               	movwf	processButtons@isPressed^(0+128)
  4466                           
  4467                           ;button.c: 37: isPressed[BTN_2] = PORTFbits.RF0;
  4468  0A72  3000               	movlw	0
  4469  0A73  0025               	movlb	5	; select bank5
  4470  0A74  180C               	btfsc	12,0	;volatile
  4471  0A75  3001               	movlw	1
  4472  0A76  0021               	movlb	1	; select bank1
  4473  0A77  00E6               	movwf	(processButtons@isPressed^(0+128)+1)
  4474                           
  4475                           ;button.c: 40: for(byte i=BTN_COUNT;i--;)
  4476  0A78  3002               	movlw	2
  4477  0A79  0020               	movlb	0	; select bank0
  4478  0A7A  00ED               	movwf	??_processButtons
  4479  0A7B  086D               	movf	??_processButtons,w
  4480  0A7C  0021               	movlb	1	; select bank1
  4481  0A7D  00E7               	movwf	processButtons@i^(0+128)
  4482  0A7E                     l2606:	
  4483  0A7E  3001               	movlw	1
  4484  0A7F  0021               	movlb	1	; select bank1
  4485  0A80  02E7               	subwf	processButtons@i^(0+128),f
  4486  0A81  0A67               	incf	processButtons@i^(0+128),w
  4487  0A82  1903               	btfsc	3,2
  4488  0A83  0008               	return
  4489                           
  4490                           ;button.c: 41: processButton(&buttons[i], isPressed[i]);
  4491  0A84  0867               	movf	processButtons@i^(0+128),w
  4492  0A85  3EE5               	addlw	(low (processButtons@isPressed| 0))& (0+255)
  4493  0A86  0086               	movwf	6
  4494  0A87  0187               	clrf	7
  4495  0A88  0801               	movf	1,w
  4496  0A89  0020               	movlb	0	; select bank0
  4497  0A8A  00ED               	movwf	??_processButtons
  4498  0A8B  086D               	movf	??_processButtons,w
  4499  0A8C  00E7               	movwf	processButton@isPressed
  4500  0A8D  3009               	movlw	9
  4501  0A8E  00EE               	movwf	??_processButtons+1
  4502  0A8F  086E               	movf	??_processButtons+1,w
  4503  0A90  00A0               	movwf	___bmul@multiplicand
  4504  0A91  0021               	movlb	1	; select bank1
  4505  0A92  0867               	movf	processButtons@i^(0+128),w
  4506  0A93  3188  2094  318A   	fcall	___bmul
  4507  0A96  3E20               	addlw	(low (_buttons| (0+256)))& (0+255)
  4508  0A97  318D  25DC  318A   	fcall	_processButton
  4509  0A9A  2A7E               	goto	l2606
  4510  0A9B                     __end_of_processButtons:	
  4511                           
  4512                           	psect	text9
  4513  0DDC                     __ptext9:	
  4514 ;; *************** function _processButton *****************
  4515 ;; Defined at:
  4516 ;;		line 44 in file "button.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  button          1    wreg     PTR struct .
  4519 ;;		 -> buttons(18), 
  4520 ;;  isPressed       1   71[BANK0 ] unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  button          1   76[BANK0 ] PTR struct .
  4523 ;;		 -> buttons(18), 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4533 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;Total ram usage:        6 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    7
  4540 ;; This function calls:
  4541 ;;		_event_btn_Expose
  4542 ;;		_event_btn_Stop
  4543 ;; This function is called by:
  4544 ;;		_processButtons
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _processButton
  4550  0DDC                     _processButton:	
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _processButton: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4554                           ;processButton@button stored from wreg
  4555  0DDC  0020               	movlb	0	; select bank0
  4556  0DDD  00EC               	movwf	processButton@button
  4557                           
  4558                           ;button.c: 46: button->counter <<= 1;
  4559  0DDE  086C               	movf	processButton@button,w
  4560  0DDF  3E05               	addlw	5
  4561  0DE0  0086               	movwf	6
  4562  0DE1  3001               	movlw	1	; select bank2/3
  4563  0DE2  0087               	movwf	7
  4564  0DE3  1003               	clrc
  4565  0DE4  0D81               	rlf	1,f
  4566                           
  4567                           ;button.c: 47: if(isPressed)
  4568  0DE5  0867               	movf	processButton@isPressed,w
  4569  0DE6  1903               	btfsc	3,2
  4570  0DE7  2E48               	goto	l2414
  4571                           
  4572                           ;button.c: 48: {
  4573                           ;button.c: 49: button->counter |= 1;
  4574  0DE8  086C               	movf	processButton@button,w
  4575  0DE9  3E05               	addlw	5
  4576  0DEA  0086               	movwf	6
  4577  0DEB  3001               	movlw	1	; select bank2/3
  4578  0DEC  0087               	movwf	7
  4579  0DED  1401               	bsf	1,0
  4580                           
  4581                           ;button.c: 52: {
  4582                           ;button.c: 54: if(!button->processed)
  4583  0DEE  086C               	movf	processButton@button,w
  4584  0DEF  3E04               	addlw	4
  4585  0DF0  0086               	movwf	6
  4586  0DF1  3001               	movlw	1	; select bank2/3
  4587  0DF2  0087               	movwf	7
  4588  0DF3  0801               	movf	1,w
  4589  0DF4  1D03               	btfss	3,2
  4590  0DF5  2E3C               	goto	l414
  4591                           
  4592                           ;button.c: 55: {
  4593                           ;button.c: 56: if(button->pressedTime <= button->pressCnt)
  4594  0DF6  086C               	movf	processButton@button,w
  4595  0DF7  0086               	movwf	6
  4596  0DF8  3001               	movlw	1	; select bank2/3
  4597  0DF9  0087               	movwf	7
  4598  0DFA  3F40               	moviw [0]fsr1
  4599  0DFB  00E8               	movwf	??_processButton
  4600  0DFC  3F41               	moviw [1]fsr1
  4601  0DFD  00E9               	movwf	??_processButton+1
  4602  0DFE  086C               	movf	processButton@button,w
  4603  0DFF  3E02               	addlw	2
  4604  0E00  0086               	movwf	6
  4605  0E01  3001               	movlw	1	; select bank2/3
  4606  0E02  0087               	movwf	7
  4607  0E03  3F40               	moviw [0]fsr1
  4608  0E04  00EA               	movwf	??_processButton+2
  4609  0E05  3F41               	moviw [1]fsr1
  4610  0E06  00EB               	movwf	??_processButton+3
  4611  0E07  0869               	movf	??_processButton+1,w
  4612  0E08  026B               	subwf	??_processButton+3,w
  4613  0E09  1D03               	skipz
  4614  0E0A  2E0D               	goto	u2225
  4615  0E0B  0868               	movf	??_processButton,w
  4616  0E0C  026A               	subwf	??_processButton+2,w
  4617  0E0D                     u2225:	
  4618  0E0D  1C03               	skipc
  4619  0E0E  2E3C               	goto	l414
  4620                           
  4621                           ;button.c: 57: {
  4622                           ;button.c: 58: button->processed = 1;
  4623  0E0F  086C               	movf	processButton@button,w
  4624  0E10  3E04               	addlw	4
  4625  0E11  0086               	movwf	6
  4626  0E12  3001               	movlw	1	; select bank2/3
  4627  0E13  0087               	movwf	7
  4628  0E14  0181               	clrf	1
  4629  0E15  0A81               	incf	1,f
  4630                           
  4631                           ;button.c: 61: if(!button->funcDone && button->onPress != (0) && button->onPress() )
  4632  0E16  086C               	movf	processButton@button,w
  4633  0E17  3E06               	addlw	6
  4634  0E18  0086               	movwf	6
  4635  0E19  3001               	movlw	1	; select bank2/3
  4636  0E1A  0087               	movwf	7
  4637  0E1B  0801               	movf	1,w
  4638  0E1C  1D03               	btfss	3,2
  4639  0E1D  2E3C               	goto	l414
  4640  0E1E  086C               	movf	processButton@button,w
  4641  0E1F  3E07               	addlw	7
  4642  0E20  0086               	movwf	6
  4643  0E21  3001               	movlw	1	; select bank2/3
  4644  0E22  0087               	movwf	7
  4645  0E23  0016               	moviw fsr1++
  4646  0E24  0401               	iorwf	1,w
  4647  0E25  1903               	btfsc	3,2
  4648  0E26  2E3C               	goto	l414
  4649  0E27  086C               	movf	processButton@button,w
  4650  0E28  3E07               	addlw	7
  4651  0E29  0086               	movwf	6
  4652  0E2A  3001               	movlw	1	; select bank2/3
  4653  0E2B  0087               	movwf	7
  4654  0E2C  3F41               	moviw [1]fsr1
  4655  0E2D  008A               	movwf	10
  4656  0E2E  3F40               	moviw [0]fsr1
  4657  0E2F  000A               	callw
  4658  0E30  318D               	pagesel	$
  4659  0E31  3A00               	xorlw	0
  4660  0E32  1903               	skipnz
  4661  0E33  2E3C               	goto	l414
  4662                           
  4663                           ;button.c: 62: {
  4664                           ;button.c: 63: button->funcDone = 1;
  4665  0E34  0020               	movlb	0	; select bank0
  4666  0E35  086C               	movf	processButton@button,w
  4667  0E36  3E06               	addlw	6
  4668  0E37  0086               	movwf	6
  4669  0E38  3001               	movlw	1	; select bank2/3
  4670  0E39  0087               	movwf	7
  4671  0E3A  0181               	clrf	1
  4672  0E3B  0A81               	incf	1,f
  4673  0E3C                     l414:	
  4674                           
  4675                           ;button.c: 64: }
  4676                           ;button.c: 66: }
  4677                           ;button.c: 67: }
  4678                           ;button.c: 69: button->pressCnt ++;
  4679  0E3C  0020               	movlb	0	; select bank0
  4680  0E3D  086C               	movf	processButton@button,w
  4681  0E3E  3E02               	addlw	2
  4682  0E3F  0086               	movwf	6
  4683  0E40  3001               	movlw	1	; select bank2/3
  4684  0E41  0087               	movwf	7
  4685  0E42  3001               	movlw	1
  4686  0E43  0781               	addwf	1,f
  4687  0E44  3141               	addfsr 1,1
  4688  0E45  1803               	skipnc
  4689  0E46  0A81               	incf	1,f
  4690                           
  4691                           ;button.c: 70: }
  4692                           ;button.c: 71: }
  4693  0E47  0008               	return
  4694  0E48                     l2414:	
  4695                           
  4696                           ;button.c: 72: else
  4697                           ;button.c: 73: {
  4698                           ;button.c: 76: {
  4699                           ;button.c: 77: button->processed = 0;
  4700  0E48  086C               	movf	processButton@button,w
  4701  0E49  3E04               	addlw	4
  4702  0E4A  0086               	movwf	6
  4703  0E4B  3001               	movlw	1	; select bank2/3
  4704  0E4C  0087               	movwf	7
  4705  0E4D  0181               	clrf	1
  4706                           
  4707                           ;button.c: 78: button->funcDone = 0;
  4708  0E4E  086C               	movf	processButton@button,w
  4709  0E4F  3E06               	addlw	6
  4710  0E50  0086               	movwf	6
  4711  0E51  3001               	movlw	1	; select bank2/3
  4712  0E52  0087               	movwf	7
  4713  0E53  0181               	clrf	1
  4714                           
  4715                           ;button.c: 79: button->pressCnt = 0;
  4716  0E54  086C               	movf	processButton@button,w
  4717  0E55  3E02               	addlw	2
  4718  0E56  0086               	movwf	6
  4719  0E57  3001               	movlw	1	; select bank2/3
  4720  0E58  0087               	movwf	7
  4721  0E59  3000               	movlw	0
  4722  0E5A  3FC0               	movwi [0]fsr1
  4723  0E5B  3FC1               	movwi [1]fsr1
  4724  0E5C  0008               	return
  4725  0E5D                     __end_of_processButton:	
  4726                           
  4727                           	psect	text10
  4728  099C                     __ptext10:	
  4729 ;; *************** function _event_btn_Stop *****************
  4730 ;; Defined at:
  4731 ;;		line 46 in file "ap.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  temp            2   31[BANK0 ] unsigned int 
  4736 ;;  ret             1   30[BANK0 ] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      unsigned char 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;Total ram usage:        4 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    6
  4753 ;; This function calls:
  4754 ;;		_I2C_DAC_Write
  4755 ;;		_pwmStop_ccp2
  4756 ;;		_pwmStop_ccp3
  4757 ;;		_timerTickClear
  4758 ;; This function is called by:
  4759 ;;		_apInit
  4760 ;;		_processButton
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _event_btn_Stop
  4766  099C                     _event_btn_Stop:	
  4767                           
  4768                           ;ap.c: 48: bool ret = 1;
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _event_btn_Stop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4772  099C  0020               	movlb	0	; select bank0
  4773  099D  01BE               	clrf	event_btn_Stop@ret
  4774  099E  0ABE               	incf	event_btn_Stop@ret,f
  4775                           
  4776                           ;ap.c: 50: uint16_t temp;
  4777                           ;ap.c: 52: LATCbits.LATC0 = 1;
  4778  099F  0022               	movlb	2	; select bank2
  4779  09A0  140E               	bsf	14,0	;volatile
  4780                           
  4781                           ;ap.c: 53: LATCbits.LATC1 = 1;
  4782  09A1  148E               	bsf	14,1	;volatile
  4783                           
  4784                           ;ap.c: 55: temp = 0;
  4785  09A2  0020               	movlb	0	; select bank0
  4786  09A3  01BF               	clrf	event_btn_Stop@temp
  4787  09A4  01C0               	clrf	event_btn_Stop@temp+1
  4788                           
  4789                           ;ap.c: 56: I2C_DAC_Write(0x00,&temp);
  4790  09A5  303F               	movlw	(low (event_btn_Stop@temp| 0))& (0+255)
  4791  09A6  00BD               	movwf	??_event_btn_Stop
  4792  09A7  083D               	movf	??_event_btn_Stop,w
  4793  09A8  00B9               	movwf	I2C_DAC_Write@data
  4794  09A9  3000               	movlw	0
  4795  09AA  318A  22D0  3189   	fcall	_I2C_DAC_Write
  4796                           
  4797                           ;ap.c: 57: pwmStop_ccp3();
  4798  09AD  3197  27E7  3189   	fcall	_pwmStop_ccp3
  4799                           
  4800                           ;ap.c: 59: pwmStop_ccp2();
  4801  09B0  3197  27CD  3189   	fcall	_pwmStop_ccp2
  4802                           
  4803                           ;ap.c: 60: timerTickClear(&Timer[e_anodeCurrent],0);
  4804  09B3  0020               	movlb	0	; select bank0
  4805  09B4  01A0               	clrf	timerTickClear@start
  4806  09B5  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4807  09B6  3188  20A6         	fcall	_timerTickClear
  4808                           
  4809                           ;ap.c: 62: LATDbits.LATD3 = 0;
  4810  09B8  0022               	movlb	2	; select bank2
  4811  09B9  118F               	bcf	15,3	;volatile
  4812                           
  4813                           ;ap.c: 63: LATEbits.LATE3 = 1;
  4814  09BA  1590               	bsf	16,3	;volatile
  4815                           
  4816                           ;ap.c: 65: cmd.f_XRAY_ON = 0;
  4817  09BB  0021               	movlb	1	; select bank1
  4818  09BC  01AC               	clrf	(_cmd^(0+128)+12)
  4819                           
  4820                           ;ap.c: 67: return ret;
  4821  09BD  0020               	movlb	0	; select bank0
  4822  09BE  083E               	movf	event_btn_Stop@ret,w
  4823  09BF  0008               	return
  4824  09C0                     __end_of_event_btn_Stop:	
  4825                           
  4826                           	psect	text11
  4827  0D0C                     __ptext11:	
  4828 ;; *************** function _event_btn_Expose *****************
  4829 ;; Defined at:
  4830 ;;		line 9 in file "ap.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  temp            2   69[BANK0 ] unsigned int 
  4835 ;;  ret             1   68[BANK0 ] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      unsigned char 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;Total ram usage:        4 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    6
  4852 ;; This function calls:
  4853 ;;		_I2C_DAC_Write
  4854 ;;		_adcTodac
  4855 ;;		_pwmInit_ccp2
  4856 ;;		_pwmInit_ccp3
  4857 ;;		_pwmStart_ccp2
  4858 ;;		_pwmStart_ccp3
  4859 ;;		_timerEventStart
  4860 ;; This function is called by:
  4861 ;;		_apInit
  4862 ;;		_processButton
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _event_btn_Expose
  4868  0D0C                     _event_btn_Expose:	
  4869                           
  4870                           ;ap.c: 11: bool ret = 1;
  4871                           
  4872                           ;incstack = 0
  4873                           ; Regs used in _event_btn_Expose: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4874  0D0C  0020               	movlb	0	; select bank0
  4875  0D0D  01E4               	clrf	event_btn_Expose@ret
  4876  0D0E  0AE4               	incf	event_btn_Expose@ret,f
  4877                           
  4878                           ;ap.c: 13: uint16_t temp;
  4879                           ;ap.c: 17: if(!cmd.f_XRAY_ON)
  4880  0D0F  0021               	movlb	1	; select bank1
  4881  0D10  082C               	movf	(_cmd^(0+128)+12),w
  4882  0D11  1D03               	btfss	3,2
  4883  0D12  2D5E               	goto	l2372
  4884                           
  4885                           ;ap.c: 18: {
  4886                           ;ap.c: 19: temp = adcTodac(cmd.v_adc_kV_Adj);
  4887  0D13  0825               	movf	((_cmd+1)^(0+128)+4),w
  4888  0D14  0020               	movlb	0	; select bank0
  4889  0D15  00DB               	movwf	adcTodac@data+1
  4890  0D16  0021               	movlb	1	; select bank1
  4891  0D17  0824               	movf	(_cmd^(0+128)+4),w
  4892  0D18  0020               	movlb	0	; select bank0
  4893  0D19  00DA               	movwf	adcTodac@data
  4894  0D1A  318A  223F  318D   	fcall	_adcTodac
  4895  0D1D  0020               	movlb	0	; select bank0
  4896  0D1E  085B               	movf	?_adcTodac+1,w
  4897  0D1F  00E6               	movwf	event_btn_Expose@temp+1
  4898  0D20  085A               	movf	?_adcTodac,w
  4899  0D21  00E5               	movwf	event_btn_Expose@temp
  4900                           
  4901                           ;ap.c: 20: I2C_DAC_Write(0x00, &temp);
  4902  0D22  3065               	movlw	(low (event_btn_Expose@temp| 0))& (0+255)
  4903  0D23  00E3               	movwf	??_event_btn_Expose
  4904  0D24  0863               	movf	??_event_btn_Expose,w
  4905  0D25  00B9               	movwf	I2C_DAC_Write@data
  4906  0D26  3000               	movlw	0
  4907  0D27  318A  22D0  318D   	fcall	_I2C_DAC_Write
  4908                           
  4909                           ;ap.c: 21: pwmInit_ccp3(1000, 50);
  4910  0D2A  30E8               	movlw	232
  4911  0D2B  0020               	movlb	0	; select bank0
  4912  0D2C  00DA               	movwf	pwmInit_ccp3@freq
  4913  0D2D  3003               	movlw	3
  4914  0D2E  00DB               	movwf	pwmInit_ccp3@freq+1
  4915  0D2F  3000               	movlw	0
  4916  0D30  00DC               	movwf	pwmInit_ccp3@duty
  4917  0D31  3048               	movlw	72
  4918  0D32  00DD               	movwf	pwmInit_ccp3@duty+1
  4919  0D33  3042               	movlw	66
  4920  0D34  00DE               	movwf	pwmInit_ccp3@duty+2
  4921  0D35  3186  26F3  318D   	fcall	_pwmInit_ccp3
  4922                           
  4923                           ;ap.c: 22: pwmStart_ccp3();
  4924  0D38  3188  2047  318D   	fcall	_pwmStart_ccp3
  4925                           
  4926                           ;ap.c: 24: cmd.c_anodeCurrent_cnt = 5;
  4927  0D3B  3000               	movlw	0
  4928  0D3C  0021               	movlb	1	; select bank1
  4929  0D3D  00AD               	movwf	(_cmd^(0+128)+13)
  4930  0D3E  30A0               	movlw	160
  4931  0D3F  00AE               	movwf	((_cmd+1)^(0+128)+13)
  4932  0D40  3040               	movlw	64
  4933  0D41  00AF               	movwf	((_cmd+2)^(0+128)+13)
  4934                           
  4935                           ;ap.c: 25: pwmInit_ccp2(1000, 0);
  4936  0D42  30E8               	movlw	232
  4937  0D43  0020               	movlb	0	; select bank0
  4938  0D44  00DA               	movwf	pwmInit_ccp2@freq
  4939  0D45  3003               	movlw	3
  4940  0D46  00DB               	movwf	pwmInit_ccp2@freq+1
  4941  0D47  3000               	movlw	0
  4942  0D48  00DC               	movwf	pwmInit_ccp2@duty
  4943  0D49  3000               	movlw	0
  4944  0D4A  00DD               	movwf	pwmInit_ccp2@duty+1
  4945  0D4B  3000               	movlw	0
  4946  0D4C  00DE               	movwf	pwmInit_ccp2@duty+2
  4947  0D4D  318F  2766  318D   	fcall	_pwmInit_ccp2
  4948                           
  4949                           ;ap.c: 26: pwmStart_ccp2();
  4950  0D50  3188  2039  318D   	fcall	_pwmStart_ccp2
  4951                           
  4952                           ;ap.c: 27: timerEventStart(&Timer[e_anodeCurrent]);
  4953  0D53  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  4954  0D54  3197  27EF         	fcall	_timerEventStart
  4955                           
  4956                           ;ap.c: 32: LATDbits.LATD3 = 1;
  4957  0D56  0022               	movlb	2	; select bank2
  4958  0D57  158F               	bsf	15,3	;volatile
  4959                           
  4960                           ;ap.c: 33: LATEbits.LATE3 = 0;
  4961  0D58  1190               	bcf	16,3	;volatile
  4962                           
  4963                           ;ap.c: 35: LATCbits.LATC0 = 0;
  4964  0D59  100E               	bcf	14,0	;volatile
  4965                           
  4966                           ;ap.c: 36: LATCbits.LATC1 = 0;
  4967  0D5A  108E               	bcf	14,1	;volatile
  4968                           
  4969                           ;ap.c: 38: cmd.f_XRAY_ON = 1;
  4970  0D5B  0021               	movlb	1	; select bank1
  4971  0D5C  01AC               	clrf	(_cmd^(0+128)+12)
  4972  0D5D  0AAC               	incf	(_cmd^(0+128)+12),f
  4973  0D5E                     l2372:	
  4974                           
  4975                           ;ap.c: 40: }
  4976                           ;ap.c: 42: return ret;
  4977  0D5E  0020               	movlb	0	; select bank0
  4978  0D5F  0864               	movf	event_btn_Expose@ret,w
  4979  0D60  0008               	return
  4980  0D61                     __end_of_event_btn_Expose:	
  4981                           
  4982                           	psect	text12
  4983  0847                     __ptext12:	
  4984 ;; *************** function _pwmStart_ccp3 *****************
  4985 ;; Defined at:
  4986 ;;		line 87 in file "pwm.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    2
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_event_btn_Expose
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _pwmStart_ccp3
  5016  0847                     _pwmStart_ccp3:	
  5017                           
  5018                           ;pwm.c: 90: CCP3CONbits.CCP3M3 = 1;
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _pwmStart_ccp3: [wreg+status,2+status,0]
  5022  0847  0026               	movlb	6	; select bank6
  5023  0848  1593               	bsf	19,3	;volatile
  5024                           
  5025                           ;pwm.c: 91: CCP3CONbits.CCP3M2 = 1;
  5026  0849  1513               	bsf	19,2	;volatile
  5027                           
  5028                           ;pwm.c: 92: CCP3CONbits.CCP3M1 = 0;
  5029  084A  1093               	bcf	19,1	;volatile
  5030                           
  5031                           ;pwm.c: 93: CCP3CONbits.CCP3M0 = 0;
  5032  084B  1013               	bcf	19,0	;volatile
  5033                           
  5034                           ;pwm.c: 95: T4CONbits.T4CKPS = 0b10;
  5035  084C  0028               	movlb	8	; select bank8
  5036  084D  0817               	movf	23,w	;volatile
  5037  084E  39FC               	andlw	-4
  5038  084F  3802               	iorlw	2
  5039  0850  0097               	movwf	23	;volatile
  5040                           
  5041                           ;pwm.c: 96: T4CONbits.T4OUTPS = 0b0000;
  5042  0851  3087               	movlw	-121
  5043  0852  0597               	andwf	23,f	;volatile
  5044                           
  5045                           ;pwm.c: 97: T4CONbits.TMR4ON = 1;
  5046  0853  1517               	bsf	23,2	;volatile
  5047  0854  0008               	return
  5048  0855                     __end_of_pwmStart_ccp3:	
  5049                           
  5050                           	psect	text13
  5051  0839                     __ptext13:	
  5052 ;; *************** function _pwmStart_ccp2 *****************
  5053 ;; Defined at:
  5054 ;;		line 47 in file "pwm.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;		None
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;Total ram usage:        0 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    2
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_event_btn_Expose
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function _pwmStart_ccp2
  5084  0839                     _pwmStart_ccp2:	
  5085                           
  5086                           ;pwm.c: 49: CCP2CONbits.CCP2M = 0b1100;
  5087                           
  5088                           ;incstack = 0
  5089                           ; Regs used in _pwmStart_ccp2: [wreg+status,2+status,0]
  5090  0839  0025               	movlb	5	; select bank5
  5091  083A  081A               	movf	26,w	;volatile
  5092  083B  39F0               	andlw	-16
  5093  083C  380C               	iorlw	12
  5094  083D  009A               	movwf	26	;volatile
  5095                           
  5096                           ;pwm.c: 51: T2CONbits.T2CKPS = 0b10;
  5097  083E  0020               	movlb	0	; select bank0
  5098  083F  081C               	movf	28,w	;volatile
  5099  0840  39FC               	andlw	-4
  5100  0841  3802               	iorlw	2
  5101  0842  009C               	movwf	28	;volatile
  5102                           
  5103                           ;pwm.c: 52: T2CONbits.T2OUTPS = 0b0000;
  5104  0843  3087               	movlw	-121
  5105  0844  059C               	andwf	28,f	;volatile
  5106                           
  5107                           ;pwm.c: 53: T2CONbits.TMR2ON = 1;
  5108  0845  151C               	bsf	28,2	;volatile
  5109  0846  0008               	return
  5110  0847                     __end_of_pwmStart_ccp2:	
  5111                           
  5112                           	psect	text14
  5113  06F3                     __ptext14:	
  5114 ;; *************** function _pwmInit_ccp3 *****************
  5115 ;; Defined at:
  5116 ;;		line 62 in file "pwm.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  freq            2   58[BANK0 ] unsigned int 
  5119 ;;  duty            3   60[BANK0 ] float 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  ccpr3l_ccp3c    2   65[BANK0 ] unsigned int 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      void 
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0, pclath, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5131 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;Total ram usage:        9 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    4
  5138 ;; This function calls:
  5139 ;;		___aldiv
  5140 ;;		___awtoft
  5141 ;;		___ftdiv
  5142 ;;		___ftmul
  5143 ;;		___fttol
  5144 ;; This function is called by:
  5145 ;;		_event_btn_Expose
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           
  5150                           ;psect for function _pwmInit_ccp3
  5151  06F3                     _pwmInit_ccp3:	
  5152                           
  5153                           ;pwm.c: 64: unsigned int ccpr3l_ccp3con;
  5154                           ;pwm.c: 67: CCP3CONbits.CCP3M3 = 1;
  5155                           
  5156                           ;incstack = 0
  5157                           ; Regs used in _pwmInit_ccp3: [wreg+status,2+status,0+pclath+cstack]
  5158  06F3  0026               	movlb	6	; select bank6
  5159  06F4  1593               	bsf	19,3	;volatile
  5160                           
  5161                           ;pwm.c: 68: CCP3CONbits.CCP3M2 = 1;
  5162  06F5  1513               	bsf	19,2	;volatile
  5163                           
  5164                           ;pwm.c: 69: CCP3CONbits.CCP3M1 = 0;
  5165  06F6  1093               	bcf	19,1	;volatile
  5166                           
  5167                           ;pwm.c: 70: CCP3CONbits.CCP3M0 = 0;
  5168  06F7  1013               	bcf	19,0	;volatile
  5169                           
  5170                           ;pwm.c: 72: CCP3CONbits.P3M1 = 0;
  5171  06F8  1393               	bcf	19,7	;volatile
  5172                           
  5173                           ;pwm.c: 73: CCP3CONbits.P3M0 = 0;
  5174  06F9  1313               	bcf	19,6	;volatile
  5175                           
  5176                           ;pwm.c: 75: CCPTMRS0bits.C3TSEL = 0b01;
  5177  06FA  0025               	movlb	5	; select bank5
  5178  06FB  081E               	movf	30,w	;volatile
  5179  06FC  39CF               	andlw	-49
  5180  06FD  3810               	iorlw	16
  5181  06FE  009E               	movwf	30	;volatile
  5182                           
  5183                           ;pwm.c: 78: PR4 = (4000000 / (4*freq*16)) - 1;
  5184  06FF  0020               	movlb	0	; select bank0
  5185  0700  085B               	movf	pwmInit_ccp3@freq+1,w
  5186  0701  00E0               	movwf	??_pwmInit_ccp3+1
  5187  0702  085A               	movf	pwmInit_ccp3@freq,w
  5188  0703  00DF               	movwf	??_pwmInit_ccp3
  5189  0704  35DF               	lslf	??_pwmInit_ccp3,f
  5190  0705  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5191  0706  35DF               	lslf	??_pwmInit_ccp3,f
  5192  0707  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5193  0708  0EDF               	swapf	??_pwmInit_ccp3,f
  5194  0709  0EE0               	swapf	??_pwmInit_ccp3+1,f
  5195  070A  30F0               	movlw	240
  5196  070B  05E0               	andwf	??_pwmInit_ccp3+1,f
  5197  070C  085F               	movf	??_pwmInit_ccp3,w
  5198  070D  390F               	andlw	15
  5199  070E  04E0               	iorwf	??_pwmInit_ccp3+1,f
  5200  070F  30F0               	movlw	240
  5201  0710  05DF               	andwf	??_pwmInit_ccp3,f
  5202  0711  085F               	movf	??_pwmInit_ccp3,w
  5203  0712  00A6               	movwf	___aldiv@divisor
  5204  0713  0860               	movf	??_pwmInit_ccp3+1,w
  5205  0714  00A7               	movwf	___aldiv@divisor+1
  5206  0715  01A8               	clrf	___aldiv@divisor+2
  5207  0716  01A9               	clrf	___aldiv@divisor+3
  5208  0717  3000               	movlw	0
  5209  0718  00AD               	movwf	___aldiv@dividend+3
  5210  0719  303D               	movlw	61
  5211  071A  00AC               	movwf	___aldiv@dividend+2
  5212  071B  3009               	movlw	9
  5213  071C  00AB               	movwf	___aldiv@dividend+1
  5214  071D  3000               	movlw	0
  5215  071E  00AA               	movwf	___aldiv@dividend
  5216  071F  318E  265D  3186   	fcall	___aldiv
  5217  0722  0020               	movlb	0	; select bank0
  5218  0723  0826               	movf	?___aldiv,w
  5219  0724  3EFF               	addlw	255
  5220  0725  0028               	movlb	8	; select bank8
  5221  0726  0096               	movwf	22	;volatile
  5222                           
  5223                           ;pwm.c: 79: ccpr3l_ccp3con =(4*(PR4+1))*((float)duty/100);
  5224  0727  0816               	movf	22,w	;volatile
  5225  0728  0020               	movlb	0	; select bank0
  5226  0729  00DF               	movwf	??_pwmInit_ccp3
  5227  072A  01E0               	clrf	??_pwmInit_ccp3+1
  5228  072B  35DF               	lslf	??_pwmInit_ccp3,f
  5229  072C  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5230  072D  35DF               	lslf	??_pwmInit_ccp3,f
  5231  072E  0DE0               	rlf	??_pwmInit_ccp3+1,f
  5232  072F  085F               	movf	??_pwmInit_ccp3,w
  5233  0730  3E04               	addlw	4
  5234  0731  00A8               	movwf	___awtoft@c
  5235  0732  3000               	movlw	0
  5236  0733  3D60               	addwfc	??_pwmInit_ccp3+1,w
  5237  0734  00A9               	movwf	___awtoft@c+1
  5238  0735  3189  217A  3186   	fcall	___awtoft
  5239  0738  0020               	movlb	0	; select bank0
  5240  0739  0828               	movf	?___awtoft,w
  5241  073A  00BF               	movwf	___ftmul@f2
  5242  073B  0829               	movf	?___awtoft+1,w
  5243  073C  00C0               	movwf	___ftmul@f2+1
  5244  073D  082A               	movf	?___awtoft+2,w
  5245  073E  00C1               	movwf	___ftmul@f2+2
  5246  073F  085C               	movf	pwmInit_ccp3@duty,w
  5247  0740  00AF               	movwf	___ftdiv@f1
  5248  0741  085D               	movf	pwmInit_ccp3@duty+1,w
  5249  0742  00B0               	movwf	___ftdiv@f1+1
  5250  0743  085E               	movf	pwmInit_ccp3@duty+2,w
  5251  0744  00B1               	movwf	___ftdiv@f1+2
  5252  0745  3000               	movlw	0
  5253  0746  00AC               	movwf	___ftdiv@f2
  5254  0747  30C8               	movlw	200
  5255  0748  00AD               	movwf	___ftdiv@f2+1
  5256  0749  3042               	movlw	66
  5257  074A  00AE               	movwf	___ftdiv@f2+2
  5258  074B  3186  264A  3186   	fcall	___ftdiv
  5259  074E  0020               	movlb	0	; select bank0
  5260  074F  082C               	movf	?___ftdiv,w
  5261  0750  00BC               	movwf	___ftmul@f1
  5262  0751  082D               	movf	?___ftdiv+1,w
  5263  0752  00BD               	movwf	___ftmul@f1+1
  5264  0753  082E               	movf	?___ftdiv+2,w
  5265  0754  00BE               	movwf	___ftmul@f1+2
  5266  0755  3184  24E9  3186   	fcall	___ftmul
  5267  0758  0020               	movlb	0	; select bank0
  5268  0759  083C               	movf	?___ftmul,w
  5269  075A  00CC               	movwf	___fttol@f1
  5270  075B  083D               	movf	?___ftmul+1,w
  5271  075C  00CD               	movwf	___fttol@f1+1
  5272  075D  083E               	movf	?___ftmul+2,w
  5273  075E  00CE               	movwf	___fttol@f1+2
  5274  075F  318E  26DF  3186   	fcall	___fttol
  5275  0762  0020               	movlb	0	; select bank0
  5276  0763  084D               	movf	?___fttol+1,w
  5277  0764  00E2               	movwf	pwmInit_ccp3@ccpr3l_ccp3con+1
  5278  0765  084C               	movf	?___fttol,w
  5279  0766  00E1               	movwf	pwmInit_ccp3@ccpr3l_ccp3con
  5280                           
  5281                           ;pwm.c: 81: CCPR3L = (ccpr3l_ccp3con ) >> 2;
  5282  0767  0862               	movf	pwmInit_ccp3@ccpr3l_ccp3con+1,w
  5283  0768  00E0               	movwf	??_pwmInit_ccp3+1
  5284  0769  0861               	movf	pwmInit_ccp3@ccpr3l_ccp3con,w
  5285  076A  00DF               	movwf	??_pwmInit_ccp3
  5286  076B  36E0               	lsrf	??_pwmInit_ccp3+1,f
  5287  076C  0CDF               	rrf	??_pwmInit_ccp3,f
  5288  076D  36E0               	lsrf	??_pwmInit_ccp3+1,f
  5289  076E  0CDF               	rrf	??_pwmInit_ccp3,f
  5290  076F  085F               	movf	??_pwmInit_ccp3,w
  5291  0770  0026               	movlb	6	; select bank6
  5292  0771  0091               	movwf	17	;volatile
  5293                           
  5294                           ;pwm.c: 82: CCP3CONbits.DC3B0 = ccpr3l_ccp3con & 0x0001;
  5295  0772  0020               	movlb	0	; select bank0
  5296  0773  0861               	movf	pwmInit_ccp3@ccpr3l_ccp3con,w
  5297  0774  3901               	andlw	1
  5298  0775  00DF               	movwf	??_pwmInit_ccp3
  5299  0776  0EDF               	swapf	??_pwmInit_ccp3,f
  5300  0777  0026               	movlb	6	; select bank6
  5301  0778  0813               	movf	19,w	;volatile
  5302  0779  0020               	movlb	0	; select bank0
  5303  077A  065F               	xorwf	??_pwmInit_ccp3,w
  5304  077B  39EF               	andlw	-17
  5305  077C  065F               	xorwf	??_pwmInit_ccp3,w
  5306  077D  0026               	movlb	6	; select bank6
  5307  077E  0093               	movwf	19	;volatile
  5308                           
  5309                           ;pwm.c: 83: CCP3CONbits.DC3B1 = ccpr3l_ccp3con & 0x0010;
  5310  077F  0020               	movlb	0	; select bank0
  5311  0780  0861               	movf	pwmInit_ccp3@ccpr3l_ccp3con,w
  5312  0781  3910               	andlw	16
  5313  0782  00DF               	movwf	??_pwmInit_ccp3
  5314  0783  0EDF               	swapf	??_pwmInit_ccp3,f
  5315  0784  0DDF               	rlf	??_pwmInit_ccp3,f
  5316  0785  0026               	movlb	6	; select bank6
  5317  0786  0813               	movf	19,w	;volatile
  5318  0787  0020               	movlb	0	; select bank0
  5319  0788  065F               	xorwf	??_pwmInit_ccp3,w
  5320  0789  39DF               	andlw	-33
  5321  078A  065F               	xorwf	??_pwmInit_ccp3,w
  5322  078B  0026               	movlb	6	; select bank6
  5323  078C  0093               	movwf	19	;volatile
  5324  078D  0008               	return
  5325  078E                     __end_of_pwmInit_ccp3:	
  5326                           
  5327                           	psect	text15
  5328  0A3F                     __ptext15:	
  5329 ;; *************** function _adcTodac *****************
  5330 ;; Defined at:
  5331 ;;		line 82 in file "app.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  data            2   58[BANK0 ] unsigned int 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  temp            3   60[BANK0 ] unsigned int 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  2   58[BANK0 ] int 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, pclath, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;Total ram usage:        5 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    4
  5352 ;; This function calls:
  5353 ;;		___ftmul
  5354 ;;		___fttol
  5355 ;;		___lwtoft
  5356 ;; This function is called by:
  5357 ;;		_event_btn_Expose
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _adcTodac
  5363  0A3F                     _adcTodac:	
  5364                           
  5365                           ;app.c: 84: long double temp;
  5366                           ;app.c: 87: temp = data * 3.8;
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _adcTodac: [wreg+status,2+status,0+pclath+cstack]
  5370  0A3F  3033               	movlw	51
  5371  0A40  0020               	movlb	0	; select bank0
  5372  0A41  00BC               	movwf	___ftmul@f1
  5373  0A42  3073               	movlw	115
  5374  0A43  00BD               	movwf	___ftmul@f1+1
  5375  0A44  3040               	movlw	64
  5376  0A45  00BE               	movwf	___ftmul@f1+2
  5377  0A46  085B               	movf	adcTodac@data+1,w
  5378  0A47  00A9               	movwf	___lwtoft@c+1
  5379  0A48  085A               	movf	adcTodac@data,w
  5380  0A49  00A8               	movwf	___lwtoft@c
  5381  0A4A  3188  20BB  318A   	fcall	___lwtoft
  5382  0A4D  0020               	movlb	0	; select bank0
  5383  0A4E  0828               	movf	?___lwtoft,w
  5384  0A4F  00BF               	movwf	___ftmul@f2
  5385  0A50  0829               	movf	?___lwtoft+1,w
  5386  0A51  00C0               	movwf	___ftmul@f2+1
  5387  0A52  082A               	movf	?___lwtoft+2,w
  5388  0A53  00C1               	movwf	___ftmul@f2+2
  5389  0A54  3184  24E9  318A   	fcall	___ftmul
  5390  0A57  0020               	movlb	0	; select bank0
  5391  0A58  083C               	movf	?___ftmul,w
  5392  0A59  00DC               	movwf	adcTodac@temp
  5393  0A5A  083D               	movf	?___ftmul+1,w
  5394  0A5B  00DD               	movwf	adcTodac@temp+1
  5395  0A5C  083E               	movf	?___ftmul+2,w
  5396  0A5D  00DE               	movwf	adcTodac@temp+2
  5397                           
  5398                           ;app.c: 90: return (int)temp;
  5399  0A5E  085C               	movf	adcTodac@temp,w
  5400  0A5F  00CC               	movwf	___fttol@f1
  5401  0A60  085D               	movf	adcTodac@temp+1,w
  5402  0A61  00CD               	movwf	___fttol@f1+1
  5403  0A62  085E               	movf	adcTodac@temp+2,w
  5404  0A63  00CE               	movwf	___fttol@f1+2
  5405  0A64  318E  26DF         	fcall	___fttol
  5406  0A66  0020               	movlb	0	; select bank0
  5407  0A67  084D               	movf	?___fttol+1,w
  5408  0A68  00DB               	movwf	?_adcTodac+1
  5409  0A69  084C               	movf	?___fttol,w
  5410  0A6A  00DA               	movwf	?_adcTodac
  5411  0A6B  0008               	return
  5412  0A6C                     __end_of_adcTodac:	
  5413                           
  5414                           	psect	text16
  5415  0894                     __ptext16:	
  5416 ;; *************** function ___bmul *****************
  5417 ;; Defined at:
  5418 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  multiplier      1    wreg     unsigned char 
  5421 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5424 ;;  product         1    2[BANK0 ] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      unsigned char 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5434 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;Total ram usage:        4 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    2
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_processButtons
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function ___bmul
  5450  0894                     ___bmul:	
  5451                           
  5452                           ;incstack = 0
  5453                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5454                           ;___bmul@multiplier stored from wreg
  5455  0894  0020               	movlb	0	; select bank0
  5456  0895  00A3               	movwf	___bmul@multiplier
  5457  0896  01A2               	clrf	___bmul@product
  5458  0897                     l2432:	
  5459  0897  1C23               	btfss	___bmul@multiplier,0
  5460  0898  289D               	goto	l2436
  5461  0899  0820               	movf	___bmul@multiplicand,w
  5462  089A  00A1               	movwf	??___bmul
  5463  089B  0821               	movf	??___bmul,w
  5464  089C  07A2               	addwf	___bmul@product,f
  5465  089D                     l2436:	
  5466  089D  1003               	clrc
  5467  089E  0DA0               	rlf	___bmul@multiplicand,f
  5468  089F  1003               	clrc
  5469  08A0  0CA3               	rrf	___bmul@multiplier,f
  5470  08A1  0823               	movf	___bmul@multiplier,w
  5471  08A2  1D03               	btfss	3,2
  5472  08A3  2897               	goto	l2432
  5473  08A4  0822               	movf	___bmul@product,w
  5474  08A5  0008               	return
  5475  08A6                     __end_of___bmul:	
  5476                           
  5477                           	psect	text17
  5478  059D                     __ptext17:	
  5479 ;; *************** function _disp_ma_result *****************
  5480 ;; Defined at:
  5481 ;;		line 43 in file "app.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  data            2   58[BANK0 ] unsigned int 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  temp            3   61[BANK0 ] float 
  5486 ;;  temp2           2   64[BANK0 ] unsigned int 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0, pclath, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;Total ram usage:        8 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    6
  5503 ;; This function calls:
  5504 ;;		_I2C_AS1115_Write
  5505 ;;		___ftdiv
  5506 ;;		___ftmul
  5507 ;;		___fttol
  5508 ;;		___lwdiv
  5509 ;;		___lwmod
  5510 ;;		___lwtoft
  5511 ;;		___wmul
  5512 ;; This function is called by:
  5513 ;;		_event_display
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           
  5518                           ;psect for function _disp_ma_result
  5519  059D                     _disp_ma_result:	
  5520                           
  5521                           ;app.c: 45: float temp;
  5522                           ;app.c: 46: uint16_t temp2=0;
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in _disp_ma_result: [wreg+status,2+status,0+pclath+cstack]
  5526  059D  0020               	movlb	0	; select bank0
  5527  059E  01E0               	clrf	disp_ma_result@temp2
  5528  059F  01E1               	clrf	disp_ma_result@temp2+1
  5529                           
  5530                           ;app.c: 48: temp = (float)(data*10)/811;
  5531  05A0  30C0               	movlw	192
  5532  05A1  00AC               	movwf	___ftdiv@f2
  5533  05A2  304A               	movlw	74
  5534  05A3  00AD               	movwf	___ftdiv@f2+1
  5535  05A4  3044               	movlw	68
  5536  05A5  00AE               	movwf	___ftdiv@f2+2
  5537  05A6  085B               	movf	disp_ma_result@data+1,w
  5538  05A7  00A1               	movwf	___wmul@multiplier+1
  5539  05A8  085A               	movf	disp_ma_result@data,w
  5540  05A9  00A0               	movwf	___wmul@multiplier
  5541  05AA  300A               	movlw	10
  5542  05AB  00A2               	movwf	___wmul@multiplicand
  5543  05AC  3000               	movlw	0
  5544  05AD  00A3               	movwf	___wmul@multiplicand+1
  5545  05AE  3188  20FF  3185   	fcall	___wmul
  5546  05B1  0020               	movlb	0	; select bank0
  5547  05B2  0821               	movf	?___wmul+1,w
  5548  05B3  00A9               	movwf	___lwtoft@c+1
  5549  05B4  0820               	movf	?___wmul,w
  5550  05B5  00A8               	movwf	___lwtoft@c
  5551  05B6  3188  20BB  3185   	fcall	___lwtoft
  5552  05B9  0020               	movlb	0	; select bank0
  5553  05BA  0828               	movf	?___lwtoft,w
  5554  05BB  00AF               	movwf	___ftdiv@f1
  5555  05BC  0829               	movf	?___lwtoft+1,w
  5556  05BD  00B0               	movwf	___ftdiv@f1+1
  5557  05BE  082A               	movf	?___lwtoft+2,w
  5558  05BF  00B1               	movwf	___ftdiv@f1+2
  5559  05C0  3186  264A  3185   	fcall	___ftdiv
  5560  05C3  0020               	movlb	0	; select bank0
  5561  05C4  082C               	movf	?___ftdiv,w
  5562  05C5  00DD               	movwf	disp_ma_result@temp
  5563  05C6  082D               	movf	?___ftdiv+1,w
  5564  05C7  00DE               	movwf	disp_ma_result@temp+1
  5565  05C8  082E               	movf	?___ftdiv+2,w
  5566  05C9  00DF               	movwf	disp_ma_result@temp+2
  5567                           
  5568                           ;app.c: 49: temp2 = (uint16_t)(temp*10);
  5569  05CA  085D               	movf	disp_ma_result@temp,w
  5570  05CB  00BF               	movwf	___ftmul@f2
  5571  05CC  085E               	movf	disp_ma_result@temp+1,w
  5572  05CD  00C0               	movwf	___ftmul@f2+1
  5573  05CE  085F               	movf	disp_ma_result@temp+2,w
  5574  05CF  00C1               	movwf	___ftmul@f2+2
  5575  05D0  3000               	movlw	0
  5576  05D1  00BC               	movwf	___ftmul@f1
  5577  05D2  3020               	movlw	32
  5578  05D3  00BD               	movwf	___ftmul@f1+1
  5579  05D4  3041               	movlw	65
  5580  05D5  00BE               	movwf	___ftmul@f1+2
  5581  05D6  3184  24E9  3185   	fcall	___ftmul
  5582  05D9  0020               	movlb	0	; select bank0
  5583  05DA  083C               	movf	?___ftmul,w
  5584  05DB  00CC               	movwf	___fttol@f1
  5585  05DC  083D               	movf	?___ftmul+1,w
  5586  05DD  00CD               	movwf	___fttol@f1+1
  5587  05DE  083E               	movf	?___ftmul+2,w
  5588  05DF  00CE               	movwf	___fttol@f1+2
  5589  05E0  318E  26DF  3185   	fcall	___fttol
  5590  05E3  0020               	movlb	0	; select bank0
  5591  05E4  084D               	movf	?___fttol+1,w
  5592  05E5  00E1               	movwf	disp_ma_result@temp2+1
  5593  05E6  084C               	movf	?___fttol,w
  5594  05E7  00E0               	movwf	disp_ma_result@temp2
  5595                           
  5596                           ;app.c: 50: if(temp2>100) temp2=100;
  5597  05E8  3000               	movlw	0
  5598  05E9  0261               	subwf	disp_ma_result@temp2+1,w
  5599  05EA  3065               	movlw	101
  5600  05EB  1903               	skipnz
  5601  05EC  0260               	subwf	disp_ma_result@temp2,w
  5602  05ED  1C03               	skipc
  5603  05EE  2DF3               	goto	l2638
  5604  05EF  3064               	movlw	100
  5605  05F0  00E0               	movwf	disp_ma_result@temp2
  5606  05F1  3000               	movlw	0
  5607  05F2  00E1               	movwf	disp_ma_result@temp2+1
  5608  05F3                     l2638:	
  5609                           
  5610                           ;app.c: 52: I2C_AS1115_Write(DIGIT3,(temp2/100)%10);
  5611  05F3  300A               	movlw	10
  5612  05F4  00A8               	movwf	___lwmod@divisor
  5613  05F5  3000               	movlw	0
  5614  05F6  00A9               	movwf	___lwmod@divisor+1
  5615  05F7  3064               	movlw	100
  5616  05F8  00A0               	movwf	___lwdiv@divisor
  5617  05F9  3000               	movlw	0
  5618  05FA  00A1               	movwf	___lwdiv@divisor+1
  5619  05FB  0861               	movf	disp_ma_result@temp2+1,w
  5620  05FC  00A3               	movwf	___lwdiv@dividend+1
  5621  05FD  0860               	movf	disp_ma_result@temp2,w
  5622  05FE  00A2               	movwf	___lwdiv@dividend
  5623  05FF  318A  229B  3185   	fcall	___lwdiv
  5624  0602  0020               	movlb	0	; select bank0
  5625  0603  0821               	movf	?___lwdiv+1,w
  5626  0604  00AB               	movwf	___lwmod@dividend+1
  5627  0605  0820               	movf	?___lwdiv,w
  5628  0606  00AA               	movwf	___lwmod@dividend
  5629  0607  318A  2212  3185   	fcall	___lwmod
  5630  060A  0020               	movlb	0	; select bank0
  5631  060B  0828               	movf	?___lwmod,w
  5632  060C  00DC               	movwf	??_disp_ma_result
  5633  060D  085C               	movf	??_disp_ma_result,w
  5634  060E  00B9               	movwf	I2C_AS1115_Write@data
  5635  060F  3004               	movlw	4
  5636  0610  3189  2139  3185   	fcall	_I2C_AS1115_Write
  5637                           
  5638                           ;app.c: 53: I2C_AS1115_Write(DIGIT4,(temp2/10)%10 | 0x80);
  5639  0613  300A               	movlw	10
  5640  0614  0020               	movlb	0	; select bank0
  5641  0615  00A8               	movwf	___lwmod@divisor
  5642  0616  3000               	movlw	0
  5643  0617  00A9               	movwf	___lwmod@divisor+1
  5644  0618  300A               	movlw	10
  5645  0619  00A0               	movwf	___lwdiv@divisor
  5646  061A  3000               	movlw	0
  5647  061B  00A1               	movwf	___lwdiv@divisor+1
  5648  061C  0861               	movf	disp_ma_result@temp2+1,w
  5649  061D  00A3               	movwf	___lwdiv@dividend+1
  5650  061E  0860               	movf	disp_ma_result@temp2,w
  5651  061F  00A2               	movwf	___lwdiv@dividend
  5652  0620  318A  229B  3185   	fcall	___lwdiv
  5653  0623  0020               	movlb	0	; select bank0
  5654  0624  0821               	movf	?___lwdiv+1,w
  5655  0625  00AB               	movwf	___lwmod@dividend+1
  5656  0626  0820               	movf	?___lwdiv,w
  5657  0627  00AA               	movwf	___lwmod@dividend
  5658  0628  318A  2212  3185   	fcall	___lwmod
  5659  062B  0020               	movlb	0	; select bank0
  5660  062C  0828               	movf	?___lwmod,w
  5661  062D  3880               	iorlw	128
  5662  062E  00DC               	movwf	??_disp_ma_result
  5663  062F  085C               	movf	??_disp_ma_result,w
  5664  0630  00B9               	movwf	I2C_AS1115_Write@data
  5665  0631  3005               	movlw	5
  5666  0632  3189  2139  3185   	fcall	_I2C_AS1115_Write
  5667                           
  5668                           ;app.c: 54: I2C_AS1115_Write(DIGIT5,temp2%10);
  5669  0635  300A               	movlw	10
  5670  0636  0020               	movlb	0	; select bank0
  5671  0637  00A8               	movwf	___lwmod@divisor
  5672  0638  3000               	movlw	0
  5673  0639  00A9               	movwf	___lwmod@divisor+1
  5674  063A  0861               	movf	disp_ma_result@temp2+1,w
  5675  063B  00AB               	movwf	___lwmod@dividend+1
  5676  063C  0860               	movf	disp_ma_result@temp2,w
  5677  063D  00AA               	movwf	___lwmod@dividend
  5678  063E  318A  2212  3185   	fcall	___lwmod
  5679  0641  0020               	movlb	0	; select bank0
  5680  0642  0828               	movf	?___lwmod,w
  5681  0643  00DC               	movwf	??_disp_ma_result
  5682  0644  085C               	movf	??_disp_ma_result,w
  5683  0645  00B9               	movwf	I2C_AS1115_Write@data
  5684  0646  3006               	movlw	6
  5685  0647  3189  2139         	fcall	_I2C_AS1115_Write
  5686  0649  0008               	return
  5687  064A                     __end_of_disp_ma_result:	
  5688                           
  5689                           	psect	text18
  5690  0039                     __ptext18:	
  5691 ;; *************** function _disp_kv *****************
  5692 ;; Defined at:
  5693 ;;		line 58 in file "app.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  data            2   58[BANK0 ] unsigned int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  temp            3   61[BANK0 ] float 
  5698 ;;  temp2           2   64[BANK0 ] unsigned int 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;Total ram usage:        8 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    6
  5715 ;; This function calls:
  5716 ;;		_I2C_AS1115_Write
  5717 ;;		___ftdiv
  5718 ;;		___ftge
  5719 ;;		___ftmul
  5720 ;;		___fttol
  5721 ;;		___lwdiv
  5722 ;;		___lwmod
  5723 ;;		___lwtoft
  5724 ;;		___wmul
  5725 ;; This function is called by:
  5726 ;;		_event_display
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function _disp_kv
  5732  0039                     _disp_kv:	
  5733                           
  5734                           ;app.c: 60: float temp;
  5735                           ;app.c: 61: uint16_t temp2=0;
  5736                           
  5737                           ;incstack = 0
  5738                           ; Regs used in _disp_kv: [wreg+status,2+status,0+pclath+cstack]
  5739  0039  0020               	movlb	0	; select bank0
  5740  003A  01E0               	clrf	disp_kv@temp2
  5741  003B  01E1               	clrf	disp_kv@temp2+1
  5742                           
  5743                           ;app.c: 63: temp = (float)(data*15)/811;
  5744  003C  30C0               	movlw	192
  5745  003D  00AC               	movwf	___ftdiv@f2
  5746  003E  304A               	movlw	74
  5747  003F  00AD               	movwf	___ftdiv@f2+1
  5748  0040  3044               	movlw	68
  5749  0041  00AE               	movwf	___ftdiv@f2+2
  5750  0042  085B               	movf	disp_kv@data+1,w
  5751  0043  00A1               	movwf	___wmul@multiplier+1
  5752  0044  085A               	movf	disp_kv@data,w
  5753  0045  00A0               	movwf	___wmul@multiplier
  5754  0046  300F               	movlw	15
  5755  0047  00A2               	movwf	___wmul@multiplicand
  5756  0048  3000               	movlw	0
  5757  0049  00A3               	movwf	___wmul@multiplicand+1
  5758  004A  3188  20FF  3180   	fcall	___wmul
  5759  004D  0020               	movlb	0	; select bank0
  5760  004E  0821               	movf	?___wmul+1,w
  5761  004F  00A9               	movwf	___lwtoft@c+1
  5762  0050  0820               	movf	?___wmul,w
  5763  0051  00A8               	movwf	___lwtoft@c
  5764  0052  3188  20BB  3180   	fcall	___lwtoft
  5765  0055  0020               	movlb	0	; select bank0
  5766  0056  0828               	movf	?___lwtoft,w
  5767  0057  00AF               	movwf	___ftdiv@f1
  5768  0058  0829               	movf	?___lwtoft+1,w
  5769  0059  00B0               	movwf	___ftdiv@f1+1
  5770  005A  082A               	movf	?___lwtoft+2,w
  5771  005B  00B1               	movwf	___ftdiv@f1+2
  5772  005C  3186  264A  3180   	fcall	___ftdiv
  5773  005F  0020               	movlb	0	; select bank0
  5774  0060  082C               	movf	?___ftdiv,w
  5775  0061  00DD               	movwf	disp_kv@temp
  5776  0062  082D               	movf	?___ftdiv+1,w
  5777  0063  00DE               	movwf	disp_kv@temp+1
  5778  0064  082E               	movf	?___ftdiv+2,w
  5779  0065  00DF               	movwf	disp_kv@temp+2
  5780                           
  5781                           ;app.c: 65: if(temp < 10)
  5782  0066  085D               	movf	disp_kv@temp,w
  5783  0067  00A0               	movwf	___ftge@ff1
  5784  0068  085E               	movf	disp_kv@temp+1,w
  5785  0069  00A1               	movwf	___ftge@ff1+1
  5786  006A  085F               	movf	disp_kv@temp+2,w
  5787  006B  00A2               	movwf	___ftge@ff1+2
  5788  006C  3000               	movlw	0
  5789  006D  00A3               	movwf	___ftge@ff2
  5790  006E  3020               	movlw	32
  5791  006F  00A4               	movwf	___ftge@ff2+1
  5792  0070  3041               	movlw	65
  5793  0071  00A5               	movwf	___ftge@ff2+2
  5794  0072  318B  2309  3180   	fcall	___ftge
  5795  0075  1803               	btfsc	3,0
  5796  0076  28ED               	goto	l2616
  5797                           
  5798                           ;app.c: 66: {
  5799                           ;app.c: 67: temp2 = (uint16_t)(temp*100);
  5800  0077  0020               	movlb	0	; select bank0
  5801  0078  085D               	movf	disp_kv@temp,w
  5802  0079  00BF               	movwf	___ftmul@f2
  5803  007A  085E               	movf	disp_kv@temp+1,w
  5804  007B  00C0               	movwf	___ftmul@f2+1
  5805  007C  085F               	movf	disp_kv@temp+2,w
  5806  007D  00C1               	movwf	___ftmul@f2+2
  5807  007E  3000               	movlw	0
  5808  007F  00BC               	movwf	___ftmul@f1
  5809  0080  30C8               	movlw	200
  5810  0081  00BD               	movwf	___ftmul@f1+1
  5811  0082  3042               	movlw	66
  5812  0083  00BE               	movwf	___ftmul@f1+2
  5813  0084  3184  24E9  3180   	fcall	___ftmul
  5814  0087  0020               	movlb	0	; select bank0
  5815  0088  083C               	movf	?___ftmul,w
  5816  0089  00CC               	movwf	___fttol@f1
  5817  008A  083D               	movf	?___ftmul+1,w
  5818  008B  00CD               	movwf	___fttol@f1+1
  5819  008C  083E               	movf	?___ftmul+2,w
  5820  008D  00CE               	movwf	___fttol@f1+2
  5821  008E  318E  26DF  3180   	fcall	___fttol
  5822  0091  0020               	movlb	0	; select bank0
  5823  0092  084D               	movf	?___fttol+1,w
  5824  0093  00E1               	movwf	disp_kv@temp2+1
  5825  0094  084C               	movf	?___fttol,w
  5826  0095  00E0               	movwf	disp_kv@temp2
  5827                           
  5828                           ;app.c: 68: I2C_AS1115_Write(DIGIT0,(temp2/100)%10 );
  5829  0096  300A               	movlw	10
  5830  0097  00A8               	movwf	___lwmod@divisor
  5831  0098  3000               	movlw	0
  5832  0099  00A9               	movwf	___lwmod@divisor+1
  5833  009A  3064               	movlw	100
  5834  009B  00A0               	movwf	___lwdiv@divisor
  5835  009C  3000               	movlw	0
  5836  009D  00A1               	movwf	___lwdiv@divisor+1
  5837  009E  0861               	movf	disp_kv@temp2+1,w
  5838  009F  00A3               	movwf	___lwdiv@dividend+1
  5839  00A0  0860               	movf	disp_kv@temp2,w
  5840  00A1  00A2               	movwf	___lwdiv@dividend
  5841  00A2  318A  229B  3180   	fcall	___lwdiv
  5842  00A5  0020               	movlb	0	; select bank0
  5843  00A6  0821               	movf	?___lwdiv+1,w
  5844  00A7  00AB               	movwf	___lwmod@dividend+1
  5845  00A8  0820               	movf	?___lwdiv,w
  5846  00A9  00AA               	movwf	___lwmod@dividend
  5847  00AA  318A  2212  3180   	fcall	___lwmod
  5848  00AD  0020               	movlb	0	; select bank0
  5849  00AE  0828               	movf	?___lwmod,w
  5850  00AF  00DC               	movwf	??_disp_kv
  5851  00B0  085C               	movf	??_disp_kv,w
  5852  00B1  00B9               	movwf	I2C_AS1115_Write@data
  5853  00B2  3001               	movlw	1
  5854  00B3  3189  2139  3180   	fcall	_I2C_AS1115_Write
  5855                           
  5856                           ;app.c: 69: I2C_AS1115_Write(DIGIT1,(temp2/10)%10 | 0x80);
  5857  00B6  300A               	movlw	10
  5858  00B7  0020               	movlb	0	; select bank0
  5859  00B8  00A8               	movwf	___lwmod@divisor
  5860  00B9  3000               	movlw	0
  5861  00BA  00A9               	movwf	___lwmod@divisor+1
  5862  00BB  300A               	movlw	10
  5863  00BC  00A0               	movwf	___lwdiv@divisor
  5864  00BD  3000               	movlw	0
  5865  00BE  00A1               	movwf	___lwdiv@divisor+1
  5866  00BF  0861               	movf	disp_kv@temp2+1,w
  5867  00C0  00A3               	movwf	___lwdiv@dividend+1
  5868  00C1  0860               	movf	disp_kv@temp2,w
  5869  00C2  00A2               	movwf	___lwdiv@dividend
  5870  00C3  318A  229B  3180   	fcall	___lwdiv
  5871  00C6  0020               	movlb	0	; select bank0
  5872  00C7  0821               	movf	?___lwdiv+1,w
  5873  00C8  00AB               	movwf	___lwmod@dividend+1
  5874  00C9  0820               	movf	?___lwdiv,w
  5875  00CA  00AA               	movwf	___lwmod@dividend
  5876  00CB  318A  2212  3180   	fcall	___lwmod
  5877  00CE  0020               	movlb	0	; select bank0
  5878  00CF  0828               	movf	?___lwmod,w
  5879  00D0  3880               	iorlw	128
  5880  00D1  00DC               	movwf	??_disp_kv
  5881  00D2  085C               	movf	??_disp_kv,w
  5882  00D3  00B9               	movwf	I2C_AS1115_Write@data
  5883  00D4  3002               	movlw	2
  5884  00D5  3189  2139  3180   	fcall	_I2C_AS1115_Write
  5885                           
  5886                           ;app.c: 70: I2C_AS1115_Write(DIGIT2,temp2%10);
  5887  00D8  300A               	movlw	10
  5888  00D9  0020               	movlb	0	; select bank0
  5889  00DA  00A8               	movwf	___lwmod@divisor
  5890  00DB  3000               	movlw	0
  5891  00DC  00A9               	movwf	___lwmod@divisor+1
  5892  00DD  0861               	movf	disp_kv@temp2+1,w
  5893  00DE  00AB               	movwf	___lwmod@dividend+1
  5894  00DF  0860               	movf	disp_kv@temp2,w
  5895  00E0  00AA               	movwf	___lwmod@dividend
  5896  00E1  318A  2212  3180   	fcall	___lwmod
  5897  00E4  0020               	movlb	0	; select bank0
  5898  00E5  0828               	movf	?___lwmod,w
  5899  00E6  00DC               	movwf	??_disp_kv
  5900  00E7  085C               	movf	??_disp_kv,w
  5901  00E8  00B9               	movwf	I2C_AS1115_Write@data
  5902  00E9  3003               	movlw	3
  5903  00EA  3189  2139         	fcall	_I2C_AS1115_Write
  5904                           
  5905                           ;app.c: 71: }else
  5906  00EC  0008               	return
  5907  00ED                     l2616:	
  5908                           
  5909                           ;app.c: 72: {
  5910                           ;app.c: 73: temp2 = (uint16_t)(temp*10);
  5911  00ED  0020               	movlb	0	; select bank0
  5912  00EE  085D               	movf	disp_kv@temp,w
  5913  00EF  00BF               	movwf	___ftmul@f2
  5914  00F0  085E               	movf	disp_kv@temp+1,w
  5915  00F1  00C0               	movwf	___ftmul@f2+1
  5916  00F2  085F               	movf	disp_kv@temp+2,w
  5917  00F3  00C1               	movwf	___ftmul@f2+2
  5918  00F4  3000               	movlw	0
  5919  00F5  00BC               	movwf	___ftmul@f1
  5920  00F6  3020               	movlw	32
  5921  00F7  00BD               	movwf	___ftmul@f1+1
  5922  00F8  3041               	movlw	65
  5923  00F9  00BE               	movwf	___ftmul@f1+2
  5924  00FA  3184  24E9  3180   	fcall	___ftmul
  5925  00FD  0020               	movlb	0	; select bank0
  5926  00FE  083C               	movf	?___ftmul,w
  5927  00FF  00CC               	movwf	___fttol@f1
  5928  0100  083D               	movf	?___ftmul+1,w
  5929  0101  00CD               	movwf	___fttol@f1+1
  5930  0102  083E               	movf	?___ftmul+2,w
  5931  0103  00CE               	movwf	___fttol@f1+2
  5932  0104  318E  26DF  3180   	fcall	___fttol
  5933  0107  0020               	movlb	0	; select bank0
  5934  0108  084D               	movf	?___fttol+1,w
  5935  0109  00E1               	movwf	disp_kv@temp2+1
  5936  010A  084C               	movf	?___fttol,w
  5937  010B  00E0               	movwf	disp_kv@temp2
  5938                           
  5939                           ;app.c: 74: if(temp2>150) temp2 = 150;
  5940  010C  3000               	movlw	0
  5941  010D  0261               	subwf	disp_kv@temp2+1,w
  5942  010E  3097               	movlw	151
  5943  010F  1903               	skipnz
  5944  0110  0260               	subwf	disp_kv@temp2,w
  5945  0111  1C03               	skipc
  5946  0112  2917               	goto	l2622
  5947  0113  3096               	movlw	150
  5948  0114  00E0               	movwf	disp_kv@temp2
  5949  0115  3000               	movlw	0
  5950  0116  00E1               	movwf	disp_kv@temp2+1
  5951  0117                     l2622:	
  5952                           
  5953                           ;app.c: 75: I2C_AS1115_Write(DIGIT0,(temp2/100)%10);
  5954  0117  300A               	movlw	10
  5955  0118  00A8               	movwf	___lwmod@divisor
  5956  0119  3000               	movlw	0
  5957  011A  00A9               	movwf	___lwmod@divisor+1
  5958  011B  3064               	movlw	100
  5959  011C  00A0               	movwf	___lwdiv@divisor
  5960  011D  3000               	movlw	0
  5961  011E  00A1               	movwf	___lwdiv@divisor+1
  5962  011F  0861               	movf	disp_kv@temp2+1,w
  5963  0120  00A3               	movwf	___lwdiv@dividend+1
  5964  0121  0860               	movf	disp_kv@temp2,w
  5965  0122  00A2               	movwf	___lwdiv@dividend
  5966  0123  318A  229B  3180   	fcall	___lwdiv
  5967  0126  0020               	movlb	0	; select bank0
  5968  0127  0821               	movf	?___lwdiv+1,w
  5969  0128  00AB               	movwf	___lwmod@dividend+1
  5970  0129  0820               	movf	?___lwdiv,w
  5971  012A  00AA               	movwf	___lwmod@dividend
  5972  012B  318A  2212  3180   	fcall	___lwmod
  5973  012E  0020               	movlb	0	; select bank0
  5974  012F  0828               	movf	?___lwmod,w
  5975  0130  00DC               	movwf	??_disp_kv
  5976  0131  085C               	movf	??_disp_kv,w
  5977  0132  00B9               	movwf	I2C_AS1115_Write@data
  5978  0133  3001               	movlw	1
  5979  0134  3189  2139  3180   	fcall	_I2C_AS1115_Write
  5980                           
  5981                           ;app.c: 76: I2C_AS1115_Write(DIGIT1,(temp2/10)%10 | !0x80);
  5982  0137  300A               	movlw	10
  5983  0138  0020               	movlb	0	; select bank0
  5984  0139  00A8               	movwf	___lwmod@divisor
  5985  013A  3000               	movlw	0
  5986  013B  00A9               	movwf	___lwmod@divisor+1
  5987  013C  300A               	movlw	10
  5988  013D  00A0               	movwf	___lwdiv@divisor
  5989  013E  3000               	movlw	0
  5990  013F  00A1               	movwf	___lwdiv@divisor+1
  5991  0140  0861               	movf	disp_kv@temp2+1,w
  5992  0141  00A3               	movwf	___lwdiv@dividend+1
  5993  0142  0860               	movf	disp_kv@temp2,w
  5994  0143  00A2               	movwf	___lwdiv@dividend
  5995  0144  318A  229B  3180   	fcall	___lwdiv
  5996  0147  0020               	movlb	0	; select bank0
  5997  0148  0821               	movf	?___lwdiv+1,w
  5998  0149  00AB               	movwf	___lwmod@dividend+1
  5999  014A  0820               	movf	?___lwdiv,w
  6000  014B  00AA               	movwf	___lwmod@dividend
  6001  014C  318A  2212  3180   	fcall	___lwmod
  6002  014F  0020               	movlb	0	; select bank0
  6003  0150  0828               	movf	?___lwmod,w
  6004  0151  00DC               	movwf	??_disp_kv
  6005  0152  085C               	movf	??_disp_kv,w
  6006  0153  00B9               	movwf	I2C_AS1115_Write@data
  6007  0154  3002               	movlw	2
  6008  0155  3189  2139  3180   	fcall	_I2C_AS1115_Write
  6009                           
  6010                           ;app.c: 77: I2C_AS1115_Write(DIGIT2,temp2%10);
  6011  0158  300A               	movlw	10
  6012  0159  0020               	movlb	0	; select bank0
  6013  015A  00A8               	movwf	___lwmod@divisor
  6014  015B  3000               	movlw	0
  6015  015C  00A9               	movwf	___lwmod@divisor+1
  6016  015D  0861               	movf	disp_kv@temp2+1,w
  6017  015E  00AB               	movwf	___lwmod@dividend+1
  6018  015F  0860               	movf	disp_kv@temp2,w
  6019  0160  00AA               	movwf	___lwmod@dividend
  6020  0161  318A  2212  3180   	fcall	___lwmod
  6021  0164  0020               	movlb	0	; select bank0
  6022  0165  0828               	movf	?___lwmod,w
  6023  0166  00DC               	movwf	??_disp_kv
  6024  0167  085C               	movf	??_disp_kv,w
  6025  0168  00B9               	movwf	I2C_AS1115_Write@data
  6026  0169  3003               	movlw	3
  6027  016A  3189  2139         	fcall	_I2C_AS1115_Write
  6028  016C  0008               	return
  6029  016D                     __end_of_disp_kv:	
  6030                           
  6031                           	psect	text19
  6032  08BB                     __ptext19:	
  6033 ;; *************** function ___lwtoft *****************
  6034 ;; Defined at:
  6035 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  c               2    8[BANK0 ] unsigned int 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;		None
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  3    8[BANK0 ] float 
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0, pclath, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6049 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;Total ram usage:        4 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    3
  6056 ;; This function calls:
  6057 ;;		___ftpack
  6058 ;; This function is called by:
  6059 ;;		_disp_ma_result
  6060 ;;		_disp_kv
  6061 ;;		_adcTodac
  6062 ;;		_disp_ADC
  6063 ;;		_disp_ma
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function ___lwtoft
  6069  08BB                     ___lwtoft:	
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6073  08BB  0020               	movlb	0	; select bank0
  6074  08BC  0828               	movf	___lwtoft@c,w
  6075  08BD  00A0               	movwf	___ftpack@arg
  6076  08BE  0829               	movf	___lwtoft@c+1,w
  6077  08BF  00A1               	movwf	___ftpack@arg+1
  6078  08C0  01A2               	clrf	___ftpack@arg+2
  6079  08C1  308E               	movlw	142
  6080  08C2  00AB               	movwf	??___lwtoft
  6081  08C3  082B               	movf	??___lwtoft,w
  6082  08C4  00A3               	movwf	___ftpack@exp
  6083  08C5  01A4               	clrf	___ftpack@sign
  6084  08C6  3187  278E         	fcall	___ftpack
  6085  08C8  0020               	movlb	0	; select bank0
  6086  08C9  0820               	movf	?___ftpack,w
  6087  08CA  00A8               	movwf	?___lwtoft
  6088  08CB  0821               	movf	?___ftpack+1,w
  6089  08CC  00A9               	movwf	?___lwtoft+1
  6090  08CD  0822               	movf	?___ftpack+2,w
  6091  08CE  00AA               	movwf	?___lwtoft+2
  6092  08CF  0008               	return
  6093  08D0                     __end_of___lwtoft:	
  6094                           
  6095                           	psect	text20
  6096  0A12                     __ptext20:	
  6097 ;; *************** function ___lwmod *****************
  6098 ;; Defined at:
  6099 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  divisor         2    8[BANK0 ] unsigned int 
  6102 ;;  dividend        2   10[BANK0 ] unsigned int 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  counter         1   13[BANK0 ] unsigned char 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  2    8[BANK0 ] unsigned int 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6114 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;Total ram usage:        6 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    2
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_disp_ma_result
  6125 ;;		_disp_kv
  6126 ;;		_disp_3digit
  6127 ;;		_disp_ADC
  6128 ;;		_disp_ma
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function ___lwmod
  6134  0A12                     ___lwmod:	
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6138  0A12  0020               	movlb	0	; select bank0
  6139  0A13  0828               	movf	___lwmod@divisor,w
  6140  0A14  0429               	iorwf	___lwmod@divisor+1,w
  6141  0A15  1903               	btfsc	3,2
  6142  0A16  2A3A               	goto	l2578
  6143  0A17  01AD               	clrf	___lwmod@counter
  6144  0A18  0AAD               	incf	___lwmod@counter,f
  6145  0A19                     l2568:	
  6146  0A19  1BA9               	btfsc	___lwmod@divisor+1,7
  6147  0A1A  2A25               	goto	l2570
  6148  0A1B  3001               	movlw	1
  6149  0A1C                     u2665:	
  6150  0A1C  35A8               	lslf	___lwmod@divisor,f
  6151  0A1D  0DA9               	rlf	___lwmod@divisor+1,f
  6152  0A1E  0B89               	decfsz	9,f
  6153  0A1F  2A1C               	goto	u2665
  6154  0A20  3001               	movlw	1
  6155  0A21  00AC               	movwf	??___lwmod
  6156  0A22  082C               	movf	??___lwmod,w
  6157  0A23  07AD               	addwf	___lwmod@counter,f
  6158  0A24  2A19               	goto	l2568
  6159  0A25                     l2570:	
  6160  0A25  0829               	movf	___lwmod@divisor+1,w
  6161  0A26  022B               	subwf	___lwmod@dividend+1,w
  6162  0A27  1D03               	skipz
  6163  0A28  2A2B               	goto	u2685
  6164  0A29  0828               	movf	___lwmod@divisor,w
  6165  0A2A  022A               	subwf	___lwmod@dividend,w
  6166  0A2B                     u2685:	
  6167  0A2B  1C03               	skipc
  6168  0A2C  2A31               	goto	l2574
  6169  0A2D  0828               	movf	___lwmod@divisor,w
  6170  0A2E  02AA               	subwf	___lwmod@dividend,f
  6171  0A2F  0829               	movf	___lwmod@divisor+1,w
  6172  0A30  3BAB               	subwfb	___lwmod@dividend+1,f
  6173  0A31                     l2574:	
  6174  0A31  3001               	movlw	1
  6175  0A32                     u2695:	
  6176  0A32  36A9               	lsrf	___lwmod@divisor+1,f
  6177  0A33  0CA8               	rrf	___lwmod@divisor,f
  6178  0A34  0B89               	decfsz	9,f
  6179  0A35  2A32               	goto	u2695
  6180  0A36  3001               	movlw	1
  6181  0A37  02AD               	subwf	___lwmod@counter,f
  6182  0A38  1D03               	btfss	3,2
  6183  0A39  2A25               	goto	l2570
  6184  0A3A                     l2578:	
  6185  0A3A  082B               	movf	___lwmod@dividend+1,w
  6186  0A3B  00A9               	movwf	?___lwmod+1
  6187  0A3C  082A               	movf	___lwmod@dividend,w
  6188  0A3D  00A8               	movwf	?___lwmod
  6189  0A3E  0008               	return
  6190  0A3F                     __end_of___lwmod:	
  6191                           
  6192                           	psect	text21
  6193  0A9B                     __ptext21:	
  6194 ;; *************** function ___lwdiv *****************
  6195 ;; Defined at:
  6196 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  divisor         2    0[BANK0 ] unsigned int 
  6199 ;;  dividend        2    2[BANK0 ] unsigned int 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  quotient        2    5[BANK0 ] unsigned int 
  6202 ;;  counter         1    7[BANK0 ] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  2    0[BANK0 ] unsigned int 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6212 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;Total ram usage:        8 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    2
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_disp_ma_result
  6223 ;;		_disp_kv
  6224 ;;		_disp_3digit
  6225 ;;		_disp_ADC
  6226 ;;		_disp_ma
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function ___lwdiv
  6232  0A9B                     ___lwdiv:	
  6233                           
  6234                           ;incstack = 0
  6235                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6236  0A9B  0020               	movlb	0	; select bank0
  6237  0A9C  01A5               	clrf	___lwdiv@quotient
  6238  0A9D  01A6               	clrf	___lwdiv@quotient+1
  6239  0A9E  0820               	movf	___lwdiv@divisor,w
  6240  0A9F  0421               	iorwf	___lwdiv@divisor+1,w
  6241  0AA0  1903               	btfsc	3,2
  6242  0AA1  2ACB               	goto	l2556
  6243  0AA2  01A7               	clrf	___lwdiv@counter
  6244  0AA3  0AA7               	incf	___lwdiv@counter,f
  6245  0AA4                     l2544:	
  6246  0AA4  1BA1               	btfsc	___lwdiv@divisor+1,7
  6247  0AA5  2AB0               	goto	l2546
  6248  0AA6  3001               	movlw	1
  6249  0AA7                     u2595:	
  6250  0AA7  35A0               	lslf	___lwdiv@divisor,f
  6251  0AA8  0DA1               	rlf	___lwdiv@divisor+1,f
  6252  0AA9  0B89               	decfsz	9,f
  6253  0AAA  2AA7               	goto	u2595
  6254  0AAB  3001               	movlw	1
  6255  0AAC  00A4               	movwf	??___lwdiv
  6256  0AAD  0824               	movf	??___lwdiv,w
  6257  0AAE  07A7               	addwf	___lwdiv@counter,f
  6258  0AAF  2AA4               	goto	l2544
  6259  0AB0                     l2546:	
  6260  0AB0  3001               	movlw	1
  6261  0AB1                     u2615:	
  6262  0AB1  35A5               	lslf	___lwdiv@quotient,f
  6263  0AB2  0DA6               	rlf	___lwdiv@quotient+1,f
  6264  0AB3  0B89               	decfsz	9,f
  6265  0AB4  2AB1               	goto	u2615
  6266  0AB5  0821               	movf	___lwdiv@divisor+1,w
  6267  0AB6  0223               	subwf	___lwdiv@dividend+1,w
  6268  0AB7  1D03               	skipz
  6269  0AB8  2ABB               	goto	u2625
  6270  0AB9  0820               	movf	___lwdiv@divisor,w
  6271  0ABA  0222               	subwf	___lwdiv@dividend,w
  6272  0ABB                     u2625:	
  6273  0ABB  1C03               	skipc
  6274  0ABC  2AC2               	goto	l2552
  6275  0ABD  0820               	movf	___lwdiv@divisor,w
  6276  0ABE  02A2               	subwf	___lwdiv@dividend,f
  6277  0ABF  0821               	movf	___lwdiv@divisor+1,w
  6278  0AC0  3BA3               	subwfb	___lwdiv@dividend+1,f
  6279  0AC1  1425               	bsf	___lwdiv@quotient,0
  6280  0AC2                     l2552:	
  6281  0AC2  3001               	movlw	1
  6282  0AC3                     u2635:	
  6283  0AC3  36A1               	lsrf	___lwdiv@divisor+1,f
  6284  0AC4  0CA0               	rrf	___lwdiv@divisor,f
  6285  0AC5  0B89               	decfsz	9,f
  6286  0AC6  2AC3               	goto	u2635
  6287  0AC7  3001               	movlw	1
  6288  0AC8  02A7               	subwf	___lwdiv@counter,f
  6289  0AC9  1D03               	btfss	3,2
  6290  0ACA  2AB0               	goto	l2546
  6291  0ACB                     l2556:	
  6292  0ACB  0826               	movf	___lwdiv@quotient+1,w
  6293  0ACC  00A1               	movwf	?___lwdiv+1
  6294  0ACD  0825               	movf	___lwdiv@quotient,w
  6295  0ACE  00A0               	movwf	?___lwdiv
  6296  0ACF  0008               	return
  6297  0AD0                     __end_of___lwdiv:	
  6298                           
  6299                           	psect	text22
  6300  09E9                     __ptext22:	
  6301 ;; *************** function _adcRead *****************
  6302 ;; Defined at:
  6303 ;;		line 15 in file "adc.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  channel         1    wreg     unsigned char 
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;  channel         1    3[BANK0 ] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  2    0[BANK0 ] unsigned int 
  6310 ;; Registers used:
  6311 ;;		wreg, status,2, status,0
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;Total ram usage:        4 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    2
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_event_display
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function _adcRead
  6333  09E9                     _adcRead:	
  6334                           
  6335                           ;incstack = 0
  6336                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  6337                           ;adcRead@channel stored from wreg
  6338  09E9  0020               	movlb	0	; select bank0
  6339  09EA  00A3               	movwf	adcRead@channel
  6340                           
  6341                           ;adc.c: 17: ADCON1bits.ADFM = 1;
  6342  09EB  0021               	movlb	1	; select bank1
  6343  09EC  179E               	bsf	30,7	;volatile
  6344                           
  6345                           ;adc.c: 18: ADCON1bits.ADCS0 = 1;
  6346  09ED  161E               	bsf	30,4	;volatile
  6347                           
  6348                           ;adc.c: 19: ADCON1bits.ADCS1 = 1;
  6349  09EE  169E               	bsf	30,5	;volatile
  6350                           
  6351                           ;adc.c: 20: ADCON1bits.ADCS2 = 0;
  6352  09EF  131E               	bcf	30,6	;volatile
  6353                           
  6354                           ;adc.c: 21: ADCON0bits.CHS = channel;
  6355  09F0  0020               	movlb	0	; select bank0
  6356  09F1  0823               	movf	adcRead@channel,w
  6357  09F2  00A2               	movwf	??_adcRead
  6358  09F3  0DA2               	rlf	??_adcRead,f
  6359  09F4  0DA2               	rlf	??_adcRead,f
  6360  09F5  0021               	movlb	1	; select bank1
  6361  09F6  081D               	movf	29,w	;volatile
  6362  09F7  0020               	movlb	0	; select bank0
  6363  09F8  0622               	xorwf	??_adcRead,w
  6364  09F9  3983               	andlw	-125
  6365  09FA  0622               	xorwf	??_adcRead,w
  6366  09FB  0021               	movlb	1	; select bank1
  6367  09FC  009D               	movwf	29	;volatile
  6368                           
  6369                           ;adc.c: 22: ADCON0bits.ADON = 1;
  6370  09FD  141D               	bsf	29,0	;volatile
  6371                           
  6372                           ;adc.c: 23: _delay((unsigned long)((1)*(4000000/4000.0)));
  6373  09FE  30F9               	movlw	249
  6374  09FF  0020               	movlb	0	; select bank0
  6375  0A00  00A2               	movwf	??_adcRead
  6376  0A01                     u3087:	
  6377  0A01  0000               	nop
  6378  0A02  0BA2               	decfsz	??_adcRead,f
  6379  0A03  2A01               	goto	u3087
  6380  0A04  3200               	nop2	;nop
  6381  0A05  0000               	nop
  6382                           
  6383                           ;adc.c: 24: ADCON0bits.GO_nDONE = 1;
  6384  0A06  0021               	movlb	1	; select bank1
  6385  0A07  149D               	bsf	29,1	;volatile
  6386  0A08                     l175:	
  6387                           ;adc.c: 25: while(ADCON0bits.GO_nDONE);
  6388                           
  6389  0A08  189D               	btfsc	29,1	;volatile
  6390  0A09  2A08               	goto	l175
  6391                           
  6392                           ;adc.c: 27: return ((ADRESH<<8)+ADRESL);
  6393  0A0A  081C               	movf	28,w	;volatile
  6394  0A0B  0020               	movlb	0	; select bank0
  6395  0A0C  00A1               	movwf	?_adcRead+1
  6396  0A0D  0021               	movlb	1	; select bank1
  6397  0A0E  081B               	movf	27,w	;volatile
  6398  0A0F  0020               	movlb	0	; select bank0
  6399  0A10  00A0               	movwf	?_adcRead
  6400  0A11  0008               	return
  6401  0A12                     __end_of_adcRead:	
  6402                           
  6403                           	psect	text23
  6404  17D9                     __ptext23:	
  6405 ;; *************** function _timerGetTick *****************
  6406 ;; Defined at:
  6407 ;;		line 29 in file "timer.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  time            1    wreg     PTR struct .
  6410 ;;		 -> Timer(48), 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  time            1    0[BANK0 ] PTR struct .
  6413 ;;		 -> Timer(48), 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      unsigned char 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr1l, fsr1h
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;Total ram usage:        1 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    2
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_event_timer_Button
  6434 ;;		_event_expose
  6435 ;;		_event_display
  6436 ;;		_event_rst
  6437 ;;		_event_anodeCurrent
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _timerGetTick
  6443  17D9                     _timerGetTick:	
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in _timerGetTick: [wregfsr1]
  6447                           ;timerGetTick@time stored from wreg
  6448  17D9  0020               	movlb	0	; select bank0
  6449  17DA  00A0               	movwf	timerGetTick@time
  6450                           
  6451                           ;timer.c: 31: return time->tick;
  6452  17DB  0A20               	incf	timerGetTick@time,w
  6453  17DC  0086               	movwf	6
  6454  17DD  0187               	clrf	7
  6455  17DE  0801               	movf	1,w
  6456  17DF  0008               	return
  6457  17E0                     __end_of_timerGetTick:	
  6458                           
  6459                           	psect	text24
  6460  0F66                     __ptext24:	
  6461 ;; *************** function _pwmInit_ccp2 *****************
  6462 ;; Defined at:
  6463 ;;		line 3 in file "pwm.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  freq            2   58[BANK0 ] unsigned int 
  6466 ;;  duty            3   60[BANK0 ] float 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  ccpr1l_ccp1c    2   65[BANK0 ] unsigned int 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      void 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, pclath, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6478 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;Total ram usage:        9 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    4
  6485 ;; This function calls:
  6486 ;;		___aldiv
  6487 ;;		___awtoft
  6488 ;;		___ftdiv
  6489 ;;		___ftmul
  6490 ;;		___fttol
  6491 ;; This function is called by:
  6492 ;;		_event_btn_Expose
  6493 ;;		_event_anodeCurrent
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           
  6498                           ;psect for function _pwmInit_ccp2
  6499  0F66                     _pwmInit_ccp2:	
  6500                           
  6501                           ;pwm.c: 5: unsigned int ccpr1l_ccp1con;
  6502                           ;pwm.c: 14: CCP2CONbits.P2M = 0b00;
  6503                           
  6504                           ;incstack = 0
  6505                           ; Regs used in _pwmInit_ccp2: [wreg+status,2+status,0+pclath+cstack]
  6506  0F66  303F               	movlw	-193
  6507  0F67  0025               	movlb	5	; select bank5
  6508  0F68  059A               	andwf	26,f	;volatile
  6509                           
  6510                           ;pwm.c: 15: CCP2CONbits.CCP2M = 0b1100;
  6511  0F69  081A               	movf	26,w	;volatile
  6512  0F6A  39F0               	andlw	-16
  6513  0F6B  380C               	iorlw	12
  6514  0F6C  009A               	movwf	26	;volatile
  6515                           
  6516                           ;pwm.c: 16: CCPTMRS0bits.C2TSEL = 0b00;
  6517  0F6D  30F3               	movlw	-13
  6518  0F6E  059E               	andwf	30,f	;volatile
  6519                           
  6520                           ;pwm.c: 18: PIR1bits.TMR2IF = 1;
  6521  0F6F  0020               	movlb	0	; select bank0
  6522  0F70  1491               	bsf	17,1	;volatile
  6523                           
  6524                           ;pwm.c: 21: APFCONbits.CCP2SEL = 1;
  6525  0F71  0022               	movlb	2	; select bank2
  6526  0F72  151D               	bsf	29,2	;volatile
  6527                           
  6528                           ;pwm.c: 30: PR2 = (4000000 / (4*freq*16)) - 1;
  6529  0F73  0020               	movlb	0	; select bank0
  6530  0F74  085B               	movf	pwmInit_ccp2@freq+1,w
  6531  0F75  00E0               	movwf	??_pwmInit_ccp2+1
  6532  0F76  085A               	movf	pwmInit_ccp2@freq,w
  6533  0F77  00DF               	movwf	??_pwmInit_ccp2
  6534  0F78  35DF               	lslf	??_pwmInit_ccp2,f
  6535  0F79  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6536  0F7A  35DF               	lslf	??_pwmInit_ccp2,f
  6537  0F7B  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6538  0F7C  0EDF               	swapf	??_pwmInit_ccp2,f
  6539  0F7D  0EE0               	swapf	??_pwmInit_ccp2+1,f
  6540  0F7E  30F0               	movlw	240
  6541  0F7F  05E0               	andwf	??_pwmInit_ccp2+1,f
  6542  0F80  085F               	movf	??_pwmInit_ccp2,w
  6543  0F81  390F               	andlw	15
  6544  0F82  04E0               	iorwf	??_pwmInit_ccp2+1,f
  6545  0F83  30F0               	movlw	240
  6546  0F84  05DF               	andwf	??_pwmInit_ccp2,f
  6547  0F85  085F               	movf	??_pwmInit_ccp2,w
  6548  0F86  00A6               	movwf	___aldiv@divisor
  6549  0F87  0860               	movf	??_pwmInit_ccp2+1,w
  6550  0F88  00A7               	movwf	___aldiv@divisor+1
  6551  0F89  01A8               	clrf	___aldiv@divisor+2
  6552  0F8A  01A9               	clrf	___aldiv@divisor+3
  6553  0F8B  3000               	movlw	0
  6554  0F8C  00AD               	movwf	___aldiv@dividend+3
  6555  0F8D  303D               	movlw	61
  6556  0F8E  00AC               	movwf	___aldiv@dividend+2
  6557  0F8F  3009               	movlw	9
  6558  0F90  00AB               	movwf	___aldiv@dividend+1
  6559  0F91  3000               	movlw	0
  6560  0F92  00AA               	movwf	___aldiv@dividend
  6561  0F93  318E  265D  318F   	fcall	___aldiv
  6562  0F96  0020               	movlb	0	; select bank0
  6563  0F97  0826               	movf	?___aldiv,w
  6564  0F98  3EFF               	addlw	255
  6565  0F99  009B               	movwf	27	;volatile
  6566                           
  6567                           ;pwm.c: 35: ccpr1l_ccp1con =(4*(PR2+1))*((float)duty/100);
  6568  0F9A  081B               	movf	27,w	;volatile
  6569  0F9B  00DF               	movwf	??_pwmInit_ccp2
  6570  0F9C  01E0               	clrf	??_pwmInit_ccp2+1
  6571  0F9D  35DF               	lslf	??_pwmInit_ccp2,f
  6572  0F9E  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6573  0F9F  35DF               	lslf	??_pwmInit_ccp2,f
  6574  0FA0  0DE0               	rlf	??_pwmInit_ccp2+1,f
  6575  0FA1  085F               	movf	??_pwmInit_ccp2,w
  6576  0FA2  3E04               	addlw	4
  6577  0FA3  00A8               	movwf	___awtoft@c
  6578  0FA4  3000               	movlw	0
  6579  0FA5  3D60               	addwfc	??_pwmInit_ccp2+1,w
  6580  0FA6  00A9               	movwf	___awtoft@c+1
  6581  0FA7  3189  217A  318F   	fcall	___awtoft
  6582  0FAA  0020               	movlb	0	; select bank0
  6583  0FAB  0828               	movf	?___awtoft,w
  6584  0FAC  00BF               	movwf	___ftmul@f2
  6585  0FAD  0829               	movf	?___awtoft+1,w
  6586  0FAE  00C0               	movwf	___ftmul@f2+1
  6587  0FAF  082A               	movf	?___awtoft+2,w
  6588  0FB0  00C1               	movwf	___ftmul@f2+2
  6589  0FB1  085C               	movf	pwmInit_ccp2@duty,w
  6590  0FB2  00AF               	movwf	___ftdiv@f1
  6591  0FB3  085D               	movf	pwmInit_ccp2@duty+1,w
  6592  0FB4  00B0               	movwf	___ftdiv@f1+1
  6593  0FB5  085E               	movf	pwmInit_ccp2@duty+2,w
  6594  0FB6  00B1               	movwf	___ftdiv@f1+2
  6595  0FB7  3000               	movlw	0
  6596  0FB8  00AC               	movwf	___ftdiv@f2
  6597  0FB9  30C8               	movlw	200
  6598  0FBA  00AD               	movwf	___ftdiv@f2+1
  6599  0FBB  3042               	movlw	66
  6600  0FBC  00AE               	movwf	___ftdiv@f2+2
  6601  0FBD  3186  264A  318F   	fcall	___ftdiv
  6602  0FC0  0020               	movlb	0	; select bank0
  6603  0FC1  082C               	movf	?___ftdiv,w
  6604  0FC2  00BC               	movwf	___ftmul@f1
  6605  0FC3  082D               	movf	?___ftdiv+1,w
  6606  0FC4  00BD               	movwf	___ftmul@f1+1
  6607  0FC5  082E               	movf	?___ftdiv+2,w
  6608  0FC6  00BE               	movwf	___ftmul@f1+2
  6609  0FC7  3184  24E9  318F   	fcall	___ftmul
  6610  0FCA  0020               	movlb	0	; select bank0
  6611  0FCB  083C               	movf	?___ftmul,w
  6612  0FCC  00CC               	movwf	___fttol@f1
  6613  0FCD  083D               	movf	?___ftmul+1,w
  6614  0FCE  00CD               	movwf	___fttol@f1+1
  6615  0FCF  083E               	movf	?___ftmul+2,w
  6616  0FD0  00CE               	movwf	___fttol@f1+2
  6617  0FD1  318E  26DF  318F   	fcall	___fttol
  6618  0FD4  0020               	movlb	0	; select bank0
  6619  0FD5  084D               	movf	?___fttol+1,w
  6620  0FD6  00E2               	movwf	pwmInit_ccp2@ccpr1l_ccp1con+1
  6621  0FD7  084C               	movf	?___fttol,w
  6622  0FD8  00E1               	movwf	pwmInit_ccp2@ccpr1l_ccp1con
  6623                           
  6624                           ;pwm.c: 42: CCPR2L = (ccpr1l_ccp1con ) >> 2;
  6625  0FD9  0862               	movf	pwmInit_ccp2@ccpr1l_ccp1con+1,w
  6626  0FDA  00E0               	movwf	??_pwmInit_ccp2+1
  6627  0FDB  0861               	movf	pwmInit_ccp2@ccpr1l_ccp1con,w
  6628  0FDC  00DF               	movwf	??_pwmInit_ccp2
  6629  0FDD  36E0               	lsrf	??_pwmInit_ccp2+1,f
  6630  0FDE  0CDF               	rrf	??_pwmInit_ccp2,f
  6631  0FDF  36E0               	lsrf	??_pwmInit_ccp2+1,f
  6632  0FE0  0CDF               	rrf	??_pwmInit_ccp2,f
  6633  0FE1  085F               	movf	??_pwmInit_ccp2,w
  6634  0FE2  0025               	movlb	5	; select bank5
  6635  0FE3  0098               	movwf	24	;volatile
  6636                           
  6637                           ;pwm.c: 43: CCP2CONbits.DC2B0 = ccpr1l_ccp1con & 0x0001;
  6638  0FE4  0020               	movlb	0	; select bank0
  6639  0FE5  0861               	movf	pwmInit_ccp2@ccpr1l_ccp1con,w
  6640  0FE6  3901               	andlw	1
  6641  0FE7  00DF               	movwf	??_pwmInit_ccp2
  6642  0FE8  0EDF               	swapf	??_pwmInit_ccp2,f
  6643  0FE9  0025               	movlb	5	; select bank5
  6644  0FEA  081A               	movf	26,w	;volatile
  6645  0FEB  0020               	movlb	0	; select bank0
  6646  0FEC  065F               	xorwf	??_pwmInit_ccp2,w
  6647  0FED  39EF               	andlw	-17
  6648  0FEE  065F               	xorwf	??_pwmInit_ccp2,w
  6649  0FEF  0025               	movlb	5	; select bank5
  6650  0FF0  009A               	movwf	26	;volatile
  6651                           
  6652                           ;pwm.c: 44: CCP2CONbits.DC2B1 = ccpr1l_ccp1con & 0x0010;
  6653  0FF1  0020               	movlb	0	; select bank0
  6654  0FF2  0861               	movf	pwmInit_ccp2@ccpr1l_ccp1con,w
  6655  0FF3  3910               	andlw	16
  6656  0FF4  00DF               	movwf	??_pwmInit_ccp2
  6657  0FF5  0EDF               	swapf	??_pwmInit_ccp2,f
  6658  0FF6  0DDF               	rlf	??_pwmInit_ccp2,f
  6659  0FF7  0025               	movlb	5	; select bank5
  6660  0FF8  081A               	movf	26,w	;volatile
  6661  0FF9  0020               	movlb	0	; select bank0
  6662  0FFA  065F               	xorwf	??_pwmInit_ccp2,w
  6663  0FFB  39DF               	andlw	-33
  6664  0FFC  065F               	xorwf	??_pwmInit_ccp2,w
  6665  0FFD  0025               	movlb	5	; select bank5
  6666  0FFE  009A               	movwf	26	;volatile
  6667  0FFF  0008               	return
  6668  1000                     __end_of_pwmInit_ccp2:	
  6669                           
  6670                           	psect	text25
  6671  0EDF                     __ptext25:	
  6672 ;; *************** function ___fttol *****************
  6673 ;; Defined at:
  6674 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  f1              3   44[BANK0 ] float 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  lval            4   53[BANK0 ] unsigned long 
  6679 ;;  exp1            1   57[BANK0 ] unsigned char 
  6680 ;;  sign1           1   52[BANK0 ] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  4   44[BANK0 ] long 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;Total ram usage:       14 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    2
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_disp_ma_result
  6701 ;;		_disp_kv
  6702 ;;		_adcTodac
  6703 ;;		_pwmInit_ccp2
  6704 ;;		_pwmInit_ccp3
  6705 ;;		_disp_ADC
  6706 ;;		_disp_ma
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           
  6711                           ;psect for function ___fttol
  6712  0EDF                     ___fttol:	
  6713                           
  6714                           ;incstack = 0
  6715                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6716  0EDF  0020               	movlb	0	; select bank0
  6717  0EE0  084C               	movf	___fttol@f1,w
  6718  0EE1  00D0               	movwf	??___fttol
  6719  0EE2  084D               	movf	___fttol@f1+1,w
  6720  0EE3  00D1               	movwf	??___fttol+1
  6721  0EE4  084E               	movf	___fttol@f1+2,w
  6722  0EE5  00D2               	movwf	??___fttol+2
  6723  0EE6  1003               	clrc
  6724  0EE7  0D51               	rlf	??___fttol+1,w
  6725  0EE8  0D52               	rlf	??___fttol+2,w
  6726  0EE9  00D3               	movwf	??___fttol+3
  6727  0EEA  0853               	movf	??___fttol+3,w
  6728  0EEB  00D9               	movwf	___fttol@exp1
  6729  0EEC  0859               	movf	___fttol@exp1,w
  6730  0EED  1D03               	btfss	3,2
  6731  0EEE  2EF8               	goto	l2210
  6732  0EEF  3000               	movlw	0
  6733  0EF0  00CF               	movwf	?___fttol+3
  6734  0EF1  3000               	movlw	0
  6735  0EF2  00CE               	movwf	?___fttol+2
  6736  0EF3  3000               	movlw	0
  6737  0EF4  00CD               	movwf	?___fttol+1
  6738  0EF5  3000               	movlw	0
  6739  0EF6  00CC               	movwf	?___fttol
  6740  0EF7  0008               	return
  6741  0EF8                     l2210:	
  6742  0EF8  084C               	movf	___fttol@f1,w
  6743  0EF9  00D0               	movwf	??___fttol
  6744  0EFA  084D               	movf	___fttol@f1+1,w
  6745  0EFB  00D1               	movwf	??___fttol+1
  6746  0EFC  084E               	movf	___fttol@f1+2,w
  6747  0EFD  00D2               	movwf	??___fttol+2
  6748  0EFE  3017               	movlw	23
  6749  0EFF                     u2045:	
  6750  0EFF  36D2               	lsrf	??___fttol+2,f
  6751  0F00  0CD1               	rrf	??___fttol+1,f
  6752  0F01  0CD0               	rrf	??___fttol,f
  6753  0F02  0B89               	decfsz	9,f
  6754  0F03  2EFF               	goto	u2045
  6755  0F04  0850               	movf	??___fttol,w
  6756  0F05  00D3               	movwf	??___fttol+3
  6757  0F06  0853               	movf	??___fttol+3,w
  6758  0F07  00D4               	movwf	___fttol@sign1
  6759  0F08  17CD               	bsf	___fttol@f1+1,7
  6760  0F09  30FF               	movlw	255
  6761  0F0A  05CC               	andwf	___fttol@f1,f
  6762  0F0B  30FF               	movlw	255
  6763  0F0C  05CD               	andwf	___fttol@f1+1,f
  6764  0F0D  3000               	movlw	0
  6765  0F0E  05CE               	andwf	___fttol@f1+2,f
  6766  0F0F  084C               	movf	___fttol@f1,w
  6767  0F10  00D5               	movwf	___fttol@lval
  6768  0F11  084D               	movf	___fttol@f1+1,w
  6769  0F12  00D6               	movwf	___fttol@lval+1
  6770  0F13  084E               	movf	___fttol@f1+2,w
  6771  0F14  00D7               	movwf	___fttol@lval+2
  6772  0F15  01D8               	clrf	___fttol@lval+3
  6773  0F16  308E               	movlw	142
  6774  0F17  02D9               	subwf	___fttol@exp1,f
  6775  0F18  1FD9               	btfss	___fttol@exp1,7
  6776  0F19  2F36               	goto	l2230
  6777  0F1A  0859               	movf	___fttol@exp1,w
  6778  0F1B  3A80               	xorlw	128
  6779  0F1C  3E8F               	addlw	143
  6780  0F1D  1803               	skipnc
  6781  0F1E  2F28               	goto	l2228
  6782  0F1F  3000               	movlw	0
  6783  0F20  00CF               	movwf	?___fttol+3
  6784  0F21  3000               	movlw	0
  6785  0F22  00CE               	movwf	?___fttol+2
  6786  0F23  3000               	movlw	0
  6787  0F24  00CD               	movwf	?___fttol+1
  6788  0F25  3000               	movlw	0
  6789  0F26  00CC               	movwf	?___fttol
  6790  0F27  0008               	return
  6791  0F28                     l2228:	
  6792  0F28  3001               	movlw	1
  6793  0F29                     u2075:	
  6794  0F29  36D8               	lsrf	___fttol@lval+3,f
  6795  0F2A  0CD7               	rrf	___fttol@lval+2,f
  6796  0F2B  0CD6               	rrf	___fttol@lval+1,f
  6797  0F2C  0CD5               	rrf	___fttol@lval,f
  6798  0F2D  0B89               	decfsz	9,f
  6799  0F2E  2F29               	goto	u2075
  6800  0F2F  3001               	movlw	1
  6801  0F30  00D0               	movwf	??___fttol
  6802  0F31  0850               	movf	??___fttol,w
  6803  0F32  07D9               	addwf	___fttol@exp1,f
  6804  0F33  1903               	btfsc	3,2
  6805  0F34  2F4F               	goto	l2238
  6806  0F35  2F28               	goto	l2228
  6807  0F36                     l2230:	
  6808  0F36  3018               	movlw	24
  6809  0F37  0259               	subwf	___fttol@exp1,w
  6810  0F38  1C03               	skipc
  6811  0F39  2F4C               	goto	l838
  6812  0F3A  3000               	movlw	0
  6813  0F3B  00CF               	movwf	?___fttol+3
  6814  0F3C  3000               	movlw	0
  6815  0F3D  00CE               	movwf	?___fttol+2
  6816  0F3E  3000               	movlw	0
  6817  0F3F  00CD               	movwf	?___fttol+1
  6818  0F40  3000               	movlw	0
  6819  0F41  00CC               	movwf	?___fttol
  6820  0F42  0008               	return
  6821  0F43                     l2236:	
  6822  0F43  3001               	movlw	1
  6823  0F44                     u2105:	
  6824  0F44  35D5               	lslf	___fttol@lval,f
  6825  0F45  0DD6               	rlf	___fttol@lval+1,f
  6826  0F46  0DD7               	rlf	___fttol@lval+2,f
  6827  0F47  0DD8               	rlf	___fttol@lval+3,f
  6828  0F48  0B89               	decfsz	9,f
  6829  0F49  2F44               	goto	u2105
  6830  0F4A  3001               	movlw	1
  6831  0F4B  02D9               	subwf	___fttol@exp1,f
  6832  0F4C                     l838:	
  6833  0F4C  0859               	movf	___fttol@exp1,w
  6834  0F4D  1D03               	btfss	3,2
  6835  0F4E  2F43               	goto	l2236
  6836  0F4F                     l2238:	
  6837  0F4F  0854               	movf	___fttol@sign1,w
  6838  0F50  1903               	btfsc	3,2
  6839  0F51  2F5D               	goto	l2242
  6840  0F52  09D5               	comf	___fttol@lval,f
  6841  0F53  09D6               	comf	___fttol@lval+1,f
  6842  0F54  09D7               	comf	___fttol@lval+2,f
  6843  0F55  09D8               	comf	___fttol@lval+3,f
  6844  0F56  0AD5               	incf	___fttol@lval,f
  6845  0F57  1903               	skipnz
  6846  0F58  0AD6               	incf	___fttol@lval+1,f
  6847  0F59  1903               	skipnz
  6848  0F5A  0AD7               	incf	___fttol@lval+2,f
  6849  0F5B  1903               	skipnz
  6850  0F5C  0AD8               	incf	___fttol@lval+3,f
  6851  0F5D                     l2242:	
  6852  0F5D  0858               	movf	___fttol@lval+3,w
  6853  0F5E  00CF               	movwf	?___fttol+3
  6854  0F5F  0857               	movf	___fttol@lval+2,w
  6855  0F60  00CE               	movwf	?___fttol+2
  6856  0F61  0856               	movf	___fttol@lval+1,w
  6857  0F62  00CD               	movwf	?___fttol+1
  6858  0F63  0855               	movf	___fttol@lval,w
  6859  0F64  00CC               	movwf	?___fttol
  6860  0F65  0008               	return
  6861  0F66                     __end_of___fttol:	
  6862                           
  6863                           	psect	text26
  6864  04E9                     __ptext26:	
  6865 ;; *************** function ___ftmul *****************
  6866 ;; Defined at:
  6867 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  f1              3   28[BANK0 ] float 
  6870 ;;  f2              3   31[BANK0 ] float 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  6873 ;;  sign            1   43[BANK0 ] unsigned char 
  6874 ;;  cntr            1   42[BANK0 ] unsigned char 
  6875 ;;  exp             1   38[BANK0 ] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  3   28[BANK0 ] float 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0, pclath, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6889 ;;Total ram usage:       16 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    3
  6892 ;; This function calls:
  6893 ;;		___ftpack
  6894 ;; This function is called by:
  6895 ;;		_disp_ma_result
  6896 ;;		_disp_kv
  6897 ;;		_adcTodac
  6898 ;;		_pwmInit_ccp2
  6899 ;;		_pwmInit_ccp3
  6900 ;;		_disp_ADC
  6901 ;;		_disp_ma
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function ___ftmul
  6907  04E9                     ___ftmul:	
  6908                           
  6909                           ;incstack = 0
  6910                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6911  04E9  0020               	movlb	0	; select bank0
  6912  04EA  083C               	movf	___ftmul@f1,w
  6913  04EB  00C2               	movwf	??___ftmul
  6914  04EC  083D               	movf	___ftmul@f1+1,w
  6915  04ED  00C3               	movwf	??___ftmul+1
  6916  04EE  083E               	movf	___ftmul@f1+2,w
  6917  04EF  00C4               	movwf	??___ftmul+2
  6918  04F0  1003               	clrc
  6919  04F1  0D43               	rlf	??___ftmul+1,w
  6920  04F2  0D44               	rlf	??___ftmul+2,w
  6921  04F3  00C5               	movwf	??___ftmul+3
  6922  04F4  0845               	movf	??___ftmul+3,w
  6923  04F5  00C6               	movwf	___ftmul@exp
  6924  04F6  0846               	movf	___ftmul@exp,w
  6925  04F7  1D03               	btfss	3,2
  6926  04F8  2D00               	goto	l2160
  6927  04F9  3000               	movlw	0
  6928  04FA  00BC               	movwf	?___ftmul
  6929  04FB  3000               	movlw	0
  6930  04FC  00BD               	movwf	?___ftmul+1
  6931  04FD  3000               	movlw	0
  6932  04FE  00BE               	movwf	?___ftmul+2
  6933  04FF  0008               	return
  6934  0500                     l2160:	
  6935  0500  083F               	movf	___ftmul@f2,w
  6936  0501  00C2               	movwf	??___ftmul
  6937  0502  0840               	movf	___ftmul@f2+1,w
  6938  0503  00C3               	movwf	??___ftmul+1
  6939  0504  0841               	movf	___ftmul@f2+2,w
  6940  0505  00C4               	movwf	??___ftmul+2
  6941  0506  1003               	clrc
  6942  0507  0D43               	rlf	??___ftmul+1,w
  6943  0508  0D44               	rlf	??___ftmul+2,w
  6944  0509  00C5               	movwf	??___ftmul+3
  6945  050A  0845               	movf	??___ftmul+3,w
  6946  050B  00CB               	movwf	___ftmul@sign
  6947  050C  084B               	movf	___ftmul@sign,w
  6948  050D  1D03               	btfss	3,2
  6949  050E  2D16               	goto	l2166
  6950  050F  3000               	movlw	0
  6951  0510  00BC               	movwf	?___ftmul
  6952  0511  3000               	movlw	0
  6953  0512  00BD               	movwf	?___ftmul+1
  6954  0513  3000               	movlw	0
  6955  0514  00BE               	movwf	?___ftmul+2
  6956  0515  0008               	return
  6957  0516                     l2166:	
  6958  0516  084B               	movf	___ftmul@sign,w
  6959  0517  3E7B               	addlw	123
  6960  0518  00C2               	movwf	??___ftmul
  6961  0519  0842               	movf	??___ftmul,w
  6962  051A  07C6               	addwf	___ftmul@exp,f
  6963  051B  083C               	movf	___ftmul@f1,w
  6964  051C  00C2               	movwf	??___ftmul
  6965  051D  083D               	movf	___ftmul@f1+1,w
  6966  051E  00C3               	movwf	??___ftmul+1
  6967  051F  083E               	movf	___ftmul@f1+2,w
  6968  0520  00C4               	movwf	??___ftmul+2
  6969  0521  3010               	movlw	16
  6970  0522                     u1935:	
  6971  0522  36C4               	lsrf	??___ftmul+2,f
  6972  0523  0CC3               	rrf	??___ftmul+1,f
  6973  0524  0CC2               	rrf	??___ftmul,f
  6974  0525  0B89               	decfsz	9,f
  6975  0526  2D22               	goto	u1935
  6976  0527  0842               	movf	??___ftmul,w
  6977  0528  00C5               	movwf	??___ftmul+3
  6978  0529  0845               	movf	??___ftmul+3,w
  6979  052A  00CB               	movwf	___ftmul@sign
  6980  052B  083F               	movf	___ftmul@f2,w
  6981  052C  00C2               	movwf	??___ftmul
  6982  052D  0840               	movf	___ftmul@f2+1,w
  6983  052E  00C3               	movwf	??___ftmul+1
  6984  052F  0841               	movf	___ftmul@f2+2,w
  6985  0530  00C4               	movwf	??___ftmul+2
  6986  0531  3010               	movlw	16
  6987  0532                     u1945:	
  6988  0532  36C4               	lsrf	??___ftmul+2,f
  6989  0533  0CC3               	rrf	??___ftmul+1,f
  6990  0534  0CC2               	rrf	??___ftmul,f
  6991  0535  0B89               	decfsz	9,f
  6992  0536  2D32               	goto	u1945
  6993  0537  0842               	movf	??___ftmul,w
  6994  0538  00C5               	movwf	??___ftmul+3
  6995  0539  0845               	movf	??___ftmul+3,w
  6996  053A  06CB               	xorwf	___ftmul@sign,f
  6997  053B  3080               	movlw	128
  6998  053C  00C2               	movwf	??___ftmul
  6999  053D  0842               	movf	??___ftmul,w
  7000  053E  05CB               	andwf	___ftmul@sign,f
  7001  053F  17BD               	bsf	___ftmul@f1+1,7
  7002  0540  17C0               	bsf	___ftmul@f2+1,7
  7003  0541  30FF               	movlw	255
  7004  0542  05BF               	andwf	___ftmul@f2,f
  7005  0543  30FF               	movlw	255
  7006  0544  05C0               	andwf	___ftmul@f2+1,f
  7007  0545  3000               	movlw	0
  7008  0546  05C1               	andwf	___ftmul@f2+2,f
  7009  0547  3000               	movlw	0
  7010  0548  00C7               	movwf	___ftmul@f3_as_product
  7011  0549  3000               	movlw	0
  7012  054A  00C8               	movwf	___ftmul@f3_as_product+1
  7013  054B  3000               	movlw	0
  7014  054C  00C9               	movwf	___ftmul@f3_as_product+2
  7015  054D  3007               	movlw	7
  7016  054E  00C2               	movwf	??___ftmul
  7017  054F  0842               	movf	??___ftmul,w
  7018  0550  00CA               	movwf	___ftmul@cntr
  7019  0551                     l2178:	
  7020  0551  1C3C               	btfss	___ftmul@f1,0
  7021  0552  2D59               	goto	l2182
  7022  0553  083F               	movf	___ftmul@f2,w
  7023  0554  07C7               	addwf	___ftmul@f3_as_product,f
  7024  0555  0840               	movf	___ftmul@f2+1,w
  7025  0556  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  7026  0557  0841               	movf	___ftmul@f2+2,w
  7027  0558  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  7028  0559                     l2182:	
  7029  0559  3001               	movlw	1
  7030  055A                     u1965:	
  7031  055A  36BE               	lsrf	___ftmul@f1+2,f
  7032  055B  0CBD               	rrf	___ftmul@f1+1,f
  7033  055C  0CBC               	rrf	___ftmul@f1,f
  7034  055D  0B89               	decfsz	9,f
  7035  055E  2D5A               	goto	u1965
  7036  055F  3001               	movlw	1
  7037  0560                     u1975:	
  7038  0560  35BF               	lslf	___ftmul@f2,f
  7039  0561  0DC0               	rlf	___ftmul@f2+1,f
  7040  0562  0DC1               	rlf	___ftmul@f2+2,f
  7041  0563  0B89               	decfsz	9,f
  7042  0564  2D60               	goto	u1975
  7043  0565  3001               	movlw	1
  7044  0566  02CA               	subwf	___ftmul@cntr,f
  7045  0567  1D03               	btfss	3,2
  7046  0568  2D51               	goto	l2178
  7047  0569  3009               	movlw	9
  7048  056A  00C2               	movwf	??___ftmul
  7049  056B  0842               	movf	??___ftmul,w
  7050  056C  00CA               	movwf	___ftmul@cntr
  7051  056D                     l2190:	
  7052  056D  1C3C               	btfss	___ftmul@f1,0
  7053  056E  2D75               	goto	l2194
  7054  056F  083F               	movf	___ftmul@f2,w
  7055  0570  07C7               	addwf	___ftmul@f3_as_product,f
  7056  0571  0840               	movf	___ftmul@f2+1,w
  7057  0572  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  7058  0573  0841               	movf	___ftmul@f2+2,w
  7059  0574  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  7060  0575                     l2194:	
  7061  0575  3001               	movlw	1
  7062  0576                     u2005:	
  7063  0576  36BE               	lsrf	___ftmul@f1+2,f
  7064  0577  0CBD               	rrf	___ftmul@f1+1,f
  7065  0578  0CBC               	rrf	___ftmul@f1,f
  7066  0579  0B89               	decfsz	9,f
  7067  057A  2D76               	goto	u2005
  7068  057B  3001               	movlw	1
  7069  057C                     u2015:	
  7070  057C  36C9               	lsrf	___ftmul@f3_as_product+2,f
  7071  057D  0CC8               	rrf	___ftmul@f3_as_product+1,f
  7072  057E  0CC7               	rrf	___ftmul@f3_as_product,f
  7073  057F  0B89               	decfsz	9,f
  7074  0580  2D7C               	goto	u2015
  7075  0581  3001               	movlw	1
  7076  0582  02CA               	subwf	___ftmul@cntr,f
  7077  0583  1D03               	btfss	3,2
  7078  0584  2D6D               	goto	l2190
  7079  0585  0847               	movf	___ftmul@f3_as_product,w
  7080  0586  00A0               	movwf	___ftpack@arg
  7081  0587  0848               	movf	___ftmul@f3_as_product+1,w
  7082  0588  00A1               	movwf	___ftpack@arg+1
  7083  0589  0849               	movf	___ftmul@f3_as_product+2,w
  7084  058A  00A2               	movwf	___ftpack@arg+2
  7085  058B  0846               	movf	___ftmul@exp,w
  7086  058C  00C2               	movwf	??___ftmul
  7087  058D  0842               	movf	??___ftmul,w
  7088  058E  00A3               	movwf	___ftpack@exp
  7089  058F  084B               	movf	___ftmul@sign,w
  7090  0590  00C3               	movwf	??___ftmul+1
  7091  0591  0843               	movf	??___ftmul+1,w
  7092  0592  00A4               	movwf	___ftpack@sign
  7093  0593  3187  278E         	fcall	___ftpack
  7094  0595  0020               	movlb	0	; select bank0
  7095  0596  0820               	movf	?___ftpack,w
  7096  0597  00BC               	movwf	?___ftmul
  7097  0598  0821               	movf	?___ftpack+1,w
  7098  0599  00BD               	movwf	?___ftmul+1
  7099  059A  0822               	movf	?___ftpack+2,w
  7100  059B  00BE               	movwf	?___ftmul+2
  7101  059C  0008               	return
  7102  059D                     __end_of___ftmul:	
  7103                           
  7104                           	psect	text27
  7105  064A                     __ptext27:	
  7106 ;; *************** function ___ftdiv *****************
  7107 ;; Defined at:
  7108 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  f2              3   12[BANK0 ] float 
  7111 ;;  f1              3   15[BANK0 ] float 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  f3              3   23[BANK0 ] float 
  7114 ;;  sign            1   27[BANK0 ] unsigned char 
  7115 ;;  exp             1   26[BANK0 ] unsigned char 
  7116 ;;  cntr            1   22[BANK0 ] unsigned char 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  3   12[BANK0 ] float 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0, pclath, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7126 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;Total ram usage:       16 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    3
  7133 ;; This function calls:
  7134 ;;		___ftpack
  7135 ;; This function is called by:
  7136 ;;		_disp_ma_result
  7137 ;;		_disp_kv
  7138 ;;		_pwmInit_ccp2
  7139 ;;		_pwmInit_ccp3
  7140 ;;		_disp_ADC
  7141 ;;		_disp_ma
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           
  7146                           ;psect for function ___ftdiv
  7147  064A                     ___ftdiv:	
  7148                           
  7149                           ;incstack = 0
  7150                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7151  064A  0020               	movlb	0	; select bank0
  7152  064B  082F               	movf	___ftdiv@f1,w
  7153  064C  00B2               	movwf	??___ftdiv
  7154  064D  0830               	movf	___ftdiv@f1+1,w
  7155  064E  00B3               	movwf	??___ftdiv+1
  7156  064F  0831               	movf	___ftdiv@f1+2,w
  7157  0650  00B4               	movwf	??___ftdiv+2
  7158  0651  1003               	clrc
  7159  0652  0D33               	rlf	??___ftdiv+1,w
  7160  0653  0D34               	rlf	??___ftdiv+2,w
  7161  0654  00B5               	movwf	??___ftdiv+3
  7162  0655  0835               	movf	??___ftdiv+3,w
  7163  0656  00BA               	movwf	___ftdiv@exp
  7164  0657  083A               	movf	___ftdiv@exp,w
  7165  0658  1D03               	btfss	3,2
  7166  0659  2E61               	goto	l2118
  7167  065A  3000               	movlw	0
  7168  065B  00AC               	movwf	?___ftdiv
  7169  065C  3000               	movlw	0
  7170  065D  00AD               	movwf	?___ftdiv+1
  7171  065E  3000               	movlw	0
  7172  065F  00AE               	movwf	?___ftdiv+2
  7173  0660  0008               	return
  7174  0661                     l2118:	
  7175  0661  082C               	movf	___ftdiv@f2,w
  7176  0662  00B2               	movwf	??___ftdiv
  7177  0663  082D               	movf	___ftdiv@f2+1,w
  7178  0664  00B3               	movwf	??___ftdiv+1
  7179  0665  082E               	movf	___ftdiv@f2+2,w
  7180  0666  00B4               	movwf	??___ftdiv+2
  7181  0667  1003               	clrc
  7182  0668  0D33               	rlf	??___ftdiv+1,w
  7183  0669  0D34               	rlf	??___ftdiv+2,w
  7184  066A  00B5               	movwf	??___ftdiv+3
  7185  066B  0835               	movf	??___ftdiv+3,w
  7186  066C  00BB               	movwf	___ftdiv@sign
  7187  066D  083B               	movf	___ftdiv@sign,w
  7188  066E  1D03               	btfss	3,2
  7189  066F  2E77               	goto	l2124
  7190  0670  3000               	movlw	0
  7191  0671  00AC               	movwf	?___ftdiv
  7192  0672  3000               	movlw	0
  7193  0673  00AD               	movwf	?___ftdiv+1
  7194  0674  3000               	movlw	0
  7195  0675  00AE               	movwf	?___ftdiv+2
  7196  0676  0008               	return
  7197  0677                     l2124:	
  7198  0677  3000               	movlw	0
  7199  0678  00B7               	movwf	___ftdiv@f3
  7200  0679  3000               	movlw	0
  7201  067A  00B8               	movwf	___ftdiv@f3+1
  7202  067B  3000               	movlw	0
  7203  067C  00B9               	movwf	___ftdiv@f3+2
  7204  067D  3089               	movlw	137
  7205  067E  073B               	addwf	___ftdiv@sign,w
  7206  067F  00B2               	movwf	??___ftdiv
  7207  0680  0832               	movf	??___ftdiv,w
  7208  0681  02BA               	subwf	___ftdiv@exp,f
  7209  0682  082F               	movf	___ftdiv@f1,w
  7210  0683  00B2               	movwf	??___ftdiv
  7211  0684  0830               	movf	___ftdiv@f1+1,w
  7212  0685  00B3               	movwf	??___ftdiv+1
  7213  0686  0831               	movf	___ftdiv@f1+2,w
  7214  0687  00B4               	movwf	??___ftdiv+2
  7215  0688  3010               	movlw	16
  7216  0689                     u1855:	
  7217  0689  36B4               	lsrf	??___ftdiv+2,f
  7218  068A  0CB3               	rrf	??___ftdiv+1,f
  7219  068B  0CB2               	rrf	??___ftdiv,f
  7220  068C  0B89               	decfsz	9,f
  7221  068D  2E89               	goto	u1855
  7222  068E  0832               	movf	??___ftdiv,w
  7223  068F  00B5               	movwf	??___ftdiv+3
  7224  0690  0835               	movf	??___ftdiv+3,w
  7225  0691  00BB               	movwf	___ftdiv@sign
  7226  0692  082C               	movf	___ftdiv@f2,w
  7227  0693  00B2               	movwf	??___ftdiv
  7228  0694  082D               	movf	___ftdiv@f2+1,w
  7229  0695  00B3               	movwf	??___ftdiv+1
  7230  0696  082E               	movf	___ftdiv@f2+2,w
  7231  0697  00B4               	movwf	??___ftdiv+2
  7232  0698  3010               	movlw	16
  7233  0699                     u1865:	
  7234  0699  36B4               	lsrf	??___ftdiv+2,f
  7235  069A  0CB3               	rrf	??___ftdiv+1,f
  7236  069B  0CB2               	rrf	??___ftdiv,f
  7237  069C  0B89               	decfsz	9,f
  7238  069D  2E99               	goto	u1865
  7239  069E  0832               	movf	??___ftdiv,w
  7240  069F  00B5               	movwf	??___ftdiv+3
  7241  06A0  0835               	movf	??___ftdiv+3,w
  7242  06A1  06BB               	xorwf	___ftdiv@sign,f
  7243  06A2  3080               	movlw	128
  7244  06A3  00B2               	movwf	??___ftdiv
  7245  06A4  0832               	movf	??___ftdiv,w
  7246  06A5  05BB               	andwf	___ftdiv@sign,f
  7247  06A6  17B0               	bsf	___ftdiv@f1+1,7
  7248  06A7  30FF               	movlw	255
  7249  06A8  05AF               	andwf	___ftdiv@f1,f
  7250  06A9  30FF               	movlw	255
  7251  06AA  05B0               	andwf	___ftdiv@f1+1,f
  7252  06AB  3000               	movlw	0
  7253  06AC  05B1               	andwf	___ftdiv@f1+2,f
  7254  06AD  17AD               	bsf	___ftdiv@f2+1,7
  7255  06AE  30FF               	movlw	255
  7256  06AF  05AC               	andwf	___ftdiv@f2,f
  7257  06B0  30FF               	movlw	255
  7258  06B1  05AD               	andwf	___ftdiv@f2+1,f
  7259  06B2  3000               	movlw	0
  7260  06B3  05AE               	andwf	___ftdiv@f2+2,f
  7261  06B4  3018               	movlw	24
  7262  06B5  00B2               	movwf	??___ftdiv
  7263  06B6  0832               	movf	??___ftdiv,w
  7264  06B7  00B6               	movwf	___ftdiv@cntr
  7265  06B8                     l2138:	
  7266  06B8  3001               	movlw	1
  7267  06B9                     u1875:	
  7268  06B9  35B7               	lslf	___ftdiv@f3,f
  7269  06BA  0DB8               	rlf	___ftdiv@f3+1,f
  7270  06BB  0DB9               	rlf	___ftdiv@f3+2,f
  7271  06BC  0B89               	decfsz	9,f
  7272  06BD  2EB9               	goto	u1875
  7273  06BE  082E               	movf	___ftdiv@f2+2,w
  7274  06BF  0231               	subwf	___ftdiv@f1+2,w
  7275  06C0  1D03               	skipz
  7276  06C1  2EC8               	goto	u1885
  7277  06C2  082D               	movf	___ftdiv@f2+1,w
  7278  06C3  0230               	subwf	___ftdiv@f1+1,w
  7279  06C4  1D03               	skipz
  7280  06C5  2EC8               	goto	u1885
  7281  06C6  082C               	movf	___ftdiv@f2,w
  7282  06C7  022F               	subwf	___ftdiv@f1,w
  7283  06C8                     u1885:	
  7284  06C8  1C03               	skipc
  7285  06C9  2ED1               	goto	l2146
  7286  06CA  082C               	movf	___ftdiv@f2,w
  7287  06CB  02AF               	subwf	___ftdiv@f1,f
  7288  06CC  082D               	movf	___ftdiv@f2+1,w
  7289  06CD  3BB0               	subwfb	___ftdiv@f1+1,f
  7290  06CE  082E               	movf	___ftdiv@f2+2,w
  7291  06CF  3BB1               	subwfb	___ftdiv@f1+2,f
  7292  06D0  1437               	bsf	___ftdiv@f3,0
  7293  06D1                     l2146:	
  7294  06D1  3001               	movlw	1
  7295  06D2                     u1895:	
  7296  06D2  35AF               	lslf	___ftdiv@f1,f
  7297  06D3  0DB0               	rlf	___ftdiv@f1+1,f
  7298  06D4  0DB1               	rlf	___ftdiv@f1+2,f
  7299  06D5  0B89               	decfsz	9,f
  7300  06D6  2ED2               	goto	u1895
  7301  06D7  3001               	movlw	1
  7302  06D8  02B6               	subwf	___ftdiv@cntr,f
  7303  06D9  1D03               	btfss	3,2
  7304  06DA  2EB8               	goto	l2138
  7305  06DB  0837               	movf	___ftdiv@f3,w
  7306  06DC  00A0               	movwf	___ftpack@arg
  7307  06DD  0838               	movf	___ftdiv@f3+1,w
  7308  06DE  00A1               	movwf	___ftpack@arg+1
  7309  06DF  0839               	movf	___ftdiv@f3+2,w
  7310  06E0  00A2               	movwf	___ftpack@arg+2
  7311  06E1  083A               	movf	___ftdiv@exp,w
  7312  06E2  00B2               	movwf	??___ftdiv
  7313  06E3  0832               	movf	??___ftdiv,w
  7314  06E4  00A3               	movwf	___ftpack@exp
  7315  06E5  083B               	movf	___ftdiv@sign,w
  7316  06E6  00B3               	movwf	??___ftdiv+1
  7317  06E7  0833               	movf	??___ftdiv+1,w
  7318  06E8  00A4               	movwf	___ftpack@sign
  7319  06E9  3187  278E         	fcall	___ftpack
  7320  06EB  0020               	movlb	0	; select bank0
  7321  06EC  0820               	movf	?___ftpack,w
  7322  06ED  00AC               	movwf	?___ftdiv
  7323  06EE  0821               	movf	?___ftpack+1,w
  7324  06EF  00AD               	movwf	?___ftdiv+1
  7325  06F0  0822               	movf	?___ftpack+2,w
  7326  06F1  00AE               	movwf	?___ftdiv+2
  7327  06F2  0008               	return
  7328  06F3                     __end_of___ftdiv:	
  7329                           
  7330                           	psect	text28
  7331  097A                     __ptext28:	
  7332 ;; *************** function ___awtoft *****************
  7333 ;; Defined at:
  7334 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  c               2    8[BANK0 ] int 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  sign            1   13[BANK0 ] unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  3    8[BANK0 ] float 
  7341 ;; Registers used:
  7342 ;;		wreg, status,2, status,0, pclath, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7348 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;Total ram usage:        6 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    3
  7355 ;; This function calls:
  7356 ;;		___ftpack
  7357 ;; This function is called by:
  7358 ;;		_pwmInit_ccp2
  7359 ;;		_pwmInit_ccp3
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function ___awtoft
  7365  097A                     ___awtoft:	
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7369  097A  0020               	movlb	0	; select bank0
  7370  097B  01AD               	clrf	___awtoft@sign
  7371  097C  1FA9               	btfss	___awtoft@c+1,7
  7372  097D  2985               	goto	l2108
  7373  097E  09A8               	comf	___awtoft@c,f
  7374  097F  09A9               	comf	___awtoft@c+1,f
  7375  0980  0AA8               	incf	___awtoft@c,f
  7376  0981  1903               	skipnz
  7377  0982  0AA9               	incf	___awtoft@c+1,f
  7378  0983  01AD               	clrf	___awtoft@sign
  7379  0984  0AAD               	incf	___awtoft@sign,f
  7380  0985                     l2108:	
  7381  0985  0828               	movf	___awtoft@c,w
  7382  0986  00A0               	movwf	___ftpack@arg
  7383  0987  0829               	movf	___awtoft@c+1,w
  7384  0988  00A1               	movwf	___ftpack@arg+1
  7385  0989  01A2               	clrf	___ftpack@arg+2
  7386  098A  308E               	movlw	142
  7387  098B  00AB               	movwf	??___awtoft
  7388  098C  082B               	movf	??___awtoft,w
  7389  098D  00A3               	movwf	___ftpack@exp
  7390  098E  082D               	movf	___awtoft@sign,w
  7391  098F  00AC               	movwf	??___awtoft+1
  7392  0990  082C               	movf	??___awtoft+1,w
  7393  0991  00A4               	movwf	___ftpack@sign
  7394  0992  3187  278E         	fcall	___ftpack
  7395  0994  0020               	movlb	0	; select bank0
  7396  0995  0820               	movf	?___ftpack,w
  7397  0996  00A8               	movwf	?___awtoft
  7398  0997  0821               	movf	?___ftpack+1,w
  7399  0998  00A9               	movwf	?___awtoft+1
  7400  0999  0822               	movf	?___ftpack+2,w
  7401  099A  00AA               	movwf	?___awtoft+2
  7402  099B  0008               	return
  7403  099C                     __end_of___awtoft:	
  7404                           
  7405                           	psect	text29
  7406  091B                     __ptext29:	
  7407 ;; *************** function ___ftsub *****************
  7408 ;; Defined at:
  7409 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  f2              3   21[BANK0 ] float 
  7412 ;;  f1              3   24[BANK0 ] float 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  3   21[BANK0 ] float 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, pclath, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7424 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;Total ram usage:        6 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    4
  7431 ;; This function calls:
  7432 ;;		___ftadd
  7433 ;; This function is called by:
  7434 ;;		_event_anodeCurrent
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           
  7439                           ;psect for function ___ftsub
  7440  091B                     ___ftsub:	
  7441                           
  7442                           ;incstack = 0
  7443                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7444  091B  0020               	movlb	0	; select bank0
  7445  091C  0837               	movf	___ftsub@f2+2,w
  7446  091D  0436               	iorwf	___ftsub@f2+1,w
  7447  091E  0435               	iorwf	___ftsub@f2,w
  7448  091F  1903               	skipnz
  7449  0920  2923               	goto	l2648
  7450  0921  3080               	movlw	128
  7451  0922  06B7               	xorwf	___ftsub@f2+2,f
  7452  0923                     l2648:	
  7453  0923  0838               	movf	___ftsub@f1,w
  7454  0924  00A8               	movwf	___ftadd@f1
  7455  0925  0839               	movf	___ftsub@f1+1,w
  7456  0926  00A9               	movwf	___ftadd@f1+1
  7457  0927  083A               	movf	___ftsub@f1+2,w
  7458  0928  00AA               	movwf	___ftadd@f1+2
  7459  0929  0835               	movf	___ftsub@f2,w
  7460  092A  00AB               	movwf	___ftadd@f2
  7461  092B  0836               	movf	___ftsub@f2+1,w
  7462  092C  00AC               	movwf	___ftadd@f2+1
  7463  092D  0837               	movf	___ftsub@f2+2,w
  7464  092E  00AD               	movwf	___ftadd@f2+2
  7465  092F  3181  216D         	fcall	___ftadd
  7466  0931  0020               	movlb	0	; select bank0
  7467  0932  0828               	movf	?___ftadd,w
  7468  0933  00B5               	movwf	?___ftsub
  7469  0934  0829               	movf	?___ftadd+1,w
  7470  0935  00B6               	movwf	?___ftsub+1
  7471  0936  082A               	movf	?___ftadd+2,w
  7472  0937  00B7               	movwf	?___ftsub+2
  7473  0938  0008               	return
  7474  0939                     __end_of___ftsub:	
  7475                           
  7476                           	psect	text30
  7477  016D                     __ptext30:	
  7478 ;; *************** function ___ftadd *****************
  7479 ;; Defined at:
  7480 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  f1              3    8[BANK0 ] float 
  7483 ;;  f2              3   11[BANK0 ] float 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  exp1            1   20[BANK0 ] unsigned char 
  7486 ;;  exp2            1   19[BANK0 ] unsigned char 
  7487 ;;  sign            1   18[BANK0 ] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  3    8[BANK0 ] float 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, pclath, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;Total ram usage:       13 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    3
  7504 ;; This function calls:
  7505 ;;		___ftpack
  7506 ;; This function is called by:
  7507 ;;		_event_anodeCurrent
  7508 ;;		___ftsub
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           
  7513                           ;psect for function ___ftadd
  7514  016D                     ___ftadd:	
  7515                           
  7516                           ;incstack = 0
  7517                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7518  016D  0020               	movlb	0	; select bank0
  7519  016E  0828               	movf	___ftadd@f1,w
  7520  016F  00AE               	movwf	??___ftadd
  7521  0170  0829               	movf	___ftadd@f1+1,w
  7522  0171  00AF               	movwf	??___ftadd+1
  7523  0172  082A               	movf	___ftadd@f1+2,w
  7524  0173  00B0               	movwf	??___ftadd+2
  7525  0174  1003               	clrc
  7526  0175  0D2F               	rlf	??___ftadd+1,w
  7527  0176  0D30               	rlf	??___ftadd+2,w
  7528  0177  00B1               	movwf	??___ftadd+3
  7529  0178  0831               	movf	??___ftadd+3,w
  7530  0179  00B4               	movwf	___ftadd@exp1
  7531  017A  082B               	movf	___ftadd@f2,w
  7532  017B  00AE               	movwf	??___ftadd
  7533  017C  082C               	movf	___ftadd@f2+1,w
  7534  017D  00AF               	movwf	??___ftadd+1
  7535  017E  082D               	movf	___ftadd@f2+2,w
  7536  017F  00B0               	movwf	??___ftadd+2
  7537  0180  1003               	clrc
  7538  0181  0D2F               	rlf	??___ftadd+1,w
  7539  0182  0D30               	rlf	??___ftadd+2,w
  7540  0183  00B1               	movwf	??___ftadd+3
  7541  0184  0831               	movf	??___ftadd+3,w
  7542  0185  00B3               	movwf	___ftadd@exp2
  7543  0186  0834               	movf	___ftadd@exp1,w
  7544  0187  1903               	btfsc	3,2
  7545  0188  2995               	goto	l2450
  7546  0189  0833               	movf	___ftadd@exp2,w
  7547  018A  0234               	subwf	___ftadd@exp1,w
  7548  018B  1803               	skipnc
  7549  018C  299C               	goto	l2454
  7550  018D  0334               	decf	___ftadd@exp1,w
  7551  018E  3AFF               	xorlw	255
  7552  018F  0733               	addwf	___ftadd@exp2,w
  7553  0190  00AE               	movwf	??___ftadd
  7554  0191  3019               	movlw	25
  7555  0192  022E               	subwf	??___ftadd,w
  7556  0193  1C03               	skipc
  7557  0194  299C               	goto	l2454
  7558  0195                     l2450:	
  7559  0195  082B               	movf	___ftadd@f2,w
  7560  0196  00A8               	movwf	?___ftadd
  7561  0197  082C               	movf	___ftadd@f2+1,w
  7562  0198  00A9               	movwf	?___ftadd+1
  7563  0199  082D               	movf	___ftadd@f2+2,w
  7564  019A  00AA               	movwf	?___ftadd+2
  7565  019B  0008               	return
  7566  019C                     l2454:	
  7567  019C  0833               	movf	___ftadd@exp2,w
  7568  019D  1903               	btfsc	3,2
  7569  019E  0008               	return
  7570  019F  0834               	movf	___ftadd@exp1,w
  7571  01A0  0233               	subwf	___ftadd@exp2,w
  7572  01A1  1803               	skipnc
  7573  01A2  29AB               	goto	l2460
  7574  01A3  0333               	decf	___ftadd@exp2,w
  7575  01A4  3AFF               	xorlw	255
  7576  01A5  0734               	addwf	___ftadd@exp1,w
  7577  01A6  00AE               	movwf	??___ftadd
  7578  01A7  3019               	movlw	25
  7579  01A8  022E               	subwf	??___ftadd,w
  7580  01A9  1803               	btfsc	3,0
  7581  01AA  0008               	return
  7582  01AB                     l2460:	
  7583  01AB  3006               	movlw	6
  7584  01AC  00AE               	movwf	??___ftadd
  7585  01AD  082E               	movf	??___ftadd,w
  7586  01AE  00B2               	movwf	___ftadd@sign
  7587  01AF  1BAA               	btfsc	___ftadd@f1+2,7
  7588  01B0  17B2               	bsf	___ftadd@sign,7
  7589  01B1  1BAD               	btfsc	___ftadd@f2+2,7
  7590  01B2  1732               	bsf	___ftadd@sign,6
  7591  01B3  17A9               	bsf	___ftadd@f1+1,7
  7592  01B4  30FF               	movlw	255
  7593  01B5  05A8               	andwf	___ftadd@f1,f
  7594  01B6  30FF               	movlw	255
  7595  01B7  05A9               	andwf	___ftadd@f1+1,f
  7596  01B8  3000               	movlw	0
  7597  01B9  05AA               	andwf	___ftadd@f1+2,f
  7598  01BA  17AC               	bsf	___ftadd@f2+1,7
  7599  01BB  30FF               	movlw	255
  7600  01BC  05AB               	andwf	___ftadd@f2,f
  7601  01BD  30FF               	movlw	255
  7602  01BE  05AC               	andwf	___ftadd@f2+1,f
  7603  01BF  3000               	movlw	0
  7604  01C0  05AD               	andwf	___ftadd@f2+2,f
  7605  01C1  0833               	movf	___ftadd@exp2,w
  7606  01C2  0234               	subwf	___ftadd@exp1,w
  7607  01C3  1803               	skipnc
  7608  01C4  29E7               	goto	l2482
  7609  01C5                     l2472:	
  7610  01C5  3001               	movlw	1
  7611  01C6                     u2415:	
  7612  01C6  35AB               	lslf	___ftadd@f2,f
  7613  01C7  0DAC               	rlf	___ftadd@f2+1,f
  7614  01C8  0DAD               	rlf	___ftadd@f2+2,f
  7615  01C9  0B89               	decfsz	9,f
  7616  01CA  29C6               	goto	u2415
  7617  01CB  3001               	movlw	1
  7618  01CC  02B3               	subwf	___ftadd@exp2,f
  7619  01CD  0833               	movf	___ftadd@exp2,w
  7620  01CE  0634               	xorwf	___ftadd@exp1,w
  7621  01CF  1903               	skipnz
  7622  01D0  29E2               	goto	l2480
  7623  01D1  3001               	movlw	1
  7624  01D2  02B2               	subwf	___ftadd@sign,f
  7625  01D3  0832               	movf	___ftadd@sign,w
  7626  01D4  3907               	andlw	7
  7627  01D5  1903               	btfsc	3,2
  7628  01D6  29E2               	goto	l2480
  7629  01D7  29C5               	goto	l2472
  7630  01D8                     l2478:	
  7631  01D8  3001               	movlw	1
  7632  01D9                     u2445:	
  7633  01D9  36AA               	lsrf	___ftadd@f1+2,f
  7634  01DA  0CA9               	rrf	___ftadd@f1+1,f
  7635  01DB  0CA8               	rrf	___ftadd@f1,f
  7636  01DC  0B89               	decfsz	9,f
  7637  01DD  29D9               	goto	u2445
  7638  01DE  3001               	movlw	1
  7639  01DF  00AE               	movwf	??___ftadd
  7640  01E0  082E               	movf	??___ftadd,w
  7641  01E1  07B4               	addwf	___ftadd@exp1,f
  7642  01E2                     l2480:	
  7643  01E2  0834               	movf	___ftadd@exp1,w
  7644  01E3  0633               	xorwf	___ftadd@exp2,w
  7645  01E4  1903               	btfsc	3,2
  7646  01E5  2A0C               	goto	l778
  7647  01E6  29D8               	goto	l2478
  7648  01E7                     l2482:	
  7649  01E7  0834               	movf	___ftadd@exp1,w
  7650  01E8  0233               	subwf	___ftadd@exp2,w
  7651  01E9  1803               	skipnc
  7652  01EA  2A0C               	goto	l778
  7653  01EB                     l2484:	
  7654  01EB  3001               	movlw	1
  7655  01EC                     u2475:	
  7656  01EC  35A8               	lslf	___ftadd@f1,f
  7657  01ED  0DA9               	rlf	___ftadd@f1+1,f
  7658  01EE  0DAA               	rlf	___ftadd@f1+2,f
  7659  01EF  0B89               	decfsz	9,f
  7660  01F0  29EC               	goto	u2475
  7661  01F1  3001               	movlw	1
  7662  01F2  02B4               	subwf	___ftadd@exp1,f
  7663  01F3  0833               	movf	___ftadd@exp2,w
  7664  01F4  0634               	xorwf	___ftadd@exp1,w
  7665  01F5  1903               	skipnz
  7666  01F6  2A08               	goto	l2492
  7667  01F7  3001               	movlw	1
  7668  01F8  02B2               	subwf	___ftadd@sign,f
  7669  01F9  0832               	movf	___ftadd@sign,w
  7670  01FA  3907               	andlw	7
  7671  01FB  1903               	btfsc	3,2
  7672  01FC  2A08               	goto	l2492
  7673  01FD  29EB               	goto	l2484
  7674  01FE                     l2490:	
  7675  01FE  3001               	movlw	1
  7676  01FF                     u2505:	
  7677  01FF  36AD               	lsrf	___ftadd@f2+2,f
  7678  0200  0CAC               	rrf	___ftadd@f2+1,f
  7679  0201  0CAB               	rrf	___ftadd@f2,f
  7680  0202  0B89               	decfsz	9,f
  7681  0203  29FF               	goto	u2505
  7682  0204  3001               	movlw	1
  7683  0205  00AE               	movwf	??___ftadd
  7684  0206  082E               	movf	??___ftadd,w
  7685  0207  07B3               	addwf	___ftadd@exp2,f
  7686  0208                     l2492:	
  7687  0208  0834               	movf	___ftadd@exp1,w
  7688  0209  0633               	xorwf	___ftadd@exp2,w
  7689  020A  1D03               	skipz
  7690  020B  29FE               	goto	l2490
  7691  020C                     l778:	
  7692  020C  1FB2               	btfss	___ftadd@sign,7
  7693  020D  2A1E               	goto	l2496
  7694  020E  30FF               	movlw	255
  7695  020F  06A8               	xorwf	___ftadd@f1,f
  7696  0210  30FF               	movlw	255
  7697  0211  06A9               	xorwf	___ftadd@f1+1,f
  7698  0212  30FF               	movlw	255
  7699  0213  06AA               	xorwf	___ftadd@f1+2,f
  7700  0214  3001               	movlw	1
  7701  0215  07A8               	addwf	___ftadd@f1,f
  7702  0216  3000               	movlw	0
  7703  0217  1803               	skipnc
  7704  0218  3001               	movlw	1
  7705  0219  07A9               	addwf	___ftadd@f1+1,f
  7706  021A  3000               	movlw	0
  7707  021B  1803               	skipnc
  7708  021C  3001               	movlw	1
  7709  021D  07AA               	addwf	___ftadd@f1+2,f
  7710  021E                     l2496:	
  7711  021E  1F32               	btfss	___ftadd@sign,6
  7712  021F  2A30               	goto	l2500
  7713  0220  30FF               	movlw	255
  7714  0221  06AB               	xorwf	___ftadd@f2,f
  7715  0222  30FF               	movlw	255
  7716  0223  06AC               	xorwf	___ftadd@f2+1,f
  7717  0224  30FF               	movlw	255
  7718  0225  06AD               	xorwf	___ftadd@f2+2,f
  7719  0226  3001               	movlw	1
  7720  0227  07AB               	addwf	___ftadd@f2,f
  7721  0228  3000               	movlw	0
  7722  0229  1803               	skipnc
  7723  022A  3001               	movlw	1
  7724  022B  07AC               	addwf	___ftadd@f2+1,f
  7725  022C  3000               	movlw	0
  7726  022D  1803               	skipnc
  7727  022E  3001               	movlw	1
  7728  022F  07AD               	addwf	___ftadd@f2+2,f
  7729  0230                     l2500:	
  7730  0230  01B2               	clrf	___ftadd@sign
  7731  0231  0828               	movf	___ftadd@f1,w
  7732  0232  07AB               	addwf	___ftadd@f2,f
  7733  0233  0829               	movf	___ftadd@f1+1,w
  7734  0234  3DAC               	addwfc	___ftadd@f2+1,f
  7735  0235  082A               	movf	___ftadd@f1+2,w
  7736  0236  3DAD               	addwfc	___ftadd@f2+2,f
  7737  0237  1FAD               	btfss	___ftadd@f2+2,7
  7738  0238  2A4B               	goto	l2510
  7739  0239  30FF               	movlw	255
  7740  023A  06AB               	xorwf	___ftadd@f2,f
  7741  023B  30FF               	movlw	255
  7742  023C  06AC               	xorwf	___ftadd@f2+1,f
  7743  023D  30FF               	movlw	255
  7744  023E  06AD               	xorwf	___ftadd@f2+2,f
  7745  023F  3001               	movlw	1
  7746  0240  07AB               	addwf	___ftadd@f2,f
  7747  0241  3000               	movlw	0
  7748  0242  1803               	skipnc
  7749  0243  3001               	movlw	1
  7750  0244  07AC               	addwf	___ftadd@f2+1,f
  7751  0245  3000               	movlw	0
  7752  0246  1803               	skipnc
  7753  0247  3001               	movlw	1
  7754  0248  07AD               	addwf	___ftadd@f2+2,f
  7755  0249  01B2               	clrf	___ftadd@sign
  7756  024A  0AB2               	incf	___ftadd@sign,f
  7757  024B                     l2510:	
  7758  024B  082B               	movf	___ftadd@f2,w
  7759  024C  00A0               	movwf	___ftpack@arg
  7760  024D  082C               	movf	___ftadd@f2+1,w
  7761  024E  00A1               	movwf	___ftpack@arg+1
  7762  024F  082D               	movf	___ftadd@f2+2,w
  7763  0250  00A2               	movwf	___ftpack@arg+2
  7764  0251  0834               	movf	___ftadd@exp1,w
  7765  0252  00AE               	movwf	??___ftadd
  7766  0253  082E               	movf	??___ftadd,w
  7767  0254  00A3               	movwf	___ftpack@exp
  7768  0255  0832               	movf	___ftadd@sign,w
  7769  0256  00AF               	movwf	??___ftadd+1
  7770  0257  082F               	movf	??___ftadd+1,w
  7771  0258  00A4               	movwf	___ftpack@sign
  7772  0259  3187  278E         	fcall	___ftpack
  7773  025B  0020               	movlb	0	; select bank0
  7774  025C  0820               	movf	?___ftpack,w
  7775  025D  00A8               	movwf	?___ftadd
  7776  025E  0821               	movf	?___ftpack+1,w
  7777  025F  00A9               	movwf	?___ftadd+1
  7778  0260  0822               	movf	?___ftpack+2,w
  7779  0261  00AA               	movwf	?___ftadd+2
  7780  0262  0008               	return
  7781  0263                     __end_of___ftadd:	
  7782                           
  7783                           	psect	text31
  7784  078E                     __ptext31:	
  7785 ;; *************** function ___ftpack *****************
  7786 ;; Defined at:
  7787 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  arg             3    0[BANK0 ] unsigned um
  7790 ;;  exp             1    3[BANK0 ] unsigned char 
  7791 ;;  sign            1    4[BANK0 ] unsigned char 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  3    0[BANK0 ] float 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7803 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;Total ram usage:        8 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    2
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		___awtoft
  7814 ;;		___ftadd
  7815 ;;		___ftdiv
  7816 ;;		___ftmul
  7817 ;;		___lwtoft
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           
  7822                           ;psect for function ___ftpack
  7823  078E                     ___ftpack:	
  7824                           
  7825                           ;incstack = 0
  7826                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7827  078E  0020               	movlb	0	; select bank0
  7828  078F  0823               	movf	___ftpack@exp,w
  7829  0790  1903               	btfsc	3,2
  7830  0791  2F97               	goto	l2010
  7831  0792  0822               	movf	___ftpack@arg+2,w
  7832  0793  0421               	iorwf	___ftpack@arg+1,w
  7833  0794  0420               	iorwf	___ftpack@arg,w
  7834  0795  1D03               	skipz
  7835  0796  2FA8               	goto	l2016
  7836  0797                     l2010:	
  7837  0797  3000               	movlw	0
  7838  0798  00A0               	movwf	?___ftpack
  7839  0799  3000               	movlw	0
  7840  079A  00A1               	movwf	?___ftpack+1
  7841  079B  3000               	movlw	0
  7842  079C  00A2               	movwf	?___ftpack+2
  7843  079D  0008               	return
  7844  079E                     l2014:	
  7845  079E  3001               	movlw	1
  7846  079F  00A5               	movwf	??___ftpack
  7847  07A0  0825               	movf	??___ftpack,w
  7848  07A1  07A3               	addwf	___ftpack@exp,f
  7849  07A2  3001               	movlw	1
  7850  07A3                     u1605:	
  7851  07A3  36A2               	lsrf	___ftpack@arg+2,f
  7852  07A4  0CA1               	rrf	___ftpack@arg+1,f
  7853  07A5  0CA0               	rrf	___ftpack@arg,f
  7854  07A6  0B89               	decfsz	9,f
  7855  07A7  2FA3               	goto	u1605
  7856  07A8                     l2016:	
  7857  07A8  30FE               	movlw	254
  7858  07A9  0522               	andwf	___ftpack@arg+2,w
  7859  07AA  1903               	btfsc	3,2
  7860  07AB  2FC1               	goto	l747
  7861  07AC  2F9E               	goto	l2014
  7862  07AD                     l2018:	
  7863  07AD  3001               	movlw	1
  7864  07AE  00A5               	movwf	??___ftpack
  7865  07AF  0825               	movf	??___ftpack,w
  7866  07B0  07A3               	addwf	___ftpack@exp,f
  7867  07B1  3001               	movlw	1
  7868  07B2  07A0               	addwf	___ftpack@arg,f
  7869  07B3  3000               	movlw	0
  7870  07B4  1803               	skipnc
  7871  07B5  3001               	movlw	1
  7872  07B6  07A1               	addwf	___ftpack@arg+1,f
  7873  07B7  3000               	movlw	0
  7874  07B8  1803               	skipnc
  7875  07B9  3001               	movlw	1
  7876  07BA  07A2               	addwf	___ftpack@arg+2,f
  7877  07BB  3001               	movlw	1
  7878  07BC                     u1625:	
  7879  07BC  36A2               	lsrf	___ftpack@arg+2,f
  7880  07BD  0CA1               	rrf	___ftpack@arg+1,f
  7881  07BE  0CA0               	rrf	___ftpack@arg,f
  7882  07BF  0B89               	decfsz	9,f
  7883  07C0  2FBC               	goto	u1625
  7884  07C1                     l747:	
  7885  07C1  30FF               	movlw	255
  7886  07C2  0522               	andwf	___ftpack@arg+2,w
  7887  07C3  1903               	btfsc	3,2
  7888  07C4  2FCE               	goto	l2026
  7889  07C5  2FAD               	goto	l2018
  7890  07C6                     l2024:	
  7891  07C6  3001               	movlw	1
  7892  07C7  02A3               	subwf	___ftpack@exp,f
  7893  07C8  3001               	movlw	1
  7894  07C9                     u1645:	
  7895  07C9  35A0               	lslf	___ftpack@arg,f
  7896  07CA  0DA1               	rlf	___ftpack@arg+1,f
  7897  07CB  0DA2               	rlf	___ftpack@arg+2,f
  7898  07CC  0B89               	decfsz	9,f
  7899  07CD  2FC9               	goto	u1645
  7900  07CE                     l2026:	
  7901  07CE  1BA1               	btfsc	___ftpack@arg+1,7
  7902  07CF  2FD4               	goto	l754
  7903  07D0  3002               	movlw	2
  7904  07D1  0223               	subwf	___ftpack@exp,w
  7905  07D2  1803               	skipnc
  7906  07D3  2FC6               	goto	l2024
  7907  07D4                     l754:	
  7908  07D4  1823               	btfsc	___ftpack@exp,0
  7909  07D5  2FDC               	goto	l755
  7910  07D6  30FF               	movlw	255
  7911  07D7  05A0               	andwf	___ftpack@arg,f
  7912  07D8  307F               	movlw	127
  7913  07D9  05A1               	andwf	___ftpack@arg+1,f
  7914  07DA  30FF               	movlw	255
  7915  07DB  05A2               	andwf	___ftpack@arg+2,f
  7916  07DC                     l755:	
  7917  07DC  1003               	clrc
  7918  07DD  0CA3               	rrf	___ftpack@exp,f
  7919  07DE  0823               	movf	___ftpack@exp,w
  7920  07DF  00A5               	movwf	??___ftpack
  7921  07E0  01A6               	clrf	??___ftpack+1
  7922  07E1  01A7               	clrf	??___ftpack+2
  7923  07E2  3010               	movlw	16
  7924  07E3                     u1685:	
  7925  07E3  35A5               	lslf	??___ftpack,f
  7926  07E4  0DA6               	rlf	??___ftpack+1,f
  7927  07E5  0DA7               	rlf	??___ftpack+2,f
  7928  07E6  0B89               	decfsz	9,f
  7929  07E7  2FE3               	goto	u1685
  7930  07E8  0825               	movf	??___ftpack,w
  7931  07E9  04A0               	iorwf	___ftpack@arg,f
  7932  07EA  0826               	movf	??___ftpack+1,w
  7933  07EB  04A1               	iorwf	___ftpack@arg+1,f
  7934  07EC  0827               	movf	??___ftpack+2,w
  7935  07ED  04A2               	iorwf	___ftpack@arg+2,f
  7936  07EE  0824               	movf	___ftpack@sign,w
  7937  07EF  1903               	btfsc	3,2
  7938  07F0  0008               	return
  7939  07F1  17A2               	bsf	___ftpack@arg+2,7
  7940  07F2  0008               	return
  7941  07F3                     __end_of___ftpack:	
  7942                           
  7943                           	psect	text32
  7944  0B09                     __ptext32:	
  7945 ;; *************** function ___ftge *****************
  7946 ;; Defined at:
  7947 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  ff1             3    0[BANK0 ] float 
  7950 ;;  ff2             3    3[BANK0 ] float 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;		None               void
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7962 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;Total ram usage:        9 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    2
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_event_anodeCurrent
  7973 ;;		_disp_kv
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function ___ftge
  7979  0B09                     ___ftge:	
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7983  0B09  0020               	movlb	0	; select bank0
  7984  0B0A  1FA2               	btfss	___ftge@ff1+2,7
  7985  0B0B  2B20               	goto	l2518
  7986  0B0C  0920               	comf	___ftge@ff1,w
  7987  0B0D  00A6               	movwf	??___ftge
  7988  0B0E  0921               	comf	___ftge@ff1+1,w
  7989  0B0F  00A7               	movwf	??___ftge+1
  7990  0B10  0922               	comf	___ftge@ff1+2,w
  7991  0B11  00A8               	movwf	??___ftge+2
  7992  0B12  0AA6               	incf	??___ftge,f
  7993  0B13  1903               	skipnz
  7994  0B14  0AA7               	incf	??___ftge+1,f
  7995  0B15  1903               	skipnz
  7996  0B16  0AA8               	incf	??___ftge+2,f
  7997  0B17  3000               	movlw	0
  7998  0B18  0726               	addwf	??___ftge,w
  7999  0B19  00A0               	movwf	___ftge@ff1
  8000  0B1A  3000               	movlw	0
  8001  0B1B  3D27               	addwfc	??___ftge+1,w
  8002  0B1C  00A1               	movwf	___ftge@ff1+1
  8003  0B1D  3080               	movlw	128
  8004  0B1E  3D28               	addwfc	??___ftge+2,w
  8005  0B1F  00A2               	movwf	___ftge@ff1+2
  8006  0B20                     l2518:	
  8007  0B20  1FA5               	btfss	___ftge@ff2+2,7
  8008  0B21  2B36               	goto	l2522
  8009  0B22  0923               	comf	___ftge@ff2,w
  8010  0B23  00A6               	movwf	??___ftge
  8011  0B24  0924               	comf	___ftge@ff2+1,w
  8012  0B25  00A7               	movwf	??___ftge+1
  8013  0B26  0925               	comf	___ftge@ff2+2,w
  8014  0B27  00A8               	movwf	??___ftge+2
  8015  0B28  0AA6               	incf	??___ftge,f
  8016  0B29  1903               	skipnz
  8017  0B2A  0AA7               	incf	??___ftge+1,f
  8018  0B2B  1903               	skipnz
  8019  0B2C  0AA8               	incf	??___ftge+2,f
  8020  0B2D  3000               	movlw	0
  8021  0B2E  0726               	addwf	??___ftge,w
  8022  0B2F  00A3               	movwf	___ftge@ff2
  8023  0B30  3000               	movlw	0
  8024  0B31  3D27               	addwfc	??___ftge+1,w
  8025  0B32  00A4               	movwf	___ftge@ff2+1
  8026  0B33  3080               	movlw	128
  8027  0B34  3D28               	addwfc	??___ftge+2,w
  8028  0B35  00A5               	movwf	___ftge@ff2+2
  8029  0B36                     l2522:	
  8030  0B36  3080               	movlw	128
  8031  0B37  06A2               	xorwf	___ftge@ff1+2,f
  8032  0B38  3080               	movlw	128
  8033  0B39  06A5               	xorwf	___ftge@ff2+2,f
  8034  0B3A  0825               	movf	___ftge@ff2+2,w
  8035  0B3B  0222               	subwf	___ftge@ff1+2,w
  8036  0B3C  1D03               	skipz
  8037  0B3D  0008               	return
  8038  0B3E  0824               	movf	___ftge@ff2+1,w
  8039  0B3F  0221               	subwf	___ftge@ff1+1,w
  8040  0B40  1D03               	skipz
  8041  0B41  0008               	return
  8042  0B42  0823               	movf	___ftge@ff2,w
  8043  0B43  0220               	subwf	___ftge@ff1,w
  8044  0B44  0008               	return
  8045  0B45                     __end_of___ftge:	
  8046                           
  8047                           	psect	text33
  8048  0413                     __ptext33:	
  8049 ;; *************** function _apInit *****************
  8050 ;; Defined at:
  8051 ;;		line 181 in file "ap.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  D_temp          2   34[BANK0 ] unsigned int 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;Total ram usage:        3 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    7
  8072 ;; This function calls:
  8073 ;;		_I2CInit
  8074 ;;		_I2CInit_2
  8075 ;;		_I2C_AS1115_Write
  8076 ;;		_I2C_DAC_Write
  8077 ;;		_adcInit
  8078 ;;		_buttons_init
  8079 ;;		_buttons_setFuncs
  8080 ;;		_event_btn_Stop
  8081 ;;		_initPort
  8082 ;;		_initTimer
  8083 ;;		_timerEventStart
  8084 ;;		_timerInit
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           
  8091                           ;psect for function _apInit
  8092  0413                     _apInit:	
  8093                           
  8094                           ;ap.c: 183: initPort();
  8095                           
  8096                           ;incstack = 0
  8097                           ; Regs used in _apInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8098  0413  318C  24C3  3184   	fcall	_initPort
  8099                           
  8100                           ;ap.c: 184: adcInit();
  8101  0416  3188  2020  3184   	fcall	_adcInit
  8102                           
  8103                           ;ap.c: 185: initTimer();
  8104  0419  3188  202B  3184   	fcall	_initTimer
  8105                           
  8106                           ;ap.c: 186: I2CInit(500);
  8107  041C  30F4               	movlw	244
  8108  041D  0020               	movlb	0	; select bank0
  8109  041E  00B5               	movwf	I2CInit@freq
  8110  041F  3001               	movlw	1
  8111  0420  00B6               	movwf	I2CInit@freq+1
  8112  0421  318B  2345  3184   	fcall	_I2CInit
  8113                           
  8114                           ;ap.c: 187: I2CInit_2(400);
  8115  0424  3090               	movlw	144
  8116  0425  0020               	movlb	0	; select bank0
  8117  0426  00B5               	movwf	I2CInit_2@freq
  8118  0427  3001               	movlw	1
  8119  0428  00B6               	movwf	I2CInit_2@freq+1
  8120  0429  318B  2382  3184   	fcall	_I2CInit_2
  8121                           
  8122                           ;ap.c: 189: (GIE = 1);
  8123  042C  178B               	bsf	11,7	;volatile
  8124                           
  8125                           ;ap.c: 191: WDTCONbits.SWDTEN = 0b01;
  8126  042D  0021               	movlb	1	; select bank1
  8127  042E  1417               	bsf	23,0	;volatile
  8128                           
  8129                           ;ap.c: 193: timerInit(&Timer[e_button],10,event_timer_Button);
  8130  042F  300A               	movlw	10
  8131  0430  0020               	movlb	0	; select bank0
  8132  0431  00A0               	movwf	timerInit@timeSet
  8133  0432  3000               	movlw	0
  8134  0433  00A1               	movwf	timerInit@timeSet+1
  8135  0434  3083               	movlw	low _event_timer_Button
  8136  0435  00A2               	movwf	timerInit@func
  8137  0436  3008               	movlw	high _event_timer_Button
  8138  0437  00A3               	movwf	timerInit@func+1
  8139  0438  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  8140  0439  3189  2158  3184   	fcall	_timerInit
  8141                           
  8142                           ;ap.c: 194: timerInit(&Timer[e_expose],1000,event_expose);
  8143  043C  30E8               	movlw	232
  8144  043D  0020               	movlb	0	; select bank0
  8145  043E  00A0               	movwf	timerInit@timeSet
  8146  043F  3003               	movlw	3
  8147  0440  00A1               	movwf	timerInit@timeSet+1
  8148  0441  3055               	movlw	low _event_expose
  8149  0442  00A2               	movwf	timerInit@func
  8150  0443  3008               	movlw	high _event_expose
  8151  0444  00A3               	movwf	timerInit@func+1
  8152  0445  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  8153  0446  3189  2158  3184   	fcall	_timerInit
  8154                           
  8155                           ;ap.c: 195: timerInit(&Timer[e_display],200,event_display);
  8156  0449  30C8               	movlw	200
  8157  044A  0020               	movlb	0	; select bank0
  8158  044B  00A0               	movwf	timerInit@timeSet
  8159  044C  3000               	movlw	0
  8160  044D  00A1               	movwf	timerInit@timeSet+1
  8161  044E  303B               	movlw	low _event_display
  8162  044F  00A2               	movwf	timerInit@func
  8163  0450  3003               	movlw	high _event_display
  8164  0451  00A3               	movwf	timerInit@func+1
  8165  0452  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  8166  0453  3189  2158  3184   	fcall	_timerInit
  8167                           
  8168                           ;ap.c: 196: timerInit(&Timer[e_rst],500,event_rst);
  8169  0456  30F4               	movlw	244
  8170  0457  0020               	movlb	0	; select bank0
  8171  0458  00A0               	movwf	timerInit@timeSet
  8172  0459  3001               	movlw	1
  8173  045A  00A1               	movwf	timerInit@timeSet+1
  8174  045B  3063               	movlw	low _event_rst
  8175  045C  00A2               	movwf	timerInit@func
  8176  045D  3008               	movlw	high _event_rst
  8177  045E  00A3               	movwf	timerInit@func+1
  8178  045F  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  8179  0460  3189  2158  3184   	fcall	_timerInit
  8180                           
  8181                           ;ap.c: 197: timerInit(&Timer[e_anodeCurrent],10,event_anodeCurrent);
  8182  0463  300A               	movlw	10
  8183  0464  0020               	movlb	0	; select bank0
  8184  0465  00A0               	movwf	timerInit@timeSet
  8185  0466  3000               	movlw	0
  8186  0467  00A1               	movwf	timerInit@timeSet+1
  8187  0468  3063               	movlw	low _event_anodeCurrent
  8188  0469  00A2               	movwf	timerInit@func
  8189  046A  3002               	movlw	high _event_anodeCurrent
  8190  046B  00A3               	movwf	timerInit@func+1
  8191  046C  30D5               	movlw	(low ((_Timer| 0+32)))& (0+255)
  8192  046D  3189  2158  3184   	fcall	_timerInit
  8193                           
  8194                           ;ap.c: 199: timerEventStart(&Timer[e_button]);
  8195  0470  30BD               	movlw	(low ((_Timer| 0+8)))& (0+255)
  8196  0471  3197  27EF  3184   	fcall	_timerEventStart
  8197                           
  8198                           ;ap.c: 200: timerEventStart(&Timer[e_expose]);
  8199  0474  30C5               	movlw	(low ((_Timer| 0+16)))& (0+255)
  8200  0475  3197  27EF  3184   	fcall	_timerEventStart
  8201                           
  8202                           ;ap.c: 201: timerEventStart(&Timer[e_display]);
  8203  0478  30DD               	movlw	(low ((_Timer| 0+40)))& (0+255)
  8204  0479  3197  27EF  3184   	fcall	_timerEventStart
  8205                           
  8206                           ;ap.c: 202: timerEventStart(&Timer[e_rst]);
  8207  047C  30CD               	movlw	(low ((_Timer| 0+24)))& (0+255)
  8208  047D  3197  27EF  3184   	fcall	_timerEventStart
  8209                           
  8210                           ;ap.c: 204: buttons_init();
  8211  0480  3188  2016  3184   	fcall	_buttons_init
  8212                           
  8213                           ;ap.c: 205: buttons_setFuncs(event_btn_Expose,event_btn_Stop);
  8214  0483  300C               	movlw	low _event_btn_Expose
  8215  0484  0020               	movlb	0	; select bank0
  8216  0485  00A0               	movwf	buttons_setFuncs@btn1
  8217  0486  300D               	movlw	high _event_btn_Expose
  8218  0487  00A1               	movwf	buttons_setFuncs@btn1+1
  8219  0488  309C               	movlw	low _event_btn_Stop
  8220  0489  00A2               	movwf	buttons_setFuncs@btn2
  8221  048A  3009               	movlw	high _event_btn_Stop
  8222  048B  00A3               	movwf	buttons_setFuncs@btn2+1
  8223  048C  3188  2072  3184   	fcall	_buttons_setFuncs
  8224                           
  8225                           ;ap.c: 207: I2C_AS1115_Write(SHUTDOWN,NORMAL_OPERATION);
  8226  048F  0020               	movlb	0	; select bank0
  8227  0490  01B9               	clrf	I2C_AS1115_Write@data
  8228  0491  0AB9               	incf	I2C_AS1115_Write@data,f
  8229  0492  300C               	movlw	12
  8230  0493  3189  2139  3184   	fcall	_I2C_AS1115_Write
  8231                           
  8232                           ;ap.c: 208: I2C_AS1115_Write(GLOBAL_INTENSITY,7);
  8233  0496  3007               	movlw	7
  8234  0497  0020               	movlb	0	; select bank0
  8235  0498  00C1               	movwf	??_apInit
  8236  0499  0841               	movf	??_apInit,w
  8237  049A  00B9               	movwf	I2C_AS1115_Write@data
  8238  049B  300A               	movlw	10
  8239  049C  3189  2139  3184   	fcall	_I2C_AS1115_Write
  8240                           
  8241                           ;ap.c: 209: I2C_AS1115_Write(DECODE_MODE,0x3F);
  8242  049F  303F               	movlw	63
  8243  04A0  0020               	movlb	0	; select bank0
  8244  04A1  00C1               	movwf	??_apInit
  8245  04A2  0841               	movf	??_apInit,w
  8246  04A3  00B9               	movwf	I2C_AS1115_Write@data
  8247  04A4  3009               	movlw	9
  8248  04A5  3189  2139  3184   	fcall	_I2C_AS1115_Write
  8249                           
  8250                           ;ap.c: 210: I2C_AS1115_Write(SCAN_LIMIT,0x05);
  8251  04A8  3005               	movlw	5
  8252  04A9  0020               	movlb	0	; select bank0
  8253  04AA  00C1               	movwf	??_apInit
  8254  04AB  0841               	movf	??_apInit,w
  8255  04AC  00B9               	movwf	I2C_AS1115_Write@data
  8256  04AD  300B               	movlw	11
  8257  04AE  3189  2139  3184   	fcall	_I2C_AS1115_Write
  8258                           
  8259                           ;ap.c: 212: uint16_t D_temp;
  8260                           ;ap.c: 214: D_temp = 0x000F;
  8261  04B1  300F               	movlw	15
  8262  04B2  0020               	movlb	0	; select bank0
  8263  04B3  00C2               	movwf	apInit@D_temp
  8264  04B4  3000               	movlw	0
  8265  04B5  00C3               	movwf	apInit@D_temp+1
  8266                           
  8267                           ;ap.c: 216: I2C_DAC_Write(0x08,&D_temp);
  8268  04B6  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8269  04B7  00C1               	movwf	??_apInit
  8270  04B8  0841               	movf	??_apInit,w
  8271  04B9  00B9               	movwf	I2C_DAC_Write@data
  8272  04BA  3008               	movlw	8
  8273  04BB  318A  22D0  3184   	fcall	_I2C_DAC_Write
  8274                           
  8275                           ;ap.c: 218: D_temp = 2048;
  8276  04BE  3000               	movlw	0
  8277  04BF  0020               	movlb	0	; select bank0
  8278  04C0  00C2               	movwf	apInit@D_temp
  8279  04C1  3008               	movlw	8
  8280  04C2  00C3               	movwf	apInit@D_temp+1
  8281                           
  8282                           ;ap.c: 219: I2C_DAC_Write(0x10,&D_temp);
  8283  04C3  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8284  04C4  00C1               	movwf	??_apInit
  8285  04C5  0841               	movf	??_apInit,w
  8286  04C6  00B9               	movwf	I2C_DAC_Write@data
  8287  04C7  3010               	movlw	16
  8288  04C8  318A  22D0  3184   	fcall	_I2C_DAC_Write
  8289                           
  8290                           ;ap.c: 220: I2C_DAC_Write(0x00,&D_temp);
  8291  04CB  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8292  04CC  0020               	movlb	0	; select bank0
  8293  04CD  00C1               	movwf	??_apInit
  8294  04CE  0841               	movf	??_apInit,w
  8295  04CF  00B9               	movwf	I2C_DAC_Write@data
  8296  04D0  3000               	movlw	0
  8297  04D1  318A  22D0  3184   	fcall	_I2C_DAC_Write
  8298                           
  8299                           ;ap.c: 222: I2C_DAC_Write(0x11,&D_temp);
  8300  04D4  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8301  04D5  0020               	movlb	0	; select bank0
  8302  04D6  00C1               	movwf	??_apInit
  8303  04D7  0841               	movf	??_apInit,w
  8304  04D8  00B9               	movwf	I2C_DAC_Write@data
  8305  04D9  3011               	movlw	17
  8306  04DA  318A  22D0  3184   	fcall	_I2C_DAC_Write
  8307                           
  8308                           ;ap.c: 223: I2C_DAC_Write(0x01,&D_temp);
  8309  04DD  3042               	movlw	(low (apInit@D_temp| 0))& (0+255)
  8310  04DE  0020               	movlb	0	; select bank0
  8311  04DF  00C1               	movwf	??_apInit
  8312  04E0  0841               	movf	??_apInit,w
  8313  04E1  00B9               	movwf	I2C_DAC_Write@data
  8314  04E2  3001               	movlw	1
  8315  04E3  318A  22D0  3184   	fcall	_I2C_DAC_Write
  8316                           
  8317                           ;ap.c: 225: event_btn_Stop();
  8318  04E6  3189  219C         	fcall	_event_btn_Stop
  8319  04E8  0008               	return
  8320  04E9                     __end_of_apInit:	
  8321                           
  8322                           	psect	text34
  8323  0958                     __ptext34:	
  8324 ;; *************** function _timerInit *****************
  8325 ;; Defined at:
  8326 ;;		line 10 in file "timer.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  time            1    wreg     PTR struct .
  8329 ;;		 -> Timer(48), 
  8330 ;;  timeSet         2    0[BANK0 ] unsigned int 
  8331 ;;  func            2    2[BANK0 ] PTR FTN()void 
  8332 ;;		 -> event_anodeCurrent(1), event_rst(1), event_display(1), event_expose(1), 
  8333 ;;		 -> event_timer_Button(1), 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  time            1    4[BANK0 ] PTR struct .
  8336 ;;		 -> Timer(48), 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;Total ram usage:        5 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    2
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_apInit
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function _timerInit
  8362  0958                     _timerInit:	
  8363                           
  8364                           ;incstack = 0
  8365                           ; Regs used in _timerInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8366                           ;timerInit@time stored from wreg
  8367  0958  0020               	movlb	0	; select bank0
  8368  0959  00A4               	movwf	timerInit@time
  8369                           
  8370                           ;timer.c: 12: time->start = 0;
  8371  095A  0824               	movf	timerInit@time,w
  8372  095B  0086               	movwf	6
  8373  095C  0187               	clrf	7
  8374  095D  0181               	clrf	1
  8375                           
  8376                           ;timer.c: 13: time->tick = 0;
  8377  095E  0A24               	incf	timerInit@time,w
  8378  095F  0086               	movwf	6
  8379  0960  0187               	clrf	7
  8380  0961  0181               	clrf	1
  8381                           
  8382                           ;timer.c: 14: time->set = timeSet;
  8383  0962  0824               	movf	timerInit@time,w
  8384  0963  3E02               	addlw	2
  8385  0964  0086               	movwf	6
  8386  0965  0187               	clrf	7
  8387  0966  0820               	movf	timerInit@timeSet,w
  8388  0967  3FC0               	movwi [0]fsr1
  8389  0968  0821               	movf	timerInit@timeSet+1,w
  8390  0969  3FC1               	movwi [1]fsr1
  8391                           
  8392                           ;timer.c: 15: time->interval = 0;
  8393  096A  0824               	movf	timerInit@time,w
  8394  096B  3E04               	addlw	4
  8395  096C  0086               	movwf	6
  8396  096D  0187               	clrf	7
  8397  096E  3000               	movlw	0
  8398  096F  3FC0               	movwi [0]fsr1
  8399  0970  3FC1               	movwi [1]fsr1
  8400                           
  8401                           ;timer.c: 16: time->timeProc = func;
  8402  0971  0824               	movf	timerInit@time,w
  8403  0972  3E06               	addlw	6
  8404  0973  0086               	movwf	6
  8405  0974  0187               	clrf	7
  8406  0975  0822               	movf	timerInit@func,w
  8407  0976  3FC0               	movwi [0]fsr1
  8408  0977  0823               	movf	timerInit@func+1,w
  8409  0978  3FC1               	movwi [1]fsr1
  8410  0979  0008               	return
  8411  097A                     __end_of_timerInit:	
  8412                           
  8413                           	psect	text35
  8414  17EF                     __ptext35:	
  8415 ;; *************** function _timerEventStart *****************
  8416 ;; Defined at:
  8417 ;;		line 24 in file "timer.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  time            1    wreg     PTR struct .
  8420 ;;		 -> Timer(48), 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  time            1    0[BANK0 ] PTR struct .
  8423 ;;		 -> Timer(48), 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr1l, fsr1h
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;Total ram usage:        1 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    2
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_event_btn_Expose
  8444 ;;		_event_display
  8445 ;;		_apInit
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           
  8450                           ;psect for function _timerEventStart
  8451  17EF                     _timerEventStart:	
  8452                           
  8453                           ;incstack = 0
  8454                           ; Regs used in _timerEventStart: [wregfsr1]
  8455                           ;timerEventStart@time stored from wreg
  8456  17EF  0020               	movlb	0	; select bank0
  8457  17F0  00A0               	movwf	timerEventStart@time
  8458                           
  8459                           ;timer.c: 26: time->start = 1;
  8460  17F1  0820               	movf	timerEventStart@time,w
  8461  17F2  0086               	movwf	6
  8462  17F3  0187               	clrf	7
  8463  17F4  0181               	clrf	1
  8464  17F5  0A81               	incf	1,f
  8465  17F6  0008               	return
  8466  17F7                     __end_of_timerEventStart:	
  8467                           
  8468                           	psect	text36
  8469  082B                     __ptext36:	
  8470 ;; *************** function _initTimer *****************
  8471 ;; Defined at:
  8472 ;;		line 345 in file "ap.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, status,2, status,0
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;Total ram usage:        0 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:    2
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_apInit
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           
  8501                           ;psect for function _initTimer
  8502  082B                     _initTimer:	
  8503                           
  8504                           ;ap.c: 348: OPTION_REGbits.TMR0CS = 0;
  8505                           
  8506                           ;incstack = 0
  8507                           ; Regs used in _initTimer: [wreg+status,2+status,0]
  8508  082B  0021               	movlb	1	; select bank1
  8509  082C  1295               	bcf	21,5	;volatile
  8510                           
  8511                           ;ap.c: 349: OPTION_REGbits.TMR0SE = 0;
  8512  082D  1215               	bcf	21,4	;volatile
  8513                           
  8514                           ;ap.c: 350: OPTION_REGbits.PSA = 0;
  8515  082E  1195               	bcf	21,3	;volatile
  8516                           
  8517                           ;ap.c: 352: OPTION_REGbits.PS = 0b010;
  8518  082F  0815               	movf	21,w	;volatile
  8519  0830  39F8               	andlw	-8
  8520  0831  3802               	iorlw	2
  8521  0832  0095               	movwf	21	;volatile
  8522                           
  8523                           ;ap.c: 353: TMR0 = 131;
  8524  0833  3083               	movlw	131
  8525  0834  0020               	movlb	0	; select bank0
  8526  0835  0095               	movwf	21	;volatile
  8527                           
  8528                           ;ap.c: 381: INTCONbits.TMR0IE = 1;
  8529  0836  168B               	bsf	11,5	;volatile
  8530                           
  8531                           ;ap.c: 382: INTCONbits.TMR0IF = 0;
  8532  0837  110B               	bcf	11,2	;volatile
  8533  0838  0008               	return
  8534  0839                     __end_of_initTimer:	
  8535                           
  8536                           	psect	text37
  8537  0CC3                     __ptext37:	
  8538 ;; *************** function _initPort *****************
  8539 ;; Defined at:
  8540 ;;		line 278 in file "ap.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;		None
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1    wreg      void 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2, status,0
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;Total ram usage:        0 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    2
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		_apInit
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function _initPort
  8570  0CC3                     _initPort:	
  8571                           
  8572                           ;ap.c: 282: OSCCONbits.SCS = 0b00;
  8573                           
  8574                           ;incstack = 0
  8575                           ; Regs used in _initPort: [wreg+status,2+status,0]
  8576  0CC3  30FC               	movlw	-4
  8577  0CC4  0021               	movlb	1	; select bank1
  8578  0CC5  0599               	andwf	25,f	;volatile
  8579                           
  8580                           ;ap.c: 283: OSCCONbits.IRCF = 0b1101;
  8581  0CC6  0819               	movf	25,w	;volatile
  8582  0CC7  3987               	andlw	-121
  8583  0CC8  3868               	iorlw	104
  8584  0CC9  0099               	movwf	25	;volatile
  8585                           
  8586                           ;ap.c: 300: OPTION_REGbits.nWPUEN = 0;
  8587  0CCA  1395               	bcf	21,7	;volatile
  8588                           
  8589                           ;ap.c: 306: PORTA = 0x00;
  8590  0CCB  0020               	movlb	0	; select bank0
  8591  0CCC  018C               	clrf	12	;volatile
  8592                           
  8593                           ;ap.c: 307: LATA = 0x00;
  8594  0CCD  0022               	movlb	2	; select bank2
  8595  0CCE  018C               	clrf	12	;volatile
  8596                           
  8597                           ;ap.c: 308: ANSELA = 0b00111110;
  8598  0CCF  303E               	movlw	62
  8599  0CD0  0023               	movlb	3	; select bank3
  8600  0CD1  008C               	movwf	12	;volatile
  8601                           
  8602                           ;ap.c: 309: TRISA = 0b11111111;
  8603  0CD2  30FF               	movlw	255
  8604  0CD3  0021               	movlb	1	; select bank1
  8605  0CD4  008C               	movwf	12	;volatile
  8606                           
  8607                           ;ap.c: 311: PORTB = 0x00;
  8608  0CD5  0020               	movlb	0	; select bank0
  8609  0CD6  018D               	clrf	13	;volatile
  8610                           
  8611                           ;ap.c: 312: LATB = 0x00;
  8612  0CD7  0022               	movlb	2	; select bank2
  8613  0CD8  018D               	clrf	13	;volatile
  8614                           
  8615                           ;ap.c: 313: WPUB = 0b10000100;
  8616  0CD9  3084               	movlw	132
  8617  0CDA  0024               	movlb	4	; select bank4
  8618  0CDB  008D               	movwf	13	;volatile
  8619                           
  8620                           ;ap.c: 315: TRISB = 0b10101110;
  8621  0CDC  30AE               	movlw	174
  8622  0CDD  0021               	movlb	1	; select bank1
  8623  0CDE  008D               	movwf	13	;volatile
  8624                           
  8625                           ;ap.c: 317: PORTC = 0x00;
  8626  0CDF  0020               	movlb	0	; select bank0
  8627  0CE0  018E               	clrf	14	;volatile
  8628                           
  8629                           ;ap.c: 318: LATC = 0x03;
  8630  0CE1  3003               	movlw	3
  8631  0CE2  0022               	movlb	2	; select bank2
  8632  0CE3  008E               	movwf	14	;volatile
  8633                           
  8634                           ;ap.c: 319: TRISC = 0b11111000;
  8635  0CE4  30F8               	movlw	248
  8636  0CE5  0021               	movlb	1	; select bank1
  8637  0CE6  008E               	movwf	14	;volatile
  8638                           
  8639                           ;ap.c: 321: PORTD = 0x00;
  8640  0CE7  0020               	movlb	0	; select bank0
  8641  0CE8  018F               	clrf	15	;volatile
  8642                           
  8643                           ;ap.c: 322: LATD = 0x00;
  8644  0CE9  0022               	movlb	2	; select bank2
  8645  0CEA  018F               	clrf	15	;volatile
  8646                           
  8647                           ;ap.c: 323: TRISD = 0b011100100;
  8648  0CEB  30E4               	movlw	228
  8649  0CEC  0021               	movlb	1	; select bank1
  8650  0CED  008F               	movwf	15	;volatile
  8651                           
  8652                           ;ap.c: 325: PORTE = 0x00;
  8653  0CEE  0020               	movlb	0	; select bank0
  8654  0CEF  0190               	clrf	16	;volatile
  8655                           
  8656                           ;ap.c: 326: LATE = 0x00;
  8657  0CF0  0022               	movlb	2	; select bank2
  8658  0CF1  0190               	clrf	16	;volatile
  8659                           
  8660                           ;ap.c: 327: ANSELE = 0x00;
  8661  0CF2  0023               	movlb	3	; select bank3
  8662  0CF3  0190               	clrf	16	;volatile
  8663                           
  8664                           ;ap.c: 328: TRISE = 0b01110000;
  8665  0CF4  3070               	movlw	112
  8666  0CF5  0021               	movlb	1	; select bank1
  8667  0CF6  0090               	movwf	16	;volatile
  8668                           
  8669                           ;ap.c: 330: PORTF = 0x00;
  8670  0CF7  0025               	movlb	5	; select bank5
  8671  0CF8  018C               	clrf	12	;volatile
  8672                           
  8673                           ;ap.c: 331: LATF = 0x00;
  8674  0CF9  0027               	movlb	7	; select bank7
  8675  0CFA  018C               	clrf	12	;volatile
  8676                           
  8677                           ;ap.c: 332: ANSELF = 0x00;
  8678  0CFB  0028               	movlb	8	; select bank8
  8679  0CFC  018C               	clrf	12	;volatile
  8680                           
  8681                           ;ap.c: 333: TRISF = 0b10000011;
  8682  0CFD  3083               	movlw	131
  8683  0CFE  0026               	movlb	6	; select bank6
  8684  0CFF  008C               	movwf	12	;volatile
  8685                           
  8686                           ;ap.c: 335: PORTG = 0x00;
  8687  0D00  0025               	movlb	5	; select bank5
  8688  0D01  018D               	clrf	13	;volatile
  8689                           
  8690                           ;ap.c: 336: LATG = 0x00;
  8691  0D02  0027               	movlb	7	; select bank7
  8692  0D03  018D               	clrf	13	;volatile
  8693                           
  8694                           ;ap.c: 337: TRISG = 0b00011100;
  8695  0D04  301C               	movlw	28
  8696  0D05  0026               	movlb	6	; select bank6
  8697  0D06  008D               	movwf	13	;volatile
  8698                           
  8699                           ;ap.c: 338: ANSELG = 0;
  8700  0D07  0028               	movlb	8	; select bank8
  8701  0D08  018D               	clrf	13	;volatile
  8702                           
  8703                           ;ap.c: 339: WPUG = 0;
  8704  0D09  0029               	movlb	9	; select bank9
  8705  0D0A  018D               	clrf	13	;volatile
  8706  0D0B  0008               	return
  8707  0D0C                     __end_of_initPort:	
  8708                           
  8709                           	psect	text38
  8710  08A6                     __ptext38:	
  8711 ;; *************** function _timerTickClear *****************
  8712 ;; Defined at:
  8713 ;;		line 34 in file "timer.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  time            1    wreg     PTR struct .
  8716 ;;		 -> Timer(48), 
  8717 ;;  start           1    0[BANK0 ] unsigned char 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  time            1    2[BANK0 ] PTR struct .
  8720 ;;		 -> Timer(48), 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8730 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;Total ram usage:        3 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; Hardware stack levels required when called:    2
  8737 ;; This function calls:
  8738 ;;		Nothing
  8739 ;; This function is called by:
  8740 ;;		_event_btn_Stop
  8741 ;;		_event_timer_Button
  8742 ;;		_event_expose
  8743 ;;		_event_display
  8744 ;;		_event_rst
  8745 ;;		_event_anodeCurrent
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           
  8750                           ;psect for function _timerTickClear
  8751  08A6                     _timerTickClear:	
  8752                           
  8753                           ;incstack = 0
  8754                           ; Regs used in _timerTickClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  8755                           ;timerTickClear@time stored from wreg
  8756  08A6  0020               	movlb	0	; select bank0
  8757  08A7  00A2               	movwf	timerTickClear@time
  8758                           
  8759                           ;timer.c: 36: time->start = start;
  8760  08A8  0820               	movf	timerTickClear@start,w
  8761  08A9  00A1               	movwf	??_timerTickClear
  8762  08AA  0822               	movf	timerTickClear@time,w
  8763  08AB  0086               	movwf	6
  8764  08AC  0187               	clrf	7
  8765  08AD  0821               	movf	??_timerTickClear,w
  8766  08AE  0081               	movwf	1
  8767                           
  8768                           ;timer.c: 37: time->tick = 0;
  8769  08AF  0A22               	incf	timerTickClear@time,w
  8770  08B0  0086               	movwf	6
  8771  08B1  0187               	clrf	7
  8772  08B2  0181               	clrf	1
  8773                           
  8774                           ;timer.c: 38: time->interval = 0;
  8775  08B3  0822               	movf	timerTickClear@time,w
  8776  08B4  3E04               	addlw	4
  8777  08B5  0086               	movwf	6
  8778  08B6  0187               	clrf	7
  8779  08B7  3000               	movlw	0
  8780  08B8  3FC0               	movwi [0]fsr1
  8781  08B9  3FC1               	movwi [1]fsr1
  8782  08BA  0008               	return
  8783  08BB                     __end_of_timerTickClear:	
  8784                           
  8785                           	psect	text39
  8786  17E7                     __ptext39:	
  8787 ;; *************** function _pwmStop_ccp3 *****************
  8788 ;; Defined at:
  8789 ;;		line 100 in file "pwm.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;		None
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;		None
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		None
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;Total ram usage:        0 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    2
  8810 ;; This function calls:
  8811 ;;		Nothing
  8812 ;; This function is called by:
  8813 ;;		_event_btn_Stop
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           
  8818                           ;psect for function _pwmStop_ccp3
  8819  17E7                     _pwmStop_ccp3:	
  8820                           
  8821                           ;pwm.c: 102: CCP3CONbits.CCP3M3 = 0;
  8822                           
  8823                           ;incstack = 0
  8824                           ; Regs used in _pwmStop_ccp3: []
  8825  17E7  0026               	movlb	6	; select bank6
  8826  17E8  1193               	bcf	19,3	;volatile
  8827                           
  8828                           ;pwm.c: 103: CCP3CONbits.CCP3M2 = 0;
  8829  17E9  1113               	bcf	19,2	;volatile
  8830                           
  8831                           ;pwm.c: 104: CCP3CONbits.CCP3M1 = 0;
  8832  17EA  1093               	bcf	19,1	;volatile
  8833                           
  8834                           ;pwm.c: 105: CCP3CONbits.CCP3M0 = 0;
  8835  17EB  1013               	bcf	19,0	;volatile
  8836                           
  8837                           ;pwm.c: 107: T4CONbits.TMR4ON = 0;
  8838  17EC  0028               	movlb	8	; select bank8
  8839  17ED  1117               	bcf	23,2	;volatile
  8840  17EE  0008               	return
  8841  17EF                     __end_of_pwmStop_ccp3:	
  8842                           
  8843                           	psect	text40
  8844  17CD                     __ptext40:	
  8845 ;; *************** function _pwmStop_ccp2 *****************
  8846 ;; Defined at:
  8847 ;;		line 56 in file "pwm.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;		None
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;		None
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, status,2, status,0
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;Total ram usage:        0 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; Hardware stack levels required when called:    2
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_event_btn_Stop
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           
  8876                           ;psect for function _pwmStop_ccp2
  8877  17CD                     _pwmStop_ccp2:	
  8878                           
  8879                           ;pwm.c: 58: CCP2CONbits.CCP2M = 0;
  8880                           
  8881                           ;incstack = 0
  8882                           ; Regs used in _pwmStop_ccp2: [wreg+status,2+status,0]
  8883  17CD  30F0               	movlw	-16
  8884  17CE  0025               	movlb	5	; select bank5
  8885  17CF  059A               	andwf	26,f	;volatile
  8886                           
  8887                           ;pwm.c: 59: T2CONbits.TMR2ON = 0;
  8888  17D0  0020               	movlb	0	; select bank0
  8889  17D1  111C               	bcf	28,2	;volatile
  8890  17D2  0008               	return
  8891  17D3                     __end_of_pwmStop_ccp2:	
  8892                           
  8893                           	psect	text41
  8894  0AD0                     __ptext41:	
  8895 ;; *************** function _I2C_DAC_Write *****************
  8896 ;; Defined at:
  8897 ;;		line 4 in file "MCP47FEB2X.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  address         1    wreg     unsigned char 
  8900 ;;  data            1   25[BANK0 ] PTR int 
  8901 ;;		 -> apInit@D_temp(2), event_btn_Stop@temp(2), event_btn_Expose@temp(2), 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  address         1   28[BANK0 ] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8913 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;Total ram usage:        4 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    5
  8920 ;; This function calls:
  8921 ;;		_I2CAck_2
  8922 ;;		_I2CSend_2
  8923 ;;		_I2CStart_2
  8924 ;;		_I2CStop_2
  8925 ;; This function is called by:
  8926 ;;		_event_btn_Expose
  8927 ;;		_event_btn_Stop
  8928 ;;		_apInit
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           
  8933                           ;psect for function _I2C_DAC_Write
  8934  0AD0                     _I2C_DAC_Write:	
  8935                           
  8936                           ;incstack = 0
  8937                           ; Regs used in _I2C_DAC_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8938                           ;I2C_DAC_Write@address stored from wreg
  8939  0AD0  0020               	movlb	0	; select bank0
  8940  0AD1  00BC               	movwf	I2C_DAC_Write@address
  8941                           
  8942                           ;MCP47FEB2X.c: 7: I2CStart_2();
  8943  0AD2  3197  27C3  318A   	fcall	_I2CStart_2
  8944                           
  8945                           ;MCP47FEB2X.c: 8: I2CSend_2(0xC0);
  8946  0AD5  30C0               	movlw	192
  8947  0AD6  3188  2003  318A   	fcall	_I2CSend_2
  8948                           
  8949                           ;MCP47FEB2X.c: 9: I2CAck_2();
  8950  0AD9  318B  23FF  318A   	fcall	_I2CAck_2
  8951                           
  8952                           ;MCP47FEB2X.c: 10: I2CSend_2((address << 3) & 0xF8);
  8953  0ADC  0020               	movlb	0	; select bank0
  8954  0ADD  083C               	movf	I2C_DAC_Write@address,w
  8955  0ADE  00BA               	movwf	??_I2C_DAC_Write
  8956  0ADF  3002               	movlw	2
  8957  0AE0                     u2165:	
  8958  0AE0  35BA               	lslf	??_I2C_DAC_Write,f
  8959  0AE1  3EFF               	addlw	-1
  8960  0AE2  1D03               	skipz
  8961  0AE3  2AE0               	goto	u2165
  8962  0AE4  353A               	lslf	??_I2C_DAC_Write,w
  8963  0AE5  39F8               	andlw	248
  8964  0AE6  3188  2003  318A   	fcall	_I2CSend_2
  8965                           
  8966                           ;MCP47FEB2X.c: 11: I2CAck_2();
  8967  0AE9  318B  23FF  318A   	fcall	_I2CAck_2
  8968                           
  8969                           ;MCP47FEB2X.c: 12: I2CSend_2(((*data) >> 8) & 0xFF);
  8970  0AEC  0020               	movlb	0	; select bank0
  8971  0AED  0839               	movf	I2C_DAC_Write@data,w
  8972  0AEE  0086               	movwf	6
  8973  0AEF  0187               	clrf	7
  8974  0AF0  3F40               	moviw [0]fsr1
  8975  0AF1  00BA               	movwf	??_I2C_DAC_Write
  8976  0AF2  3F41               	moviw [1]fsr1
  8977  0AF3  00BB               	movwf	??_I2C_DAC_Write+1
  8978  0AF4  083B               	movf	??_I2C_DAC_Write+1,w
  8979  0AF5  3188  2003  318A   	fcall	_I2CSend_2
  8980                           
  8981                           ;MCP47FEB2X.c: 13: I2CAck_2();
  8982  0AF8  318B  23FF  318A   	fcall	_I2CAck_2
  8983                           
  8984                           ;MCP47FEB2X.c: 14: I2CSend_2((*data) & 0xFF);
  8985  0AFB  0020               	movlb	0	; select bank0
  8986  0AFC  0839               	movf	I2C_DAC_Write@data,w
  8987  0AFD  0086               	movwf	6
  8988  0AFE  0187               	clrf	7
  8989  0AFF  0801               	movf	1,w
  8990  0B00  3188  2003  318A   	fcall	_I2CSend_2
  8991                           
  8992                           ;MCP47FEB2X.c: 15: I2CAck_2();
  8993  0B03  318B  23FF  318A   	fcall	_I2CAck_2
  8994                           
  8995                           ;MCP47FEB2X.c: 16: I2CStop_2();
  8996  0B06  3197  27C8         	fcall	_I2CStop_2
  8997  0B08  0008               	return
  8998  0B09                     __end_of_I2C_DAC_Write:	
  8999                           
  9000                           	psect	text42
  9001  17C8                     __ptext42:	
  9002 ;; *************** function _I2CStop_2 *****************
  9003 ;; Defined at:
  9004 ;;		line 147 in file "I2C.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;		None
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0, pclath, cstack
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;Total ram usage:        0 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    4
  9025 ;; This function calls:
  9026 ;;		_I2CWait_2
  9027 ;; This function is called by:
  9028 ;;		_I2C_DAC_Write
  9029 ;;		_I2C_DAC_Read
  9030 ;;		_I2C_Config_Write
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function _I2CStop_2
  9036  17C8                     _I2CStop_2:	
  9037                           
  9038                           ;I2C.c: 149: I2CWait_2();
  9039                           
  9040                           ;incstack = 0
  9041                           ; Regs used in _I2CStop_2: [wreg+status,2+status,0+pclath+cstack]
  9042  17C8  318C  2481         	fcall	_I2CWait_2
  9043                           
  9044                           ;I2C.c: 150: SSP2CON2bits.PEN = 1;
  9045  17CA  0024               	movlb	4	; select bank4
  9046  17CB  151E               	bsf	30,2	;volatile
  9047  17CC  0008               	return
  9048  17CD                     __end_of_I2CStop_2:	
  9049                           
  9050                           	psect	text43
  9051  17C3                     __ptext43:	
  9052 ;; *************** function _I2CStart_2 *****************
  9053 ;; Defined at:
  9054 ;;		line 140 in file "I2C.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0, pclath, cstack
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;Total ram usage:        0 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    4
  9075 ;; This function calls:
  9076 ;;		_I2CWait_2
  9077 ;; This function is called by:
  9078 ;;		_I2C_DAC_Write
  9079 ;;		_I2C_DAC_Read
  9080 ;;		_I2C_Config_Write
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           
  9085                           ;psect for function _I2CStart_2
  9086  17C3                     _I2CStart_2:	
  9087                           
  9088                           ;I2C.c: 142: I2CWait_2();
  9089                           
  9090                           ;incstack = 0
  9091                           ; Regs used in _I2CStart_2: [wreg+status,2+status,0+pclath+cstack]
  9092  17C3  318C  2481         	fcall	_I2CWait_2
  9093                           
  9094                           ;I2C.c: 143: SSP2CON2bits.SEN = 1;
  9095  17C5  0024               	movlb	4	; select bank4
  9096  17C6  141E               	bsf	30,0	;volatile
  9097  17C7  0008               	return
  9098  17C8                     __end_of_I2CStart_2:	
  9099                           
  9100                           	psect	text44
  9101  0803                     __ptext44:	
  9102 ;; *************** function _I2CSend_2 *****************
  9103 ;; Defined at:
  9104 ;;		line 214 in file "I2C.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  dat             1    wreg     unsigned char 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  dat             1   24[BANK0 ] unsigned char 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0, pclath, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;Total ram usage:        1 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    4
  9125 ;; This function calls:
  9126 ;;		_I2CWait_2
  9127 ;; This function is called by:
  9128 ;;		_I2C_DAC_Write
  9129 ;;		_I2C_DAC_Read
  9130 ;;		_I2C_Config_Write
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134                           
  9135                           ;psect for function _I2CSend_2
  9136  0803                     _I2CSend_2:	
  9137                           
  9138                           ;incstack = 0
  9139                           ; Regs used in _I2CSend_2: [wreg+status,2+status,0+pclath+cstack]
  9140                           ;I2CSend_2@dat stored from wreg
  9141  0803  0020               	movlb	0	; select bank0
  9142  0804  00B8               	movwf	I2CSend_2@dat
  9143                           
  9144                           ;I2C.c: 216: I2CWait_2();
  9145  0805  318C  2481         	fcall	_I2CWait_2
  9146                           
  9147                           ;I2C.c: 217: SSP2BUF = dat;
  9148  0807  0020               	movlb	0	; select bank0
  9149  0808  0838               	movf	I2CSend_2@dat,w
  9150  0809  0024               	movlb	4	; select bank4
  9151  080A  0099               	movwf	25	;volatile
  9152  080B  0008               	return
  9153  080C                     __end_of_I2CSend_2:	
  9154                           
  9155                           	psect	text45
  9156  0C81                     __ptext45:	
  9157 ;; *************** function _I2CWait_2 *****************
  9158 ;; Defined at:
  9159 ;;		line 197 in file "I2C.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  prev            4   20[BANK0 ] unsigned long 
  9164 ;;  now             4   16[BANK0 ] unsigned long 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0, pclath, cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;Total ram usage:        8 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:    3
  9181 ;; This function calls:
  9182 ;;		_get_millis
  9183 ;;		_init_millis
  9184 ;;		_millis
  9185 ;; This function is called by:
  9186 ;;		_I2CStart_2
  9187 ;;		_I2CStop_2
  9188 ;;		_I2CSend_2
  9189 ;;		_I2CRestart_2
  9190 ;;		_I2CRead_2
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           
  9195                           ;psect for function _I2CWait_2
  9196  0C81                     _I2CWait_2:	
  9197                           
  9198                           ;I2C.c: 199: millis_t now,prev=0;
  9199                           
  9200                           ;incstack = 0
  9201                           ; Regs used in _I2CWait_2: [wreg+status,2+status,0+pclath+cstack]
  9202  0C81  3000               	movlw	0
  9203  0C82  0020               	movlb	0	; select bank0
  9204  0C83  00B7               	movwf	I2CWait_2@prev+3
  9205  0C84  3000               	movlw	0
  9206  0C85  00B6               	movwf	I2CWait_2@prev+2
  9207  0C86  3000               	movlw	0
  9208  0C87  00B5               	movwf	I2CWait_2@prev+1
  9209  0C88  3000               	movlw	0
  9210  0C89  00B4               	movwf	I2CWait_2@prev
  9211                           
  9212                           ;I2C.c: 200: init_millis();
  9213  0C8A  3188  200C  318C   	fcall	_init_millis
  9214  0C8D                     l2002:	
  9215                           ;I2C.c: 203: while ( (SSP2CON2 & 0x1F) || ( SSP2STAT & 0x04 ))
  9216                           
  9217  0C8D  0024               	movlb	4	; select bank4
  9218  0C8E  081E               	movf	30,w	;volatile
  9219  0C8F  391F               	andlw	31
  9220  0C90  1903               	btfsc	3,2
  9221  0C91  2CC0               	goto	l2004
  9222  0C92                     l1996:	
  9223                           
  9224                           ;I2C.c: 204: {
  9225                           ;I2C.c: 205: now = millis();
  9226  0C92  3188  20E6  318C   	fcall	_millis
  9227  0C95  0020               	movlb	0	; select bank0
  9228  0C96  0823               	movf	?_millis+3,w
  9229  0C97  00B3               	movwf	I2CWait_2@now+3
  9230  0C98  0822               	movf	?_millis+2,w
  9231  0C99  00B2               	movwf	I2CWait_2@now+2
  9232  0C9A  0821               	movf	?_millis+1,w
  9233  0C9B  00B1               	movwf	I2CWait_2@now+1
  9234  0C9C  0820               	movf	?_millis,w
  9235  0C9D  00B0               	movwf	I2CWait_2@now
  9236                           
  9237                           ;I2C.c: 206: if(get_millis(now,prev) > 10)
  9238  0C9E  0833               	movf	I2CWait_2@now+3,w
  9239  0C9F  00A3               	movwf	get_millis@now+3
  9240  0CA0  0832               	movf	I2CWait_2@now+2,w
  9241  0CA1  00A2               	movwf	get_millis@now+2
  9242  0CA2  0831               	movf	I2CWait_2@now+1,w
  9243  0CA3  00A1               	movwf	get_millis@now+1
  9244  0CA4  0830               	movf	I2CWait_2@now,w
  9245  0CA5  00A0               	movwf	get_millis@now
  9246  0CA6  0837               	movf	I2CWait_2@prev+3,w
  9247  0CA7  00A7               	movwf	get_millis@prev_now+3
  9248  0CA8  0836               	movf	I2CWait_2@prev+2,w
  9249  0CA9  00A6               	movwf	get_millis@prev_now+2
  9250  0CAA  0835               	movf	I2CWait_2@prev+1,w
  9251  0CAB  00A5               	movwf	get_millis@prev_now+1
  9252  0CAC  0834               	movf	I2CWait_2@prev,w
  9253  0CAD  00A4               	movwf	get_millis@prev_now
  9254  0CAE  3189  21C0  318C   	fcall	_get_millis
  9255  0CB1  0020               	movlb	0	; select bank0
  9256  0CB2  0823               	movf	?_get_millis+3,w
  9257  0CB3  1D03               	btfss	3,2
  9258  0CB4  0008               	return
  9259  0CB5  0822               	movf	?_get_millis+2,w
  9260  0CB6  1D03               	btfss	3,2
  9261  0CB7  0008               	return
  9262  0CB8  0821               	movf	?_get_millis+1,w
  9263  0CB9  1D03               	btfss	3,2
  9264  0CBA  0008               	return
  9265  0CBB  300B               	movlw	11
  9266  0CBC  0220               	subwf	?_get_millis,w
  9267  0CBD  1803               	btfsc	3,0
  9268  0CBE  0008               	return
  9269  0CBF  2C8D               	goto	l2002
  9270  0CC0                     l2004:	
  9271                           ;I2C.c: 207: {
  9272                           ;I2C.c: 208: break;
  9273                           
  9274  0CC0  1D1C               	btfss	28,2	;volatile
  9275  0CC1  0008               	return
  9276  0CC2  2C92               	goto	l1996
  9277  0CC3                     __end_of_I2CWait_2:	
  9278                           
  9279                           	psect	text46
  9280  0BFF                     __ptext46:	
  9281 ;; *************** function _I2CAck_2 *****************
  9282 ;; Defined at:
  9283 ;;		line 161 in file "I2C.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;  prev            4   20[BANK0 ] unsigned long 
  9288 ;;  now             4   16[BANK0 ] unsigned long 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      void 
  9291 ;; Registers used:
  9292 ;;		wreg, status,2, status,0, pclath, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;Total ram usage:        8 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:    3
  9305 ;; This function calls:
  9306 ;;		_get_millis
  9307 ;;		_init_millis
  9308 ;;		_millis
  9309 ;; This function is called by:
  9310 ;;		_I2C_DAC_Write
  9311 ;;		_I2C_DAC_Read
  9312 ;;		_I2C_Config_Write
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316                           
  9317                           ;psect for function _I2CAck_2
  9318  0BFF                     _I2CAck_2:	
  9319                           
  9320                           ;I2C.c: 163: millis_t now,prev=0;
  9321                           
  9322                           ;incstack = 0
  9323                           ; Regs used in _I2CAck_2: [wreg+status,2+status,0+pclath+cstack]
  9324  0BFF  3000               	movlw	0
  9325  0C00  0020               	movlb	0	; select bank0
  9326  0C01  00B7               	movwf	I2CAck_2@prev+3
  9327  0C02  3000               	movlw	0
  9328  0C03  00B6               	movwf	I2CAck_2@prev+2
  9329  0C04  3000               	movlw	0
  9330  0C05  00B5               	movwf	I2CAck_2@prev+1
  9331  0C06  3000               	movlw	0
  9332  0C07  00B4               	movwf	I2CAck_2@prev
  9333                           
  9334                           ;I2C.c: 164: init_millis();
  9335  0C08  3188  200C  318B   	fcall	_init_millis
  9336  0C0B                     l112:	
  9337                           ;I2C.c: 166: while(SSP2CON2bits.ACKEN)
  9338                           
  9339  0C0B  0024               	movlb	4	; select bank4
  9340  0C0C  1E1E               	btfss	30,4	;volatile
  9341  0C0D  2C3B               	goto	l115
  9342                           
  9343                           ;I2C.c: 167: {
  9344                           ;I2C.c: 168: now = millis();
  9345  0C0E  3188  20E6  318B   	fcall	_millis
  9346  0C11  0020               	movlb	0	; select bank0
  9347  0C12  0823               	movf	?_millis+3,w
  9348  0C13  00B3               	movwf	I2CAck_2@now+3
  9349  0C14  0822               	movf	?_millis+2,w
  9350  0C15  00B2               	movwf	I2CAck_2@now+2
  9351  0C16  0821               	movf	?_millis+1,w
  9352  0C17  00B1               	movwf	I2CAck_2@now+1
  9353  0C18  0820               	movf	?_millis,w
  9354  0C19  00B0               	movwf	I2CAck_2@now
  9355                           
  9356                           ;I2C.c: 169: if(get_millis(now,prev) > 10)
  9357  0C1A  0833               	movf	I2CAck_2@now+3,w
  9358  0C1B  00A3               	movwf	get_millis@now+3
  9359  0C1C  0832               	movf	I2CAck_2@now+2,w
  9360  0C1D  00A2               	movwf	get_millis@now+2
  9361  0C1E  0831               	movf	I2CAck_2@now+1,w
  9362  0C1F  00A1               	movwf	get_millis@now+1
  9363  0C20  0830               	movf	I2CAck_2@now,w
  9364  0C21  00A0               	movwf	get_millis@now
  9365  0C22  0837               	movf	I2CAck_2@prev+3,w
  9366  0C23  00A7               	movwf	get_millis@prev_now+3
  9367  0C24  0836               	movf	I2CAck_2@prev+2,w
  9368  0C25  00A6               	movwf	get_millis@prev_now+2
  9369  0C26  0835               	movf	I2CAck_2@prev+1,w
  9370  0C27  00A5               	movwf	get_millis@prev_now+1
  9371  0C28  0834               	movf	I2CAck_2@prev,w
  9372  0C29  00A4               	movwf	get_millis@prev_now
  9373  0C2A  3189  21C0  318B   	fcall	_get_millis
  9374  0C2D  0020               	movlb	0	; select bank0
  9375  0C2E  0823               	movf	?_get_millis+3,w
  9376  0C2F  1D03               	btfss	3,2
  9377  0C30  2C3B               	goto	l115
  9378  0C31  0822               	movf	?_get_millis+2,w
  9379  0C32  1D03               	btfss	3,2
  9380  0C33  2C3B               	goto	l115
  9381  0C34  0821               	movf	?_get_millis+1,w
  9382  0C35  1D03               	btfss	3,2
  9383  0C36  2C3B               	goto	l115
  9384  0C37  300B               	movlw	11
  9385  0C38  0220               	subwf	?_get_millis,w
  9386  0C39  1C03               	btfss	3,0
  9387  0C3A  2C0B               	goto	l112
  9388  0C3B                     l115:	
  9389                           ;I2C.c: 170: {
  9390                           ;I2C.c: 171: break;
  9391                           
  9392                           
  9393                           ;I2C.c: 172: }
  9394                           ;I2C.c: 173: }
  9395                           ;I2C.c: 175: SSP2CON2bits.ACKDT = 0;
  9396  0C3B  0024               	movlb	4	; select bank4
  9397  0C3C  129E               	bcf	30,5	;volatile
  9398                           
  9399                           ;I2C.c: 176: SSP2CON2bits.ACKEN = 1;
  9400  0C3D  161E               	bsf	30,4	;volatile
  9401  0C3E  0008               	return
  9402  0C3F                     __end_of_I2CAck_2:	
  9403                           
  9404                           	psect	text47
  9405  0872                     __ptext47:	
  9406 ;; *************** function _buttons_setFuncs *****************
  9407 ;; Defined at:
  9408 ;;		line 102 in file "button.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  btn1            2    0[BANK0 ] PTR FTN()unsigned char 
  9411 ;;		 -> event_btn_Expose(1), 
  9412 ;;  btn2            2    2[BANK0 ] PTR FTN()unsigned char 
  9413 ;;		 -> event_btn_Stop(1), 
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;		None
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      void 
  9418 ;; Registers used:
  9419 ;;		wreg
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9429 ;;Total ram usage:        4 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    2
  9432 ;; This function calls:
  9433 ;;		Nothing
  9434 ;; This function is called by:
  9435 ;;		_apInit
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           
  9440                           ;psect for function _buttons_setFuncs
  9441  0872                     _buttons_setFuncs:	
  9442                           
  9443                           ;button.c: 104: buttons[BTN_1].onPress = btn1;
  9444                           
  9445                           ;incstack = 0
  9446                           ; Regs used in _buttons_setFuncs: [wreg]
  9447  0872  0020               	movlb	0	; select bank0
  9448  0873  0821               	movf	buttons_setFuncs@btn1+1,w
  9449  0874  0022               	movlb	2	; select bank2
  9450  0875  00A8               	movwf	((low ((_buttons| (0+256)+7))+1))^0
  9451  0876  0020               	movlb	0	; select bank0
  9452  0877  0820               	movf	buttons_setFuncs@btn1,w
  9453  0878  0022               	movlb	2	; select bank2
  9454  0879  00A7               	movwf	(low ((_buttons| (0+256)+7)))^0
  9455                           
  9456                           ;button.c: 105: buttons[BTN_2].onPress = btn2;
  9457  087A  0020               	movlb	0	; select bank0
  9458  087B  0823               	movf	buttons_setFuncs@btn2+1,w
  9459  087C  0022               	movlb	2	; select bank2
  9460  087D  00B1               	movwf	((low ((_buttons| (0+256)+16))+1))^0
  9461  087E  0020               	movlb	0	; select bank0
  9462  087F  0822               	movf	buttons_setFuncs@btn2,w
  9463  0880  0022               	movlb	2	; select bank2
  9464  0881  00B0               	movwf	(low ((_buttons| (0+256)+16)))^0
  9465  0882  0008               	return
  9466  0883                     __end_of_buttons_setFuncs:	
  9467                           
  9468                           	psect	text48
  9469  0816                     __ptext48:	
  9470 ;; *************** function _buttons_init *****************
  9471 ;; Defined at:
  9472 ;;		line 8 in file "button.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;		None
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1    wreg      void 
  9479 ;; Registers used:
  9480 ;;		wreg
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9490 ;;Total ram usage:        0 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    2
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_apInit
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _buttons_init
  9502  0816                     _buttons_init:	
  9503                           
  9504                           ;button.c: 11: buttons[BTN_1].pressedTime = 1;
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in _buttons_init: [wreg]
  9508  0816  3001               	movlw	1
  9509  0817  0022               	movlb	2	; select bank2
  9510  0818  00A0               	movwf	_buttons^(0+256)
  9511  0819  3000               	movlw	0
  9512  081A  00A1               	movwf	(_buttons^(0+256)+1)
  9513                           
  9514                           ;button.c: 12: buttons[BTN_2].pressedTime = 1;
  9515  081B  3001               	movlw	1
  9516  081C  00A9               	movwf	(_buttons^(0+256)+9)
  9517  081D  3000               	movlw	0
  9518  081E  00AA               	movwf	(_buttons^(0+256)+10)
  9519  081F  0008               	return
  9520  0820                     __end_of_buttons_init:	
  9521                           
  9522                           	psect	text49
  9523  0820                     __ptext49:	
  9524 ;; *************** function _adcInit *****************
  9525 ;; Defined at:
  9526 ;;		line 4 in file "adc.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;		None
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, status,2, status,0
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;Total ram usage:        0 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:    2
  9547 ;; This function calls:
  9548 ;;		Nothing
  9549 ;; This function is called by:
  9550 ;;		_apInit
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           
  9555                           ;psect for function _adcInit
  9556  0820                     _adcInit:	
  9557                           
  9558                           ;adc.c: 6: ADCON1bits.ADFM = 1;
  9559                           
  9560                           ;incstack = 0
  9561                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  9562  0820  0021               	movlb	1	; select bank1
  9563  0821  179E               	bsf	30,7	;volatile
  9564                           
  9565                           ;adc.c: 7: ADCON1bits.ADNREF = 0;
  9566  0822  111E               	bcf	30,2	;volatile
  9567                           
  9568                           ;adc.c: 8: ADCON1bits.ADPREF = 0b00;
  9569  0823  30FC               	movlw	-4
  9570  0824  059E               	andwf	30,f	;volatile
  9571                           
  9572                           ;adc.c: 10: ADCON1bits.ADCS = 0b110;
  9573  0825  081E               	movf	30,w	;volatile
  9574  0826  398F               	andlw	-113
  9575  0827  3860               	iorlw	96
  9576  0828  009E               	movwf	30	;volatile
  9577                           
  9578                           ;adc.c: 12: ADCON0bits.ADON = 0;
  9579  0829  101D               	bcf	29,0	;volatile
  9580  082A  0008               	return
  9581  082B                     __end_of_adcInit:	
  9582                           
  9583                           	psect	text50
  9584  0939                     __ptext50:	
  9585 ;; *************** function _I2C_AS1115_Write *****************
  9586 ;; Defined at:
  9587 ;;		line 11 in file "AS1115.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  cmd             1    wreg     unsigned char 
  9590 ;;  data            1   25[BANK0 ] unsigned char 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  cmd             1   26[BANK0 ] unsigned char 
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  1    wreg      void 
  9595 ;; Registers used:
  9596 ;;		wreg, status,2, status,0, pclath, cstack
  9597 ;; Tracked objects:
  9598 ;;		On entry : 0/0
  9599 ;;		On exit  : 0/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9602 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;Total ram usage:        2 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; Hardware stack levels required when called:    5
  9609 ;; This function calls:
  9610 ;;		_I2CAck
  9611 ;;		_I2CSend
  9612 ;;		_I2CStart
  9613 ;;		_I2CStop
  9614 ;; This function is called by:
  9615 ;;		_event_display
  9616 ;;		_apInit
  9617 ;;		_disp_ma_result
  9618 ;;		_disp_kv
  9619 ;;		_disp_3digit
  9620 ;;		_disp_ADC
  9621 ;;		_disp_ma
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           
  9626                           ;psect for function _I2C_AS1115_Write
  9627  0939                     _I2C_AS1115_Write:	
  9628                           
  9629                           ;incstack = 0
  9630                           ; Regs used in _I2C_AS1115_Write: [wreg+status,2+status,0+pclath+cstack]
  9631                           ;I2C_AS1115_Write@cmd stored from wreg
  9632  0939  0020               	movlb	0	; select bank0
  9633  093A  00BA               	movwf	I2C_AS1115_Write@cmd
  9634                           
  9635                           ;AS1115.c: 13: I2CStart();
  9636  093B  3197  27B9  3189   	fcall	_I2CStart
  9637                           
  9638                           ;AS1115.c: 14: I2CSend(0x00);
  9639  093E  3000               	movlw	0
  9640  093F  3197  27F7  3189   	fcall	_I2CSend
  9641                           
  9642                           ;AS1115.c: 15: I2CAck();
  9643  0942  318B  23BF  3189   	fcall	_I2CAck
  9644                           
  9645                           ;AS1115.c: 16: I2CSend(cmd);
  9646  0945  0020               	movlb	0	; select bank0
  9647  0946  083A               	movf	I2C_AS1115_Write@cmd,w
  9648  0947  3197  27F7  3189   	fcall	_I2CSend
  9649                           
  9650                           ;AS1115.c: 17: I2CAck();
  9651  094A  318B  23BF  3189   	fcall	_I2CAck
  9652                           
  9653                           ;AS1115.c: 18: I2CSend(data);
  9654  094D  0020               	movlb	0	; select bank0
  9655  094E  0839               	movf	I2C_AS1115_Write@data,w
  9656  094F  3197  27F7  3189   	fcall	_I2CSend
  9657                           
  9658                           ;AS1115.c: 19: I2CAck();
  9659  0952  318B  23BF  3189   	fcall	_I2CAck
  9660                           
  9661                           ;AS1115.c: 20: I2CStop();
  9662  0955  3197  27BE         	fcall	_I2CStop
  9663  0957  0008               	return
  9664  0958                     __end_of_I2C_AS1115_Write:	
  9665                           
  9666                           	psect	text51
  9667  17BE                     __ptext51:	
  9668 ;; *************** function _I2CStop *****************
  9669 ;; Defined at:
  9670 ;;		line 39 in file "I2C.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;		None
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;		None
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0, pclath, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;Total ram usage:        0 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; Hardware stack levels required when called:    4
  9691 ;; This function calls:
  9692 ;;		_I2CWait
  9693 ;; This function is called by:
  9694 ;;		_I2C_AS1115_Write
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           
  9699                           ;psect for function _I2CStop
  9700  17BE                     _I2CStop:	
  9701                           
  9702                           ;I2C.c: 41: I2CWait();
  9703                           
  9704                           ;incstack = 0
  9705                           ; Regs used in _I2CStop: [wreg+status,2+status,0+pclath+cstack]
  9706  17BE  318C  243F         	fcall	_I2CWait
  9707                           
  9708                           ;I2C.c: 42: SSP1CON2bits.PEN = 1;
  9709  17C0  0024               	movlb	4	; select bank4
  9710  17C1  1516               	bsf	22,2	;volatile
  9711  17C2  0008               	return
  9712  17C3                     __end_of_I2CStop:	
  9713                           
  9714                           	psect	text52
  9715  17B9                     __ptext52:	
  9716 ;; *************** function _I2CStart *****************
  9717 ;; Defined at:
  9718 ;;		line 32 in file "I2C.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, status,2, status,0, pclath, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;Total ram usage:        0 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    4
  9739 ;; This function calls:
  9740 ;;		_I2CWait
  9741 ;; This function is called by:
  9742 ;;		_I2C_AS1115_Write
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _I2CStart
  9748  17B9                     _I2CStart:	
  9749                           
  9750                           ;I2C.c: 34: I2CWait();
  9751                           
  9752                           ;incstack = 0
  9753                           ; Regs used in _I2CStart: [wreg+status,2+status,0+pclath+cstack]
  9754  17B9  318C  243F         	fcall	_I2CWait
  9755                           
  9756                           ;I2C.c: 35: SSP1CON2bits.SEN = 1;
  9757  17BB  0024               	movlb	4	; select bank4
  9758  17BC  1416               	bsf	22,0	;volatile
  9759  17BD  0008               	return
  9760  17BE                     __end_of_I2CStart:	
  9761                           
  9762                           	psect	text53
  9763  17F7                     __ptext53:	
  9764 ;; *************** function _I2CSend *****************
  9765 ;; Defined at:
  9766 ;;		line 104 in file "I2C.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;  dat             1    wreg     unsigned char 
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;  dat             1   24[BANK0 ] unsigned char 
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  1    wreg      void 
  9773 ;; Registers used:
  9774 ;;		wreg, status,2, status,0, pclath, cstack
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;Total ram usage:        1 bytes
  9785 ;; Hardware stack levels used:    1
  9786 ;; Hardware stack levels required when called:    4
  9787 ;; This function calls:
  9788 ;;		_I2CWait
  9789 ;; This function is called by:
  9790 ;;		_I2C_AS1115_Write
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           
  9795                           ;psect for function _I2CSend
  9796  17F7                     _I2CSend:	
  9797                           
  9798                           ;incstack = 0
  9799                           ; Regs used in _I2CSend: [wreg+status,2+status,0+pclath+cstack]
  9800                           ;I2CSend@dat stored from wreg
  9801  17F7  0020               	movlb	0	; select bank0
  9802  17F8  00B8               	movwf	I2CSend@dat
  9803                           
  9804                           ;I2C.c: 106: I2CWait();
  9805  17F9  318C  243F         	fcall	_I2CWait
  9806                           
  9807                           ;I2C.c: 107: SSP1BUF = dat;
  9808  17FB  0020               	movlb	0	; select bank0
  9809  17FC  0838               	movf	I2CSend@dat,w
  9810  17FD  0024               	movlb	4	; select bank4
  9811  17FE  0091               	movwf	17	;volatile
  9812  17FF  0008               	return
  9813  1800                     __end_of_I2CSend:	
  9814                           
  9815                           	psect	text54
  9816  0C3F                     __ptext54:	
  9817 ;; *************** function _I2CWait *****************
  9818 ;; Defined at:
  9819 ;;		line 88 in file "I2C.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;		None
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  prev            4   20[BANK0 ] unsigned long 
  9824 ;;  now             4   16[BANK0 ] unsigned long 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, status,2, status,0, pclath, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;Total ram usage:        8 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    3
  9841 ;; This function calls:
  9842 ;;		_get_millis
  9843 ;;		_init_millis
  9844 ;;		_millis
  9845 ;; This function is called by:
  9846 ;;		_I2CStart
  9847 ;;		_I2CStop
  9848 ;;		_I2CSend
  9849 ;;		_I2CRestart
  9850 ;;		_I2CRead
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           
  9855                           ;psect for function _I2CWait
  9856  0C3F                     _I2CWait:	
  9857                           
  9858                           ;I2C.c: 90: millis_t now,prev=0;
  9859                           
  9860                           ;incstack = 0
  9861                           ; Regs used in _I2CWait: [wreg+status,2+status,0+pclath+cstack]
  9862  0C3F  3000               	movlw	0
  9863  0C40  0020               	movlb	0	; select bank0
  9864  0C41  00B7               	movwf	I2CWait@prev+3
  9865  0C42  3000               	movlw	0
  9866  0C43  00B6               	movwf	I2CWait@prev+2
  9867  0C44  3000               	movlw	0
  9868  0C45  00B5               	movwf	I2CWait@prev+1
  9869  0C46  3000               	movlw	0
  9870  0C47  00B4               	movwf	I2CWait@prev
  9871                           
  9872                           ;I2C.c: 91: init_millis();
  9873  0C48  3188  200C  318C   	fcall	_init_millis
  9874  0C4B                     l2260:	
  9875                           ;I2C.c: 94: while ( (SSP1CON2 & 0x1F) || ( SSP1STAT & 0x04 ))
  9876                           
  9877  0C4B  0024               	movlb	4	; select bank4
  9878  0C4C  0816               	movf	22,w	;volatile
  9879  0C4D  391F               	andlw	31
  9880  0C4E  1903               	btfsc	3,2
  9881  0C4F  2C7E               	goto	l2262
  9882  0C50                     l2254:	
  9883                           
  9884                           ;I2C.c: 95: {
  9885                           ;I2C.c: 96: now = millis();
  9886  0C50  3188  20E6  318C   	fcall	_millis
  9887  0C53  0020               	movlb	0	; select bank0
  9888  0C54  0823               	movf	?_millis+3,w
  9889  0C55  00B3               	movwf	I2CWait@now+3
  9890  0C56  0822               	movf	?_millis+2,w
  9891  0C57  00B2               	movwf	I2CWait@now+2
  9892  0C58  0821               	movf	?_millis+1,w
  9893  0C59  00B1               	movwf	I2CWait@now+1
  9894  0C5A  0820               	movf	?_millis,w
  9895  0C5B  00B0               	movwf	I2CWait@now
  9896                           
  9897                           ;I2C.c: 97: if(get_millis(now,prev) > 10)
  9898  0C5C  0833               	movf	I2CWait@now+3,w
  9899  0C5D  00A3               	movwf	get_millis@now+3
  9900  0C5E  0832               	movf	I2CWait@now+2,w
  9901  0C5F  00A2               	movwf	get_millis@now+2
  9902  0C60  0831               	movf	I2CWait@now+1,w
  9903  0C61  00A1               	movwf	get_millis@now+1
  9904  0C62  0830               	movf	I2CWait@now,w
  9905  0C63  00A0               	movwf	get_millis@now
  9906  0C64  0837               	movf	I2CWait@prev+3,w
  9907  0C65  00A7               	movwf	get_millis@prev_now+3
  9908  0C66  0836               	movf	I2CWait@prev+2,w
  9909  0C67  00A6               	movwf	get_millis@prev_now+2
  9910  0C68  0835               	movf	I2CWait@prev+1,w
  9911  0C69  00A5               	movwf	get_millis@prev_now+1
  9912  0C6A  0834               	movf	I2CWait@prev,w
  9913  0C6B  00A4               	movwf	get_millis@prev_now
  9914  0C6C  3189  21C0  318C   	fcall	_get_millis
  9915  0C6F  0020               	movlb	0	; select bank0
  9916  0C70  0823               	movf	?_get_millis+3,w
  9917  0C71  1D03               	btfss	3,2
  9918  0C72  0008               	return
  9919  0C73  0822               	movf	?_get_millis+2,w
  9920  0C74  1D03               	btfss	3,2
  9921  0C75  0008               	return
  9922  0C76  0821               	movf	?_get_millis+1,w
  9923  0C77  1D03               	btfss	3,2
  9924  0C78  0008               	return
  9925  0C79  300B               	movlw	11
  9926  0C7A  0220               	subwf	?_get_millis,w
  9927  0C7B  1803               	btfsc	3,0
  9928  0C7C  0008               	return
  9929  0C7D  2C4B               	goto	l2260
  9930  0C7E                     l2262:	
  9931                           ;I2C.c: 98: {
  9932                           ;I2C.c: 99: break;
  9933                           
  9934  0C7E  1D14               	btfss	20,2	;volatile
  9935  0C7F  0008               	return
  9936  0C80  2C50               	goto	l2254
  9937  0C81                     __end_of_I2CWait:	
  9938                           
  9939                           	psect	text55
  9940  0BBF                     __ptext55:	
  9941 ;; *************** function _I2CAck *****************
  9942 ;; Defined at:
  9943 ;;		line 53 in file "I2C.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;		None
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;  prev            4   20[BANK0 ] unsigned long 
  9948 ;;  now             4   16[BANK0 ] unsigned long 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0, pclath, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9961 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9962 ;;Total ram usage:        8 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    3
  9965 ;; This function calls:
  9966 ;;		_get_millis
  9967 ;;		_init_millis
  9968 ;;		_millis
  9969 ;; This function is called by:
  9970 ;;		_I2C_AS1115_Write
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           
  9975                           ;psect for function _I2CAck
  9976  0BBF                     _I2CAck:	
  9977                           
  9978                           ;I2C.c: 55: millis_t now,prev=0;
  9979                           
  9980                           ;incstack = 0
  9981                           ; Regs used in _I2CAck: [wreg+status,2+status,0+pclath+cstack]
  9982  0BBF  3000               	movlw	0
  9983  0BC0  0020               	movlb	0	; select bank0
  9984  0BC1  00B7               	movwf	I2CAck@prev+3
  9985  0BC2  3000               	movlw	0
  9986  0BC3  00B6               	movwf	I2CAck@prev+2
  9987  0BC4  3000               	movlw	0
  9988  0BC5  00B5               	movwf	I2CAck@prev+1
  9989  0BC6  3000               	movlw	0
  9990  0BC7  00B4               	movwf	I2CAck@prev
  9991                           
  9992                           ;I2C.c: 56: init_millis();
  9993  0BC8  3188  200C  318B   	fcall	_init_millis
  9994  0BCB                     l73:	
  9995                           ;I2C.c: 58: while(SSP1CON2bits.ACKEN)
  9996                           
  9997  0BCB  0024               	movlb	4	; select bank4
  9998  0BCC  1E16               	btfss	22,4	;volatile
  9999  0BCD  2BFB               	goto	l76
 10000                           
 10001                           ;I2C.c: 59: {
 10002                           ;I2C.c: 60: now = millis();
 10003  0BCE  3188  20E6  318B   	fcall	_millis
 10004  0BD1  0020               	movlb	0	; select bank0
 10005  0BD2  0823               	movf	?_millis+3,w
 10006  0BD3  00B3               	movwf	I2CAck@now+3
 10007  0BD4  0822               	movf	?_millis+2,w
 10008  0BD5  00B2               	movwf	I2CAck@now+2
 10009  0BD6  0821               	movf	?_millis+1,w
 10010  0BD7  00B1               	movwf	I2CAck@now+1
 10011  0BD8  0820               	movf	?_millis,w
 10012  0BD9  00B0               	movwf	I2CAck@now
 10013                           
 10014                           ;I2C.c: 61: if(get_millis(now,prev) > 10)
 10015  0BDA  0833               	movf	I2CAck@now+3,w
 10016  0BDB  00A3               	movwf	get_millis@now+3
 10017  0BDC  0832               	movf	I2CAck@now+2,w
 10018  0BDD  00A2               	movwf	get_millis@now+2
 10019  0BDE  0831               	movf	I2CAck@now+1,w
 10020  0BDF  00A1               	movwf	get_millis@now+1
 10021  0BE0  0830               	movf	I2CAck@now,w
 10022  0BE1  00A0               	movwf	get_millis@now
 10023  0BE2  0837               	movf	I2CAck@prev+3,w
 10024  0BE3  00A7               	movwf	get_millis@prev_now+3
 10025  0BE4  0836               	movf	I2CAck@prev+2,w
 10026  0BE5  00A6               	movwf	get_millis@prev_now+2
 10027  0BE6  0835               	movf	I2CAck@prev+1,w
 10028  0BE7  00A5               	movwf	get_millis@prev_now+1
 10029  0BE8  0834               	movf	I2CAck@prev,w
 10030  0BE9  00A4               	movwf	get_millis@prev_now
 10031  0BEA  3189  21C0  318B   	fcall	_get_millis
 10032  0BED  0020               	movlb	0	; select bank0
 10033  0BEE  0823               	movf	?_get_millis+3,w
 10034  0BEF  1D03               	btfss	3,2
 10035  0BF0  2BFB               	goto	l76
 10036  0BF1  0822               	movf	?_get_millis+2,w
 10037  0BF2  1D03               	btfss	3,2
 10038  0BF3  2BFB               	goto	l76
 10039  0BF4  0821               	movf	?_get_millis+1,w
 10040  0BF5  1D03               	btfss	3,2
 10041  0BF6  2BFB               	goto	l76
 10042  0BF7  300B               	movlw	11
 10043  0BF8  0220               	subwf	?_get_millis,w
 10044  0BF9  1C03               	btfss	3,0
 10045  0BFA  2BCB               	goto	l73
 10046  0BFB                     l76:	
 10047                           ;I2C.c: 62: {
 10048                           ;I2C.c: 63: break;
 10049                           
 10050                           
 10051                           ;I2C.c: 64: }
 10052                           ;I2C.c: 65: }
 10053                           ;I2C.c: 66: SSP1CON2bits.ACKDT = 0;
 10054  0BFB  0024               	movlb	4	; select bank4
 10055  0BFC  1296               	bcf	22,5	;volatile
 10056                           
 10057                           ;I2C.c: 67: SSP1CON2bits.ACKEN = 1;
 10058  0BFD  1616               	bsf	22,4	;volatile
 10059  0BFE  0008               	return
 10060  0BFF                     __end_of_I2CAck:	
 10061                           
 10062                           	psect	text56
 10063  08E6                     __ptext56:	
 10064 ;; *************** function _millis *****************
 10065 ;; Defined at:
 10066 ;;		line 11 in file "millis.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;		None
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  ms              4    4[BANK0 ] unsigned long 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  4    0[BANK0 ] unsigned long 
 10073 ;; Registers used:
 10074 ;;		wreg
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;Total ram usage:        8 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; Hardware stack levels required when called:    2
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_I2CAck
 10091 ;;		_I2CWait
 10092 ;;		_I2CAck_2
 10093 ;;		_I2CWait_2
 10094 ;;		_I2CNak
 10095 ;;		_I2CNak_2
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _millis
 10101  08E6                     _millis:	
 10102                           
 10103                           ;millis.c: 13: millis_t ms;
 10104                           ;millis.c: 14: ms = timer0_millis;
 10105                           
 10106                           ;incstack = 0
 10107                           ; Regs used in _millis: [wreg]
 10108  08E6  0021               	movlb	1	; select bank1
 10109  08E7  0834               	movf	(_timer0_millis+3)^(0+128),w	;volatile
 10110  08E8  0020               	movlb	0	; select bank0
 10111  08E9  00A7               	movwf	millis@ms+3
 10112  08EA  0021               	movlb	1	; select bank1
 10113  08EB  0833               	movf	(_timer0_millis+2)^(0+128),w	;volatile
 10114  08EC  0020               	movlb	0	; select bank0
 10115  08ED  00A6               	movwf	millis@ms+2
 10116  08EE  0021               	movlb	1	; select bank1
 10117  08EF  0832               	movf	(_timer0_millis+1)^(0+128),w	;volatile
 10118  08F0  0020               	movlb	0	; select bank0
 10119  08F1  00A5               	movwf	millis@ms+1
 10120  08F2  0021               	movlb	1	; select bank1
 10121  08F3  0831               	movf	_timer0_millis^(0+128),w	;volatile
 10122  08F4  0020               	movlb	0	; select bank0
 10123  08F5  00A4               	movwf	millis@ms
 10124                           
 10125                           ;millis.c: 15: return ms;
 10126  08F6  0827               	movf	millis@ms+3,w
 10127  08F7  00A3               	movwf	?_millis+3
 10128  08F8  0826               	movf	millis@ms+2,w
 10129  08F9  00A2               	movwf	?_millis+2
 10130  08FA  0825               	movf	millis@ms+1,w
 10131  08FB  00A1               	movwf	?_millis+1
 10132  08FC  0824               	movf	millis@ms,w
 10133  08FD  00A0               	movwf	?_millis
 10134  08FE  0008               	return
 10135  08FF                     __end_of_millis:	
 10136                           
 10137                           	psect	text57
 10138  080C                     __ptext57:	
 10139 ;; *************** function _init_millis *****************
 10140 ;; Defined at:
 10141 ;;		line 6 in file "millis.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;		None
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;		None
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      void 
 10148 ;; Registers used:
 10149 ;;		wreg
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10159 ;;Total ram usage:        0 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; Hardware stack levels required when called:    2
 10162 ;; This function calls:
 10163 ;;		Nothing
 10164 ;; This function is called by:
 10165 ;;		_I2CAck
 10166 ;;		_I2CWait
 10167 ;;		_I2CAck_2
 10168 ;;		_I2CWait_2
 10169 ;;		_I2CNak
 10170 ;;		_I2CNak_2
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           
 10175                           ;psect for function _init_millis
 10176  080C                     _init_millis:	
 10177                           
 10178                           ;millis.c: 8: timer0_millis = 0;
 10179                           
 10180                           ;incstack = 0
 10181                           ; Regs used in _init_millis: [wreg]
 10182  080C  3000               	movlw	0
 10183  080D  0021               	movlb	1	; select bank1
 10184  080E  00B4               	movwf	(_timer0_millis+3)^(0+128)	;volatile
 10185  080F  3000               	movlw	0
 10186  0810  00B3               	movwf	(_timer0_millis+2)^(0+128)	;volatile
 10187  0811  3000               	movlw	0
 10188  0812  00B2               	movwf	(_timer0_millis+1)^(0+128)	;volatile
 10189  0813  3000               	movlw	0
 10190  0814  00B1               	movwf	_timer0_millis^(0+128)	;volatile
 10191  0815  0008               	return
 10192  0816                     __end_of_init_millis:	
 10193                           
 10194                           	psect	text58
 10195  09C0                     __ptext58:	
 10196 ;; *************** function _get_millis *****************
 10197 ;; Defined at:
 10198 ;;		line 18 in file "millis.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  now             4    0[BANK0 ] unsigned long 
 10201 ;;  prev_now        4    4[BANK0 ] unsigned long 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;		None
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  4    0[BANK0 ] unsigned long 
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, status,0
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10213 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;Total ram usage:       16 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:    2
 10220 ;; This function calls:
 10221 ;;		Nothing
 10222 ;; This function is called by:
 10223 ;;		_I2CAck
 10224 ;;		_I2CWait
 10225 ;;		_I2CAck_2
 10226 ;;		_I2CWait_2
 10227 ;;		_I2CNak
 10228 ;;		_I2CNak_2
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _get_millis
 10234  09C0                     _get_millis:	
 10235                           
 10236                           ;millis.c: 20: return (now - prev_now);
 10237                           
 10238                           ;incstack = 0
 10239                           ; Regs used in _get_millis: [wreg+status,2+status,0]
 10240  09C0  0020               	movlb	0	; select bank0
 10241  09C1  0820               	movf	get_millis@now,w
 10242  09C2  00A8               	movwf	??_get_millis
 10243  09C3  0821               	movf	get_millis@now+1,w
 10244  09C4  00A9               	movwf	??_get_millis+1
 10245  09C5  0822               	movf	get_millis@now+2,w
 10246  09C6  00AA               	movwf	??_get_millis+2
 10247  09C7  0823               	movf	get_millis@now+3,w
 10248  09C8  00AB               	movwf	??_get_millis+3
 10249  09C9  0924               	comf	get_millis@prev_now,w
 10250  09CA  00AC               	movwf	??_get_millis+4
 10251  09CB  0925               	comf	get_millis@prev_now+1,w
 10252  09CC  00AD               	movwf	??_get_millis+5
 10253  09CD  0926               	comf	get_millis@prev_now+2,w
 10254  09CE  00AE               	movwf	??_get_millis+6
 10255  09CF  0927               	comf	get_millis@prev_now+3,w
 10256  09D0  00AF               	movwf	??_get_millis+7
 10257  09D1  0AAC               	incf	??_get_millis+4,f
 10258  09D2  1903               	skipnz
 10259  09D3  0AAD               	incf	??_get_millis+5,f
 10260  09D4  1903               	skipnz
 10261  09D5  0AAE               	incf	??_get_millis+6,f
 10262  09D6  1903               	skipnz
 10263  09D7  0AAF               	incf	??_get_millis+7,f
 10264  09D8  082C               	movf	??_get_millis+4,w
 10265  09D9  07A8               	addwf	??_get_millis,f
 10266  09DA  082D               	movf	??_get_millis+5,w
 10267  09DB  3DA9               	addwfc	??_get_millis+1,f
 10268  09DC  082E               	movf	??_get_millis+6,w
 10269  09DD  3DAA               	addwfc	??_get_millis+2,f
 10270  09DE  082F               	movf	??_get_millis+7,w
 10271  09DF  3DAB               	addwfc	??_get_millis+3,f
 10272  09E0  082B               	movf	??_get_millis+3,w
 10273  09E1  00A3               	movwf	?_get_millis+3
 10274  09E2  082A               	movf	??_get_millis+2,w
 10275  09E3  00A2               	movwf	?_get_millis+2
 10276  09E4  0829               	movf	??_get_millis+1,w
 10277  09E5  00A1               	movwf	?_get_millis+1
 10278  09E6  0828               	movf	??_get_millis,w
 10279  09E7  00A0               	movwf	?_get_millis
 10280  09E8  0008               	return
 10281  09E9                     __end_of_get_millis:	
 10282                           
 10283                           	psect	text59
 10284  0B82                     __ptext59:	
 10285 ;; *************** function _I2CInit_2 *****************
 10286 ;; Defined at:
 10287 ;;		line 122 in file "I2C.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  freq            2   21[BANK0 ] unsigned int 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;		None
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0, pclath, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;Total ram usage:        8 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:    3
 10308 ;; This function calls:
 10309 ;;		___aldiv
 10310 ;;		___wmul
 10311 ;; This function is called by:
 10312 ;;		_apInit
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           
 10317                           ;psect for function _I2CInit_2
 10318  0B82                     _I2CInit_2:	
 10319                           
 10320                           ;I2C.c: 125: SSP2STATbits.SMP = 1;
 10321                           
 10322                           ;incstack = 0
 10323                           ; Regs used in _I2CInit_2: [wreg+status,2+status,0+pclath+cstack]
 10324  0B82  0024               	movlb	4	; select bank4
 10325  0B83  179C               	bsf	28,7	;volatile
 10326                           
 10327                           ;I2C.c: 126: SSP2STATbits.CKE = 1;
 10328  0B84  171C               	bsf	28,6	;volatile
 10329                           
 10330                           ;I2C.c: 128: SSP2CON1bits.SSPEN = 1;
 10331  0B85  169D               	bsf	29,5	;volatile
 10332                           
 10333                           ;I2C.c: 129: SSP2CON1bits.SSPM3 = 1;
 10334  0B86  159D               	bsf	29,3	;volatile
 10335                           
 10336                           ;I2C.c: 130: SSP2CON1bits.SSPM2 = 0;
 10337  0B87  111D               	bcf	29,2	;volatile
 10338                           
 10339                           ;I2C.c: 131: SSP2CON1bits.SSPM1 = 0;
 10340  0B88  109D               	bcf	29,1	;volatile
 10341                           
 10342                           ;I2C.c: 132: SSP2CON1bits.SSPM0 = 0;
 10343  0B89  101D               	bcf	29,0	;volatile
 10344                           
 10345                           ;I2C.c: 134: SSP2CON2 = 0;
 10346  0B8A  019E               	clrf	30	;volatile
 10347                           
 10348                           ;I2C.c: 135: SSP2ADD = (4000000/(4*freq*1000))-1;
 10349  0B8B  30E8               	movlw	232
 10350  0B8C  0020               	movlb	0	; select bank0
 10351  0B8D  00A2               	movwf	___wmul@multiplicand
 10352  0B8E  3003               	movlw	3
 10353  0B8F  00A3               	movwf	___wmul@multiplicand+1
 10354  0B90  0836               	movf	I2CInit_2@freq+1,w
 10355  0B91  00B8               	movwf	??_I2CInit_2+1
 10356  0B92  0835               	movf	I2CInit_2@freq,w
 10357  0B93  00B7               	movwf	??_I2CInit_2
 10358  0B94  35B7               	lslf	??_I2CInit_2,f
 10359  0B95  0DB8               	rlf	??_I2CInit_2+1,f
 10360  0B96  35B7               	lslf	??_I2CInit_2,f
 10361  0B97  0DB8               	rlf	??_I2CInit_2+1,f
 10362  0B98  0837               	movf	??_I2CInit_2,w
 10363  0B99  00A0               	movwf	___wmul@multiplier
 10364  0B9A  0838               	movf	??_I2CInit_2+1,w
 10365  0B9B  00A1               	movwf	___wmul@multiplier+1
 10366  0B9C  3188  20FF  318B   	fcall	___wmul
 10367  0B9F  0020               	movlb	0	; select bank0
 10368  0BA0  0820               	movf	?___wmul,w
 10369  0BA1  00B9               	movwf	??_I2CInit_2+2
 10370  0BA2  0821               	movf	?___wmul+1,w
 10371  0BA3  00BA               	movwf	??_I2CInit_2+3
 10372  0BA4  01BB               	clrf	??_I2CInit_2+4
 10373  0BA5  01BC               	clrf	??_I2CInit_2+5
 10374  0BA6  083C               	movf	??_I2CInit_2+5,w
 10375  0BA7  00A9               	movwf	___aldiv@divisor+3
 10376  0BA8  083B               	movf	??_I2CInit_2+4,w
 10377  0BA9  00A8               	movwf	___aldiv@divisor+2
 10378  0BAA  083A               	movf	??_I2CInit_2+3,w
 10379  0BAB  00A7               	movwf	___aldiv@divisor+1
 10380  0BAC  0839               	movf	??_I2CInit_2+2,w
 10381  0BAD  00A6               	movwf	___aldiv@divisor
 10382  0BAE  3000               	movlw	0
 10383  0BAF  00AD               	movwf	___aldiv@dividend+3
 10384  0BB0  303D               	movlw	61
 10385  0BB1  00AC               	movwf	___aldiv@dividend+2
 10386  0BB2  3009               	movlw	9
 10387  0BB3  00AB               	movwf	___aldiv@dividend+1
 10388  0BB4  3000               	movlw	0
 10389  0BB5  00AA               	movwf	___aldiv@dividend
 10390  0BB6  318E  265D         	fcall	___aldiv
 10391  0BB8  0020               	movlb	0	; select bank0
 10392  0BB9  0826               	movf	?___aldiv,w
 10393  0BBA  3EFF               	addlw	255
 10394  0BBB  0024               	movlb	4	; select bank4
 10395  0BBC  009A               	movwf	26	;volatile
 10396                           
 10397                           ;I2C.c: 136: SSP2STAT = 0;
 10398  0BBD  019C               	clrf	28	;volatile
 10399  0BBE  0008               	return
 10400  0BBF                     __end_of_I2CInit_2:	
 10401                           
 10402                           	psect	text60
 10403  0B45                     __ptext60:	
 10404 ;; *************** function _I2CInit *****************
 10405 ;; Defined at:
 10406 ;;		line 14 in file "I2C.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  freq            2   21[BANK0 ] unsigned int 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      void 
 10413 ;; Registers used:
 10414 ;;		wreg, status,2, status,0, pclath, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;Total ram usage:        8 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    3
 10427 ;; This function calls:
 10428 ;;		___aldiv
 10429 ;;		___wmul
 10430 ;; This function is called by:
 10431 ;;		_apInit
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           
 10436                           ;psect for function _I2CInit
 10437  0B45                     _I2CInit:	
 10438                           
 10439                           ;I2C.c: 17: SSP1STATbits.SMP = 1;
 10440                           
 10441                           ;incstack = 0
 10442                           ; Regs used in _I2CInit: [wreg+status,2+status,0+pclath+cstack]
 10443  0B45  0024               	movlb	4	; select bank4
 10444  0B46  1794               	bsf	20,7	;volatile
 10445                           
 10446                           ;I2C.c: 18: SSP1STATbits.CKE = 1;
 10447  0B47  1714               	bsf	20,6	;volatile
 10448                           
 10449                           ;I2C.c: 20: SSP1CON1bits.SSPEN = 1;
 10450  0B48  1695               	bsf	21,5	;volatile
 10451                           
 10452                           ;I2C.c: 21: SSP1CON1bits.SSPM3 = 1;
 10453  0B49  1595               	bsf	21,3	;volatile
 10454                           
 10455                           ;I2C.c: 22: SSP1CON1bits.SSPM2 = 0;
 10456  0B4A  1115               	bcf	21,2	;volatile
 10457                           
 10458                           ;I2C.c: 23: SSP1CON1bits.SSPM1 = 0;
 10459  0B4B  1095               	bcf	21,1	;volatile
 10460                           
 10461                           ;I2C.c: 24: SSP1CON1bits.SSPM0 = 0;
 10462  0B4C  1015               	bcf	21,0	;volatile
 10463                           
 10464                           ;I2C.c: 26: SSP1CON2 = 0;
 10465  0B4D  0196               	clrf	22	;volatile
 10466                           
 10467                           ;I2C.c: 27: SSP1ADD = (4000000/(4*freq*1000))-1;
 10468  0B4E  30E8               	movlw	232
 10469  0B4F  0020               	movlb	0	; select bank0
 10470  0B50  00A2               	movwf	___wmul@multiplicand
 10471  0B51  3003               	movlw	3
 10472  0B52  00A3               	movwf	___wmul@multiplicand+1
 10473  0B53  0836               	movf	I2CInit@freq+1,w
 10474  0B54  00B8               	movwf	??_I2CInit+1
 10475  0B55  0835               	movf	I2CInit@freq,w
 10476  0B56  00B7               	movwf	??_I2CInit
 10477  0B57  35B7               	lslf	??_I2CInit,f
 10478  0B58  0DB8               	rlf	??_I2CInit+1,f
 10479  0B59  35B7               	lslf	??_I2CInit,f
 10480  0B5A  0DB8               	rlf	??_I2CInit+1,f
 10481  0B5B  0837               	movf	??_I2CInit,w
 10482  0B5C  00A0               	movwf	___wmul@multiplier
 10483  0B5D  0838               	movf	??_I2CInit+1,w
 10484  0B5E  00A1               	movwf	___wmul@multiplier+1
 10485  0B5F  3188  20FF  318B   	fcall	___wmul
 10486  0B62  0020               	movlb	0	; select bank0
 10487  0B63  0820               	movf	?___wmul,w
 10488  0B64  00B9               	movwf	??_I2CInit+2
 10489  0B65  0821               	movf	?___wmul+1,w
 10490  0B66  00BA               	movwf	??_I2CInit+3
 10491  0B67  01BB               	clrf	??_I2CInit+4
 10492  0B68  01BC               	clrf	??_I2CInit+5
 10493  0B69  083C               	movf	??_I2CInit+5,w
 10494  0B6A  00A9               	movwf	___aldiv@divisor+3
 10495  0B6B  083B               	movf	??_I2CInit+4,w
 10496  0B6C  00A8               	movwf	___aldiv@divisor+2
 10497  0B6D  083A               	movf	??_I2CInit+3,w
 10498  0B6E  00A7               	movwf	___aldiv@divisor+1
 10499  0B6F  0839               	movf	??_I2CInit+2,w
 10500  0B70  00A6               	movwf	___aldiv@divisor
 10501  0B71  3000               	movlw	0
 10502  0B72  00AD               	movwf	___aldiv@dividend+3
 10503  0B73  303D               	movlw	61
 10504  0B74  00AC               	movwf	___aldiv@dividend+2
 10505  0B75  3009               	movlw	9
 10506  0B76  00AB               	movwf	___aldiv@dividend+1
 10507  0B77  3000               	movlw	0
 10508  0B78  00AA               	movwf	___aldiv@dividend
 10509  0B79  318E  265D         	fcall	___aldiv
 10510  0B7B  0020               	movlb	0	; select bank0
 10511  0B7C  0826               	movf	?___aldiv,w
 10512  0B7D  3EFF               	addlw	255
 10513  0B7E  0024               	movlb	4	; select bank4
 10514  0B7F  0092               	movwf	18	;volatile
 10515                           
 10516                           ;I2C.c: 28: SSP1STAT = 0;
 10517  0B80  0194               	clrf	20	;volatile
 10518  0B81  0008               	return
 10519  0B82                     __end_of_I2CInit:	
 10520                           
 10521                           	psect	text61
 10522  08FF                     __ptext61:	
 10523 ;; *************** function ___wmul *****************
 10524 ;; Defined at:
 10525 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 10526 ;; Parameters:    Size  Location     Type
 10527 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10528 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;  product         2    4[BANK0 ] unsigned int 
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  2    0[BANK0 ] unsigned int 
 10533 ;; Registers used:
 10534 ;;		wreg, status,2, status,0
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10540 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10543 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10544 ;;Total ram usage:        6 bytes
 10545 ;; Hardware stack levels used:    1
 10546 ;; Hardware stack levels required when called:    2
 10547 ;; This function calls:
 10548 ;;		Nothing
 10549 ;; This function is called by:
 10550 ;;		_I2CInit
 10551 ;;		_I2CInit_2
 10552 ;;		_disp_ma_result
 10553 ;;		_disp_kv
 10554 ;;		_disp_ADC
 10555 ;;		_disp_ma
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           
 10560                           ;psect for function ___wmul
 10561  08FF                     ___wmul:	
 10562                           
 10563                           ;incstack = 0
 10564                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10565  08FF  0020               	movlb	0	; select bank0
 10566  0900  01A4               	clrf	___wmul@product
 10567  0901  01A5               	clrf	___wmul@product+1
 10568  0902                     l2418:	
 10569  0902  1C20               	btfss	___wmul@multiplier,0
 10570  0903  2908               	goto	l586
 10571  0904  0822               	movf	___wmul@multiplicand,w
 10572  0905  07A4               	addwf	___wmul@product,f
 10573  0906  0823               	movf	___wmul@multiplicand+1,w
 10574  0907  3DA5               	addwfc	___wmul@product+1,f
 10575  0908                     l586:	
 10576  0908  3001               	movlw	1
 10577  0909                     u2275:	
 10578  0909  35A2               	lslf	___wmul@multiplicand,f
 10579  090A  0DA3               	rlf	___wmul@multiplicand+1,f
 10580  090B  0B89               	decfsz	9,f
 10581  090C  2909               	goto	u2275
 10582  090D  3001               	movlw	1
 10583  090E                     u2285:	
 10584  090E  36A1               	lsrf	___wmul@multiplier+1,f
 10585  090F  0CA0               	rrf	___wmul@multiplier,f
 10586  0910  0B89               	decfsz	9,f
 10587  0911  290E               	goto	u2285
 10588  0912  0820               	movf	___wmul@multiplier,w
 10589  0913  0421               	iorwf	___wmul@multiplier+1,w
 10590  0914  1D03               	btfss	3,2
 10591  0915  2902               	goto	l2418
 10592  0916  0825               	movf	___wmul@product+1,w
 10593  0917  00A1               	movwf	?___wmul+1
 10594  0918  0824               	movf	___wmul@product,w
 10595  0919  00A0               	movwf	?___wmul
 10596  091A  0008               	return
 10597  091B                     __end_of___wmul:	
 10598                           
 10599                           	psect	text62
 10600  0E5D                     __ptext62:	
 10601 ;; *************** function ___aldiv *****************
 10602 ;; Defined at:
 10603 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  divisor         4    6[BANK0 ] long 
 10606 ;;  dividend        4   10[BANK0 ] long 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  quotient        4   17[BANK0 ] long 
 10609 ;;  sign            1   16[BANK0 ] unsigned char 
 10610 ;;  counter         1   15[BANK0 ] unsigned char 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  4    6[BANK0 ] long 
 10613 ;; Registers used:
 10614 ;;		wreg, status,2, status,0
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10620 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;Total ram usage:       15 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:    2
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_I2CInit
 10631 ;;		_I2CInit_2
 10632 ;;		_pwmInit_ccp2
 10633 ;;		_pwmInit_ccp3
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           
 10638                           ;psect for function ___aldiv
 10639  0E5D                     ___aldiv:	
 10640                           
 10641                           ;incstack = 0
 10642                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10643  0E5D  0020               	movlb	0	; select bank0
 10644  0E5E  01B0               	clrf	___aldiv@sign
 10645  0E5F  1FA9               	btfss	___aldiv@divisor+3,7
 10646  0E60  2E6E               	goto	l641
 10647  0E61  09A6               	comf	___aldiv@divisor,f
 10648  0E62  09A7               	comf	___aldiv@divisor+1,f
 10649  0E63  09A8               	comf	___aldiv@divisor+2,f
 10650  0E64  09A9               	comf	___aldiv@divisor+3,f
 10651  0E65  0AA6               	incf	___aldiv@divisor,f
 10652  0E66  1903               	skipnz
 10653  0E67  0AA7               	incf	___aldiv@divisor+1,f
 10654  0E68  1903               	skipnz
 10655  0E69  0AA8               	incf	___aldiv@divisor+2,f
 10656  0E6A  1903               	skipnz
 10657  0E6B  0AA9               	incf	___aldiv@divisor+3,f
 10658  0E6C  01B0               	clrf	___aldiv@sign
 10659  0E6D  0AB0               	incf	___aldiv@sign,f
 10660  0E6E                     l641:	
 10661  0E6E  1FAD               	btfss	___aldiv@dividend+3,7
 10662  0E6F  2E7F               	goto	l2070
 10663  0E70  09AA               	comf	___aldiv@dividend,f
 10664  0E71  09AB               	comf	___aldiv@dividend+1,f
 10665  0E72  09AC               	comf	___aldiv@dividend+2,f
 10666  0E73  09AD               	comf	___aldiv@dividend+3,f
 10667  0E74  0AAA               	incf	___aldiv@dividend,f
 10668  0E75  1903               	skipnz
 10669  0E76  0AAB               	incf	___aldiv@dividend+1,f
 10670  0E77  1903               	skipnz
 10671  0E78  0AAC               	incf	___aldiv@dividend+2,f
 10672  0E79  1903               	skipnz
 10673  0E7A  0AAD               	incf	___aldiv@dividend+3,f
 10674  0E7B  3001               	movlw	1
 10675  0E7C  00AE               	movwf	??___aldiv
 10676  0E7D  082E               	movf	??___aldiv,w
 10677  0E7E  06B0               	xorwf	___aldiv@sign,f
 10678  0E7F                     l2070:	
 10679  0E7F  3000               	movlw	0
 10680  0E80  00B4               	movwf	___aldiv@quotient+3
 10681  0E81  3000               	movlw	0
 10682  0E82  00B3               	movwf	___aldiv@quotient+2
 10683  0E83  3000               	movlw	0
 10684  0E84  00B2               	movwf	___aldiv@quotient+1
 10685  0E85  3000               	movlw	0
 10686  0E86  00B1               	movwf	___aldiv@quotient
 10687  0E87  0829               	movf	___aldiv@divisor+3,w
 10688  0E88  0428               	iorwf	___aldiv@divisor+2,w
 10689  0E89  0427               	iorwf	___aldiv@divisor+1,w
 10690  0E8A  0426               	iorwf	___aldiv@divisor,w
 10691  0E8B  1903               	skipnz
 10692  0E8C  2EC8               	goto	l2092
 10693  0E8D  01AF               	clrf	___aldiv@counter
 10694  0E8E  0AAF               	incf	___aldiv@counter,f
 10695  0E8F                     l2078:	
 10696  0E8F  1BA9               	btfsc	___aldiv@divisor+3,7
 10697  0E90  2E9D               	goto	l2080
 10698  0E91  3001               	movlw	1
 10699  0E92                     u1755:	
 10700  0E92  35A6               	lslf	___aldiv@divisor,f
 10701  0E93  0DA7               	rlf	___aldiv@divisor+1,f
 10702  0E94  0DA8               	rlf	___aldiv@divisor+2,f
 10703  0E95  0DA9               	rlf	___aldiv@divisor+3,f
 10704  0E96  0B89               	decfsz	9,f
 10705  0E97  2E92               	goto	u1755
 10706  0E98  3001               	movlw	1
 10707  0E99  00AE               	movwf	??___aldiv
 10708  0E9A  082E               	movf	??___aldiv,w
 10709  0E9B  07AF               	addwf	___aldiv@counter,f
 10710  0E9C  2E8F               	goto	l2078
 10711  0E9D                     l2080:	
 10712  0E9D  3001               	movlw	1
 10713  0E9E                     u1775:	
 10714  0E9E  35B1               	lslf	___aldiv@quotient,f
 10715  0E9F  0DB2               	rlf	___aldiv@quotient+1,f
 10716  0EA0  0DB3               	rlf	___aldiv@quotient+2,f
 10717  0EA1  0DB4               	rlf	___aldiv@quotient+3,f
 10718  0EA2  0B89               	decfsz	9,f
 10719  0EA3  2E9E               	goto	u1775
 10720  0EA4  0829               	movf	___aldiv@divisor+3,w
 10721  0EA5  022D               	subwf	___aldiv@dividend+3,w
 10722  0EA6  1D03               	skipz
 10723  0EA7  2EB2               	goto	u1785
 10724  0EA8  0828               	movf	___aldiv@divisor+2,w
 10725  0EA9  022C               	subwf	___aldiv@dividend+2,w
 10726  0EAA  1D03               	skipz
 10727  0EAB  2EB2               	goto	u1785
 10728  0EAC  0827               	movf	___aldiv@divisor+1,w
 10729  0EAD  022B               	subwf	___aldiv@dividend+1,w
 10730  0EAE  1D03               	skipz
 10731  0EAF  2EB2               	goto	u1785
 10732  0EB0  0826               	movf	___aldiv@divisor,w
 10733  0EB1  022A               	subwf	___aldiv@dividend,w
 10734  0EB2                     u1785:	
 10735  0EB2  1C03               	skipc
 10736  0EB3  2EBD               	goto	l2088
 10737  0EB4  0826               	movf	___aldiv@divisor,w
 10738  0EB5  02AA               	subwf	___aldiv@dividend,f
 10739  0EB6  0827               	movf	___aldiv@divisor+1,w
 10740  0EB7  3BAB               	subwfb	___aldiv@dividend+1,f
 10741  0EB8  0828               	movf	___aldiv@divisor+2,w
 10742  0EB9  3BAC               	subwfb	___aldiv@dividend+2,f
 10743  0EBA  0829               	movf	___aldiv@divisor+3,w
 10744  0EBB  3BAD               	subwfb	___aldiv@dividend+3,f
 10745  0EBC  1431               	bsf	___aldiv@quotient,0
 10746  0EBD                     l2088:	
 10747  0EBD  3001               	movlw	1
 10748  0EBE                     u1795:	
 10749  0EBE  36A9               	lsrf	___aldiv@divisor+3,f
 10750  0EBF  0CA8               	rrf	___aldiv@divisor+2,f
 10751  0EC0  0CA7               	rrf	___aldiv@divisor+1,f
 10752  0EC1  0CA6               	rrf	___aldiv@divisor,f
 10753  0EC2  0B89               	decfsz	9,f
 10754  0EC3  2EBE               	goto	u1795
 10755  0EC4  3001               	movlw	1
 10756  0EC5  02AF               	subwf	___aldiv@counter,f
 10757  0EC6  1D03               	btfss	3,2
 10758  0EC7  2E9D               	goto	l2080
 10759  0EC8                     l2092:	
 10760  0EC8  0830               	movf	___aldiv@sign,w
 10761  0EC9  1903               	btfsc	3,2
 10762  0ECA  2ED6               	goto	l2096
 10763  0ECB  09B1               	comf	___aldiv@quotient,f
 10764  0ECC  09B2               	comf	___aldiv@quotient+1,f
 10765  0ECD  09B3               	comf	___aldiv@quotient+2,f
 10766  0ECE  09B4               	comf	___aldiv@quotient+3,f
 10767  0ECF  0AB1               	incf	___aldiv@quotient,f
 10768  0ED0  1903               	skipnz
 10769  0ED1  0AB2               	incf	___aldiv@quotient+1,f
 10770  0ED2  1903               	skipnz
 10771  0ED3  0AB3               	incf	___aldiv@quotient+2,f
 10772  0ED4  1903               	skipnz
 10773  0ED5  0AB4               	incf	___aldiv@quotient+3,f
 10774  0ED6                     l2096:	
 10775  0ED6  0834               	movf	___aldiv@quotient+3,w
 10776  0ED7  00A9               	movwf	?___aldiv+3
 10777  0ED8  0833               	movf	___aldiv@quotient+2,w
 10778  0ED9  00A8               	movwf	?___aldiv+2
 10779  0EDA  0832               	movf	___aldiv@quotient+1,w
 10780  0EDB  00A7               	movwf	?___aldiv+1
 10781  0EDC  0831               	movf	___aldiv@quotient,w
 10782  0EDD  00A6               	movwf	?___aldiv
 10783  0EDE  0008               	return
 10784  0EDF                     __end_of___aldiv:	
 10785                           
 10786                           	psect	intentry
 10787  0004                     __pintentry:	
 10788 ;; *************** function _isr *****************
 10789 ;; Defined at:
 10790 ;;		line 386 in file "ap.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  1    wreg      void 
 10797 ;; Registers used:
 10798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;Total ram usage:        2 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    1
 10811 ;; This function calls:
 10812 ;;		_timerInterruptProc
 10813 ;; This function is called by:
 10814 ;;		Interrupt level 1
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818  0004                     _isr:	
 10819                           
 10820                           ;incstack = 0
 10821  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10822                           
 10823                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10824  0005  3180               	pagesel	$
 10825  0006  0020               	movlb	0	; select bank0
 10826  0007  087F               	movf	127,w
 10827  0008  00FC               	movwf	??_isr+1
 10828                           
 10829                           ;ap.c: 389: if(PIR4bits.RC2IF)
 10830  0009  0814               	movf	20,w	;volatile
 10831                           
 10832                           ;ap.c: 393: }
 10833                           ;ap.c: 395: if (INTCONbits.TMR0IF)
 10834                           
 10835                           ;ap.c: 390: {
 10836  000A  1D0B               	btfss	11,2	;volatile
 10837  000B  281F               	goto	i1l371
 10838                           
 10839                           ;ap.c: 396: {
 10840                           ;ap.c: 397: INTCONbits.TMR0IF = 0;
 10841  000C  110B               	bcf	11,2	;volatile
 10842                           
 10843                           ;ap.c: 398: TMR0 = 131;
 10844  000D  3083               	movlw	131
 10845  000E  0095               	movwf	21	;volatile
 10846                           
 10847                           ;ap.c: 399: timer0_millis ++;
 10848  000F  3001               	movlw	1
 10849  0010  0021               	movlb	1	; select bank1
 10850  0011  07B1               	addwf	_timer0_millis^(0+128),f	;volatile
 10851  0012  3000               	movlw	0
 10852  0013  3DB2               	addwfc	(_timer0_millis+1)^(0+128),f	;volatile
 10853  0014  3000               	movlw	0
 10854  0015  3DB3               	addwfc	(_timer0_millis+2)^(0+128),f	;volatile
 10855  0016  3000               	movlw	0
 10856  0017  3DB4               	addwfc	(_timer0_millis+3)^(0+128),f	;volatile
 10857                           
 10858                           ;ap.c: 401: timerInterruptProc(Timer, 6);
 10859  0018  3006               	movlw	6
 10860  0019  00FB               	movwf	??_isr
 10861  001A  087B               	movf	??_isr,w
 10862  001B  00F0               	movwf	timerInterruptProc@ch_count
 10863  001C  30B5               	movlw	(low (_Timer| 0))& (0+255)
 10864  001D  318D  2561         	fcall	_timerInterruptProc
 10865  001F                     i1l371:	
 10866  001F  087C               	movf	??_isr+1,w
 10867  0020  0020               	movlb	0	; select bank0
 10868  0021  00FF               	movwf	127
 10869  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10870  0023  0009               	retfie
 10871  0024                     __end_of_isr:	
 10872                           
 10873                           	psect	text64
 10874  0D61                     __ptext64:	
 10875 ;; *************** function _timerInterruptProc *****************
 10876 ;; Defined at:
 10877 ;;		line 41 in file "timer.c"
 10878 ;; Parameters:    Size  Location     Type
 10879 ;;  time            1    wreg     PTR struct .
 10880 ;;		 -> Timer(48), 
 10881 ;;  ch_count        1    0[COMMON] unsigned char 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  time            1    9[COMMON] PTR struct .
 10884 ;;		 -> Timer(48), 
 10885 ;;  i               1   10[COMMON] unsigned char 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10895 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;Total ram usage:       11 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_isr
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           
 10909                           ;psect for function _timerInterruptProc
 10910  0D61                     _timerInterruptProc:	
 10911                           
 10912                           ;incstack = 0
 10913                           ; Regs used in _timerInterruptProc: [wreg+fsr1l+fsr1h+status,2+status,0]
 10914                           ;timerInterruptProc@time stored from wreg
 10915  0D61  00F9               	movwf	timerInterruptProc@time
 10916                           
 10917                           ;timer.c: 43: for(uint8_t i=0; i < ch_count; i++)
 10918  0D62  01FA               	clrf	timerInterruptProc@i
 10919  0D63                     i1l2916:	
 10920  0D63  0870               	movf	timerInterruptProc@ch_count,w
 10921  0D64  027A               	subwf	timerInterruptProc@i,w
 10922  0D65  1803               	btfsc	3,0
 10923  0D66  0008               	return
 10924                           
 10925                           ;timer.c: 44: {
 10926                           ;timer.c: 45: if((time+i)->start)
 10927  0D67  087A               	movf	timerInterruptProc@i,w
 10928  0D68  00F1               	movwf	??_timerInterruptProc
 10929  0D69  3002               	movlw	2
 10930  0D6A                     u293_25:	
 10931  0D6A  35F1               	lslf	??_timerInterruptProc,f
 10932  0D6B  3EFF               	addlw	-1
 10933  0D6C  1D03               	skipz
 10934  0D6D  2D6A               	goto	u293_25
 10935  0D6E  3571               	lslf	??_timerInterruptProc,w
 10936  0D6F  0779               	addwf	timerInterruptProc@time,w
 10937  0D70  00F2               	movwf	??_timerInterruptProc+1
 10938  0D71  0872               	movf	??_timerInterruptProc+1,w
 10939  0D72  0086               	movwf	6
 10940  0D73  0187               	clrf	7
 10941  0D74  0801               	movf	1,w
 10942  0D75  1903               	btfsc	3,2
 10943  0D76  2DD7               	goto	i1l2914
 10944                           
 10945                           ;timer.c: 46: {
 10946                           ;timer.c: 47: if((time+i)->interval < (time+i)->set)
 10947  0D77  087A               	movf	timerInterruptProc@i,w
 10948  0D78  00F1               	movwf	??_timerInterruptProc
 10949  0D79  3002               	movlw	2
 10950  0D7A                     u295_25:	
 10951  0D7A  35F1               	lslf	??_timerInterruptProc,f
 10952  0D7B  3EFF               	addlw	-1
 10953  0D7C  1D03               	skipz
 10954  0D7D  2D7A               	goto	u295_25
 10955  0D7E  3571               	lslf	??_timerInterruptProc,w
 10956  0D7F  0779               	addwf	timerInterruptProc@time,w
 10957  0D80  00F2               	movwf	??_timerInterruptProc+1
 10958  0D81  0872               	movf	??_timerInterruptProc+1,w
 10959  0D82  3E02               	addlw	2
 10960  0D83  0086               	movwf	6
 10961  0D84  0187               	clrf	7
 10962  0D85  3F40               	moviw [0]fsr1
 10963  0D86  00F3               	movwf	??_timerInterruptProc+2
 10964  0D87  3F41               	moviw [1]fsr1
 10965  0D88  00F4               	movwf	??_timerInterruptProc+3
 10966  0D89  087A               	movf	timerInterruptProc@i,w
 10967  0D8A  00F5               	movwf	??_timerInterruptProc+4
 10968  0D8B  3002               	movlw	2
 10969  0D8C                     u296_25:	
 10970  0D8C  35F5               	lslf	??_timerInterruptProc+4,f
 10971  0D8D  3EFF               	addlw	-1
 10972  0D8E  1D03               	skipz
 10973  0D8F  2D8C               	goto	u296_25
 10974  0D90  3575               	lslf	??_timerInterruptProc+4,w
 10975  0D91  0779               	addwf	timerInterruptProc@time,w
 10976  0D92  00F6               	movwf	??_timerInterruptProc+5
 10977  0D93  0876               	movf	??_timerInterruptProc+5,w
 10978  0D94  3E04               	addlw	4
 10979  0D95  0086               	movwf	6
 10980  0D96  0187               	clrf	7
 10981  0D97  3F40               	moviw [0]fsr1
 10982  0D98  00F7               	movwf	??_timerInterruptProc+6
 10983  0D99  3F41               	moviw [1]fsr1
 10984  0D9A  00F8               	movwf	??_timerInterruptProc+7
 10985  0D9B  0874               	movf	??_timerInterruptProc+3,w
 10986  0D9C  0278               	subwf	??_timerInterruptProc+7,w
 10987  0D9D  1D03               	skipz
 10988  0D9E  2DA1               	goto	u297_25
 10989  0D9F  0873               	movf	??_timerInterruptProc+2,w
 10990  0DA0  0277               	subwf	??_timerInterruptProc+6,w
 10991  0DA1                     u297_25:	
 10992  0DA1  1803               	skipnc
 10993  0DA2  2DB7               	goto	i1l2912
 10994                           
 10995                           ;timer.c: 48: {
 10996                           ;timer.c: 49: ++ (time+i)->interval;
 10997  0DA3  087A               	movf	timerInterruptProc@i,w
 10998  0DA4  00F1               	movwf	??_timerInterruptProc
 10999  0DA5  3002               	movlw	2
 11000  0DA6                     u298_25:	
 11001  0DA6  35F1               	lslf	??_timerInterruptProc,f
 11002  0DA7  3EFF               	addlw	-1
 11003  0DA8  1D03               	skipz
 11004  0DA9  2DA6               	goto	u298_25
 11005  0DAA  3571               	lslf	??_timerInterruptProc,w
 11006  0DAB  0779               	addwf	timerInterruptProc@time,w
 11007  0DAC  00F2               	movwf	??_timerInterruptProc+1
 11008  0DAD  0872               	movf	??_timerInterruptProc+1,w
 11009  0DAE  3E04               	addlw	4
 11010  0DAF  0086               	movwf	6
 11011  0DB0  0187               	clrf	7
 11012  0DB1  3001               	movlw	1
 11013  0DB2  0781               	addwf	1,f
 11014  0DB3  3141               	addfsr 1,1
 11015  0DB4  1803               	skipnc
 11016  0DB5  0A81               	incf	1,f
 11017                           
 11018                           ;timer.c: 50: }
 11019  0DB6  2DD7               	goto	i1l2914
 11020  0DB7                     i1l2912:	
 11021                           
 11022                           ;timer.c: 51: else
 11023                           ;timer.c: 52: {
 11024                           ;timer.c: 53: (time+i)->interval = 0;
 11025  0DB7  087A               	movf	timerInterruptProc@i,w
 11026  0DB8  00F1               	movwf	??_timerInterruptProc
 11027  0DB9  3002               	movlw	2
 11028  0DBA                     u299_25:	
 11029  0DBA  35F1               	lslf	??_timerInterruptProc,f
 11030  0DBB  3EFF               	addlw	-1
 11031  0DBC  1D03               	skipz
 11032  0DBD  2DBA               	goto	u299_25
 11033  0DBE  3571               	lslf	??_timerInterruptProc,w
 11034  0DBF  0779               	addwf	timerInterruptProc@time,w
 11035  0DC0  00F2               	movwf	??_timerInterruptProc+1
 11036  0DC1  0872               	movf	??_timerInterruptProc+1,w
 11037  0DC2  3E04               	addlw	4
 11038  0DC3  0086               	movwf	6
 11039  0DC4  0187               	clrf	7
 11040  0DC5  3000               	movlw	0
 11041  0DC6  3FC0               	movwi [0]fsr1
 11042  0DC7  3FC1               	movwi [1]fsr1
 11043                           
 11044                           ;timer.c: 54: (time+i)->tick = 1;
 11045  0DC8  087A               	movf	timerInterruptProc@i,w
 11046  0DC9  00F1               	movwf	??_timerInterruptProc
 11047  0DCA  3002               	movlw	2
 11048  0DCB                     u300_25:	
 11049  0DCB  35F1               	lslf	??_timerInterruptProc,f
 11050  0DCC  3EFF               	addlw	-1
 11051  0DCD  1D03               	skipz
 11052  0DCE  2DCB               	goto	u300_25
 11053  0DCF  3571               	lslf	??_timerInterruptProc,w
 11054  0DD0  0779               	addwf	timerInterruptProc@time,w
 11055  0DD1  00F2               	movwf	??_timerInterruptProc+1
 11056  0DD2  0A72               	incf	??_timerInterruptProc+1,w
 11057  0DD3  0086               	movwf	6
 11058  0DD4  0187               	clrf	7
 11059  0DD5  0181               	clrf	1
 11060  0DD6  0A81               	incf	1,f
 11061  0DD7                     i1l2914:	
 11062  0DD7  3001               	movlw	1
 11063  0DD8  00F1               	movwf	??_timerInterruptProc
 11064  0DD9  0871               	movf	??_timerInterruptProc,w
 11065  0DDA  07FA               	addwf	timerInterruptProc@i,f
 11066  0DDB  2D63               	goto	i1l2916
 11067  0DDC                     __end_of_timerInterruptProc:	
 11068  007E                     btemp	set	126	;btemp
 11069  007E                     int$flags	set	126
 11070  007E                     wtemp	set	126
 11071  007E                     wtemp0	set	126
 11072  0080                     wtemp1	set	128
 11073  0082                     wtemp2	set	130
 11074  0084                     wtemp3	set	132
 11075  0086                     wtemp4	set	134
 11076  0088                     wtemp5	set	136
 11077  007F                     wtemp6	set	127
 11078  007E                     ttemp	set	126
 11079  007E                     ttemp0	set	126
 11080  0081                     ttemp1	set	129
 11081  0084                     ttemp2	set	132
 11082  0087                     ttemp3	set	135
 11083  007F                     ttemp4	set	127
 11084  007E                     ltemp	set	126
 11085  007E                     ltemp0	set	126
 11086  0082                     ltemp1	set	130
 11087  0086                     ltemp2	set	134
 11088  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     80      80
    BANK1            80      3      72
    BANK2            80      0      18
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Timer.timeProc	PTR FTN()void  size(2) Largest target is 0
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInterruptProc@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInterruptProc@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerTickClear@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerTickClear@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerGetTick@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerGetTick@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerEventStart@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerEventStart@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerProc@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerProc@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    timerInit@func	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    S416$timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInit@time.timeProc	PTR FTN()void  size(2) Largest target is 1
		 -> event_anodeCurrent(), event_rst(), event_display(), event_expose(), 
		 -> event_timer_Button(), 

    timerInit@time	PTR struct . size(1) Largest target is 48
		 -> Timer(BANK1[48]), 

    buttons_setFuncs@btn2	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), 

    buttons_setFuncs@btn1	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Expose(), 

    processButton@button.onPress	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), event_btn_Expose(), 

    processButton@button	PTR struct . size(1) Largest target is 18
		 -> buttons(BANK2[18]), 

    S963$onPress	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), event_btn_Expose(), 

    buttons.onPress	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> event_btn_Stop(), event_btn_Expose(), 

    I2C_DAC_Write@data	PTR int  size(1) Largest target is 2
		 -> apInit@D_temp(BANK0[2]), event_btn_Stop@temp(BANK0[2]), event_btn_Expose@temp(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_timerInterruptProc

Critical Paths under _main in BANK0

    _apMain->_timerProc
    _event_timer_Button->_processButtons
    _processButtons->_processButton
    _processButton->_event_btn_Expose
    _event_btn_Expose->_pwmInit_ccp2
    _event_btn_Expose->_pwmInit_ccp3
    _pwmInit_ccp3->___fttol
    _adcTodac->___fttol
    _event_rst->_timerTickClear
    _event_expose->_timerTickClear
    _event_display->_disp_kv
    _event_display->_disp_ma_result
    _disp_ma_result->___fttol
    _disp_kv->___fttol
    ___lwtoft->___ftpack
    ___lwmod->___lwdiv
    _event_anodeCurrent->_pwmInit_ccp2
    _pwmInit_ccp2->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___awtoft->___ftpack
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    _apInit->_event_btn_Stop
    _event_btn_Stop->_I2C_DAC_Write
    _I2C_DAC_Write->_I2CSend_2
    _I2CStop_2->_I2CWait_2
    _I2CStart_2->_I2CWait_2
    _I2CSend_2->_I2CWait_2
    _I2CWait_2->_get_millis
    _I2CAck_2->_get_millis
    _I2C_AS1115_Write->_I2CSend
    _I2CStop->_I2CWait
    _I2CStart->_I2CWait
    _I2CSend->_I2CWait
    _I2CWait->_get_millis
    _I2CAck->_get_millis
    _I2CInit_2->___aldiv
    _I2CInit->___aldiv
    ___aldiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _event_timer_Button->_processButtons

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  127549
                             _apInit
                             _apMain
 ---------------------------------------------------------------------------------
 (1) _apMain                                               0     0      0  108281
                          _timerProc
 ---------------------------------------------------------------------------------
 (2) _timerProc                                            1     1      0  108281
                                             79 BANK0      1     1      0
                 _event_anodeCurrent *
                      _event_display *
                       _event_expose *
                          _event_rst *
                 _event_timer_Button *
 ---------------------------------------------------------------------------------
 (3) _event_timer_Button                                   0     0      0   39168
                     _processButtons
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _processButtons                                       5     5      0   38250
                                             77 BANK0      2     2      0
                                              0 BANK1      3     3      0
                             ___bmul
                      _processButton
 ---------------------------------------------------------------------------------
 (5) _processButton                                        6     5      1   38017
                                             71 BANK0      6     5      1
                             ___bmul (ARG)
                   _event_btn_Expose *
                     _event_btn_Stop *
 ---------------------------------------------------------------------------------
 (6) _event_btn_Expose                                     4     4      0   32739
                                             67 BANK0      4     4      0
                      _I2C_DAC_Write
                           _adcTodac
                       _pwmInit_ccp2
                       _pwmInit_ccp3
                      _pwmStart_ccp2
                      _pwmStart_ccp3
                    _timerEventStart
 ---------------------------------------------------------------------------------
 (7) _pwmStart_ccp3                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pwmStart_ccp2                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pwmInit_ccp3                                         9     4      5   10759
                                             58 BANK0      9     4      5
                            ___aldiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) _adcTodac                                             5     3      2    6783
                                             58 BANK0      5     3      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     118
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _event_rst                                            0     0      0     918
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (3) _event_expose                                         0     0      0     918
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (3) _event_display                                        2     2      0   47919
                                             66 BANK0      2     2      0
                   _I2C_AS1115_Write
                            _adcRead
                            _disp_kv
                     _disp_ma_result
                    _timerEventStart
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _disp_ma_result                                       8     6      2   20446
                                             58 BANK0      8     6      2
                   _I2C_AS1115_Write
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _disp_kv                                              8     6      2   21077
                                             58 BANK0      8     6      2
                   _I2C_AS1115_Write
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             4     1      3    2451
                                              8 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4    2463
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4    1698
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _adcRead                                              4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _event_anodeCurrent                                   2     2      0   19186
                                             67 BANK0      2     2      0
                            ___ftadd
                             ___ftge
                            ___ftsub
                       _pwmInit_ccp2
                       _timerGetTick
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _timerGetTick                                         1     1      0     172
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _pwmInit_ccp2                                         9     4      5   10887
                                             58 BANK0      9     4      5
                            ___aldiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             14    10      4     764
                                             44 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             16    10      6    3459
                                             28 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftdiv                                             16    10      6    3157
                                             12 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awtoft                                             6     3      3    2328
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    3528
                                             21 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    3333
                                              8 BANK0     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     520
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _apInit                                               3     3      0   19268
                                             33 BANK0      3     3      0
                            _I2CInit
                          _I2CInit_2
                   _I2C_AS1115_Write
                      _I2C_DAC_Write
                            _adcInit
                       _buttons_init
                   _buttons_setFuncs
                     _event_btn_Stop
                           _initPort
                          _initTimer
                    _timerEventStart
                          _timerInit
 ---------------------------------------------------------------------------------
 (2) _timerInit                                            5     1      4     944
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _timerEventStart                                      1     1      0     202
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _event_btn_Stop                                       4     4      0    4854
                                             29 BANK0      4     4      0
                      _I2C_DAC_Write
                       _pwmStop_ccp2
                       _pwmStop_ccp3
                     _timerTickClear
 ---------------------------------------------------------------------------------
 (4) _timerTickClear                                       3     2      1     746
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (7) _pwmStop_ccp3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pwmStop_ccp2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DAC_Write                                        4     3      1    4060
                                             25 BANK0      4     3      1
                           _I2CAck_2
                          _I2CSend_2
                         _I2CStart_2
                          _I2CStop_2
 ---------------------------------------------------------------------------------
 (8) _I2CStop_2                                            0     0      0     881
                          _I2CWait_2
 ---------------------------------------------------------------------------------
 (8) _I2CStart_2                                           0     0      0     881
                          _I2CWait_2
 ---------------------------------------------------------------------------------
 (8) _I2CSend_2                                            1     1      0     903
                                             24 BANK0      1     1      0
                          _I2CWait_2
 ---------------------------------------------------------------------------------
 (9) _I2CWait_2                                            8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (8) _I2CAck_2                                             8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (2) _buttons_setFuncs                                     4     0      4     172
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_AS1115_Write                                     2     1      1    5254
                                             25 BANK0      2     1      1
                             _I2CAck
                            _I2CSend
                           _I2CStart
                            _I2CStop
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _I2CStop                                              0     0      0     881
                            _I2CWait
 ---------------------------------------------------------------------------------
 (6) _I2CStart                                             0     0      0     881
                            _I2CWait
 ---------------------------------------------------------------------------------
 (6) _I2CSend                                              1     1      0     903
                                             24 BANK0      1     1      0
                            _I2CWait
 ---------------------------------------------------------------------------------
 (7) _I2CWait                                              8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (6) _I2CAck                                               8     8      0     881
                                             16 BANK0      8     8      0
                         _get_millis
                        _init_millis
                             _millis
 ---------------------------------------------------------------------------------
 (10) _millis                                              8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (10) _init_millis                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _get_millis                                         16     8      8     812
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _I2CInit_2                                            8     6      2    1834
                                             21 BANK0      8     6      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _I2CInit                                              8     6      2    1834
                                             21 BANK0      8     6      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     936
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             15     7      8     812
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 2     2      0     404
                                             11 COMMON     2     2      0
                 _timerInterruptProc
 ---------------------------------------------------------------------------------
 (12) _timerInterruptProc                                 11    10      1     404
                                              0 COMMON    11    10      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _apInit
     _I2CInit
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _I2CInit_2
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _I2C_AS1115_Write
       _I2CAck
         _get_millis
         _init_millis
         _millis
       _I2CSend
         _I2CWait
           _get_millis
           _init_millis
           _millis
       _I2CStart
         _I2CWait
           _get_millis
           _init_millis
           _millis
       _I2CStop
         _I2CWait
           _get_millis
           _init_millis
           _millis
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
     _I2C_DAC_Write
       _I2CAck_2
         _get_millis
         _init_millis
         _millis
       _I2CSend_2
         _I2CWait_2
           _get_millis
           _init_millis
           _millis
       _I2CStart_2
         _I2CWait_2
           _get_millis
           _init_millis
           _millis
       _I2CStop_2
         _I2CWait_2
           _get_millis
           _init_millis
           _millis
     _adcInit
     _buttons_init
     _buttons_setFuncs
     _event_btn_Stop
       _I2C_DAC_Write
         _I2CAck_2
           _get_millis
           _init_millis
           _millis
         _I2CSend_2
           _I2CWait_2
             _get_millis
             _init_millis
             _millis
         _I2CStart_2
           _I2CWait_2
             _get_millis
             _init_millis
             _millis
         _I2CStop_2
           _I2CWait_2
             _get_millis
             _init_millis
             _millis
       _pwmStop_ccp2
       _pwmStop_ccp3
       _timerTickClear
     _initPort
     _initTimer
     _timerEventStart
     _timerInit
   _apMain
     _timerProc
       _event_anodeCurrent *
         ___ftadd
           ___ftpack
         ___ftge
         ___ftsub
           ___ftadd
             ___ftpack
         _pwmInit_ccp2
           ___aldiv
             ___wmul (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
         _timerGetTick
         _timerTickClear
       _event_display *
         _I2C_AS1115_Write
           _I2CAck
             _get_millis
             _init_millis
             _millis
           _I2CSend
             _I2CWait
               _get_millis
               _init_millis
               _millis
           _I2CStart
             _I2CWait
               _get_millis
               _init_millis
               _millis
           _I2CStop
             _I2CWait
               _get_millis
               _init_millis
               _millis
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         _adcRead
         _disp_kv
           _I2C_AS1115_Write
             _I2CAck
               _get_millis
               _init_millis
               _millis
             _I2CSend
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStart
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStop
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___lwtoft
             ___ftpack
             ___wmul (ARG)
           ___wmul
         _disp_ma_result
           _I2C_AS1115_Write
             _I2CAck
               _get_millis
               _init_millis
               _millis
             _I2CSend
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStart
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             _I2CStop
               _I2CWait
                 _get_millis
                 _init_millis
                 _millis
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___lwtoft
             ___ftpack
             ___wmul (ARG)
           ___wmul
         _timerEventStart
         _timerGetTick
         _timerTickClear
       _event_expose *
         _timerGetTick
         _timerTickClear
       _event_rst *
         _timerGetTick
         _timerTickClear
       _event_timer_Button *
         _processButtons
           ___bmul
           _processButton
             ___bmul (ARG)
             _event_btn_Expose (ARG) *
               _I2C_DAC_Write
                 _I2CAck_2
                   _get_millis
                   _init_millis
                   _millis
                 _I2CSend_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStart_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStop_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
               _adcTodac
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                         ___wmul (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                 ___lwtoft
                   ___ftpack
                   ___wmul (ARG)
               _pwmInit_ccp2
                 ___aldiv
                   ___wmul (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                         ___wmul (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
               _pwmInit_ccp3
                 ___aldiv
                   ___wmul (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                         ___wmul (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
               _pwmStart_ccp2
               _pwmStart_ccp3
               _timerEventStart
             _event_btn_Stop (ARG) *
               _I2C_DAC_Write
                 _I2CAck_2
                   _get_millis
                   _init_millis
                   _millis
                 _I2CSend_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStart_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
                 _I2CStop_2
                   _I2CWait_2
                     _get_millis
                     _init_millis
                     _millis
               _pwmStop_ccp2
               _pwmStop_ccp3
               _timerTickClear
         _timerGetTick
         _timerTickClear

 _isr (ROOT)
   _timerInterruptProc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      12       9       22.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Dec 30 15:55:54 2022

         __size_of_I2CInit_2 003D           __size_of_I2CSend_2 0009           __size_of_I2CWait_2 0042  
             ___bmul@product 0022                  __CFG_CP$OFF 0000           __size_of_I2CStop_2 0005  
                         l73 0BCB                           l76 0BFB          ___wmul@multiplicand 0022  
             ?_pwmStart_ccp2 0070               ?_pwmStart_ccp3 0070      processButtons@isPressed 00E5  
               ___ftadd@exp1 0034                 ___ftadd@exp2 0033          __size_of_I2CStart_2 0005  
               ___ftadd@sign 0032                          l112 0C0B                          l115 0C3B  
                        l414 0E3C                          l175 0A08                          l348 02EF  
                        l357 08D0                          l641 0E6E                          l586 0908  
                        l754 07D4                          l755 07DC                          l747 07C1  
                        l838 0F4C                          l778 020C                          _GIE 005F  
                        _PR2 001B                          _PR4 0416                 __CFG_CPD$OFF 0000  
                        _cmd 00A0              __end_of_I2CInit 0B82                          _isr 0004  
            __end_of_I2CSend 1800              __end_of_I2CWait 0C81              __end_of_I2CStop 17C3  
                        wreg 0009                  disp_kv@data 005A                  disp_kv@temp 005D  
              _I2C_DAC_Write 0AD0                 ___ftdiv@cntr 0036                 ___ftdiv@sign 003B  
                       l2002 0C8D                         l2010 0797                         l2004 0CC0  
                       l2014 079E                         l2024 07C6                         l2016 07A8  
                       l2026 07CE                         l2018 07AD                         l2210 0EF8  
                       l2108 0985                         l2124 0677                         l2070 0E7F  
                       l2118 0661                         l2230 0F36                         l2080 0E9D  
                       l2160 0500                         l2146 06D1                         l2138 06B8  
                       l2242 0F5D                         l2092 0EC8                         l2260 0C4B  
                       l2500 0230                         l2236 0F43                         l2228 0F28  
                       l2078 0E8F                         l2262 0C7E                         l2254 0C50  
                       l2510 024B                         l2190 056D                         l2182 0559  
                       l2166 0516                         l2238 0F4F                         l2414 0E48  
                       l2096 0ED6                         l2088 0EBD                         l2432 0897  
                       l2418 0902                         l2522 0B36                         l2450 0195  
                       l2194 0575                         l2178 0551                         l2460 01AB  
                       l2436 089D                         l2372 0D5E                         l2518 0B20  
                       l2454 019C                         l2622 0117                         l2606 0A7E  
                       l2480 01E2                         l2472 01C5                         l2552 0AC2  
                       l2544 0AA4                         l2616 00ED                         l2720 0329  
                       l2712 02CF                         l2490 01FE                         l2482 01E7  
                       l2546 0AB0                         l2570 0A25                         l2492 0208  
                       l2484 01EB                         l2556 0ACB                         l2716 030C  
                       l2708 02A9                         l2478 01D8                         l2574 0A31  
                       l2638 05F3                         l2496 021E                         l2648 0923  
                       l2568 0A19                         l2680 03B2                         l2578 0A3A  
                       l2684 03DD                         l2688 03E4                         l1996 0C92  
                       ?_isr 0070                         u2005 0576                         u2015 057C  
                       u2105 0F44                         u2045 0EFF                         _LATA 010C  
                       _LATB 010D                         _LATC 010E                         _LATD 010F  
                       u2225 0E0D                         _LATE 0110                         _LATF 038C  
                       u2075 0F29                         _LATG 038D                         u2165 0AE0  
                       u1605 07A3                         u2415 01C6                         u1625 07BC  
                       u2505 01FF                         u2275 0909                         u2285 090E  
                       u1645 07C9                         u2445 01D9                         u3087 0A01  
                       u2615 0AB1                         u2625 0ABB                         u1755 0E92  
                       u2475 01EC                         u2635 0AC3                         u1685 07E3  
                       u1775 0E9E                         u1855 0689                         u1935 0522  
                       u2815 03AB                         u1785 0EB2                         u1865 0699  
                       u1945 0532                         u2665 0A1C                         u2825 03C6  
                       u1795 0EBE                         u1875 06B9                         u2595 0AA7  
                       u2835 03DB                         u1885 06C8                         u1965 055A  
                       u2685 0A2B                         u1895 06D2                         u1975 0560  
                       u2695 0A32                         u2875 0288                         u2885 02BC  
                       _TMR0 0015                         _WPUB 020D                         _WPUG 048D  
           __end_of_I2CAck_2 0C3F                         _main 17E0                 ___ftpack@arg 0020  
               ___ftpack@exp 0023                         fsr0h 0005                         fsr1h 0007  
                       fsr0l 0004                         indf0 0000                         indf1 0001  
                       fsr1l 0006                         btemp 007E             __end_of_I2CStart 17BE  
              __CFG_BOREN$ON 0000           _timerInterruptProc 0D61                         ltemp 007E  
                       start 0024                         ttemp 007E                         wtemp 007E  
              __CFG_IESO$OFF 0000                 disp_kv@temp2 0060            ___bmul@multiplier 0023  
               ___ftmul@cntr 004A                 ___ftmul@sign 004B         I2C_DAC_Write@address 003C  
        ?_timerInterruptProc 0070                 ___fttol@exp1 0059             ??_timerTickClear 0021  
               ___fttol@lval 0055                        ??_isr 007B                __CFG_PLLEN$ON 0000  
            __end_of___aldiv 0EDF                        ?_main 0070              __end_of_adcInit 082B  
            __end_of_adcRead 0A12              __end_of___ftadd 0263                __CFG_WDTE$OFF 0000  
            __end_of___ftdiv 06F3              __end_of___ftmul 059D              __end_of___ftsub 0939  
            __end_of___fttol 0F66              __end_of___lwdiv 0AD0              __end_of___lwmod 0A3F  
                      i1l371 001F                        _PORTA 000C                        _PORTB 000D  
                      _PORTC 000E                        _PORTD 000F                        _PORTE 0010  
                      _PORTF 028C                        _PORTG 028D       timerInterruptProc@time 0079  
                      _TRISA 008C                        _TRISB 008D                        _TRISC 008E  
                      _TRISD 008F                        _TRISE 0090                        _TRISF 030C  
                      _TRISG 030D                 ?_init_millis 0070               __CFG_FCMEN$OFF 0000  
             ?_I2C_DAC_Write 0039                        _Timer 00B5              __end_of_disp_kv 016D  
            ??_processButton 0068                ___awtoft@sign 002D         ??_timerInterruptProc 0071  
          __end_of_I2CInit_2 0BBF            __end_of_I2CSend_2 080C            ??_timerEventStart 0020  
              ___ftpack@sign 0024            __end_of_I2CWait_2 0CC3            __end_of_I2CStop_2 17CD  
                      pclath 000A                        ltemp0 007E                        ltemp1 0082  
                      ltemp2 0086                        ltemp3 0080                        ttemp0 007E  
                      ttemp1 0081                        ttemp2 0084                        ttemp3 0087  
                      ttemp4 007F                        status 0003                        wtemp0 007E  
                      wtemp1 0080                        wtemp2 0082                        wtemp3 0084  
                      wtemp4 0086                        wtemp5 0088                        wtemp6 007F  
         disp_ma_result@data 005A           disp_ma_result@temp 005D               __CFG_MCLRE$OFF 0000  
            __initialization 0026                 __end_of_main 17E7                 I2CAck_2@prev 0034  
              get_millis@now 0020              ??_pwmStart_ccp2 0020              ??_pwmStart_ccp3 0020  
                  I2CAck@now 0030                    ??_I2CInit 0037                    ??_I2CSend 0038  
                  ??_I2CWait 0030                    ??_I2CStop 0038                       ??_main 0070  
     __size_of_event_display 00D8                ___fttol@sign1 0054          processButton@button 006C  
              ?_event_expose 0070                       _I2CAck 0BBF                       _ADRESH 009C  
                     _ADRESL 009B                       _CCPR2L 0298                       _CCPR3L 0311  
           __end_of_adcTodac 0A6C             __end_of___awtoft 099C                       _ANSELA 018C  
                     _ANSELE 0190                       _ANSELF 040C             __end_of___ftpack 07F3  
                     _ANSELG 040D                       i1l2912 0DB7                       i1l2914 0DD7  
                     i1l2916 0D63                       u300_25 0DCB                 ??_I2CStart_2 0038  
           __end_of___lwtoft 08D0                       u293_25 0D6A                       u295_25 0D7A  
                     u296_25 0D8C                       u297_25 0DA1                       u298_25 0DA6  
                     u299_25 0DBA               __CFG_PWRTE$OFF 0000   __end_of_event_timer_Button 0894  
              ?_buttons_init 0070                 _CCPTMRS0bits 029E                       ___bmul 0894  
                     ___ftge 0B09   pwmInit_ccp3@ccpr3l_ccp3con 0061             ??_processButtons 006D  
                     _apMain 08D0                    ??___aldiv 002E                       _apInit 0413  
                     ___wmul 08FF                    ??_adcInit 0020                    ??_adcRead 0022  
                  ??___ftadd 002E                    ??___ftdiv 0032                    ??___ftmul 0042  
                  ??___ftsub 003B                    ??___fttol 0050                    ??___lwdiv 0024  
                  ??___lwmod 002C             __end_of_initPort 0D0C                       _millis 08E6  
          ?_buttons_setFuncs 0020                 adcTodac@data 005A                    ??_disp_kv 005C  
                  ?_I2CAck_2 0070   timerInterruptProc@ch_count 0070                 adcTodac@temp 005C  
      ___ftmul@f3_as_product 0047           ??_buttons_setFuncs 0024           __end_of_I2CStart_2 17C8  
             ??_event_expose 0023              ??_I2C_DAC_Write 003A                    ?_I2CStart 0070  
   __end_of_I2C_AS1115_Write 0958     __end_of_event_btn_Expose 0D61             ??_disp_ma_result 005C  
        disp_ma_result@temp2 0060       processButton@isPressed 0067      __end_of__initialization 0035  
              _event_display 033B                   ___ftadd@f1 0028                   ___ftadd@f2 002B  
                 ___ftge@ff1 0020                   ___ftge@ff2 0023                   ___ftdiv@f1 002F  
                 ___ftdiv@f2 002C                   ___ftdiv@f3 0037                   ___awtoft@c 0028  
             ??_buttons_init 0020          ___bmul@multiplicand 0020                   ___ftmul@f1 003C  
                 ___ftmul@f2 003F                   ___ftsub@f1 0038                   ___ftsub@f2 0035  
                 ___fttol@f1 004C               __pcstackCOMMON 0070          I2C_AS1115_Write@cmd 003A  
                 ___lwtoft@c 0028                   ??_I2CAck_2 0030                   I2CAck@prev 0034  
             _OPTION_REGbits 0095                   ??_I2CStart 0038          event_btn_Expose@ret 0064  
__size_of_event_anodeCurrent 00D8         __size_of_init_millis 000A      __size_of_event_btn_Stop 0024  
                    ?_I2CAck 0070                   __pbssBANK1 00A0                   __pbssBANK2 0120  
             ?_event_display 0070         buttons_setFuncs@btn1 0020         buttons_setFuncs@btn2 0022  
         __size_of_initTimer 000E           __size_of_event_rst 000F                 I2CSend_2@dat 0038  
                 I2CSend@dat 0038                   __pmaintext 17E0                      ?___bmul 0020  
                    ?___ftge 0020                      ?_apMain 0070                   I2CWait@now 0030  
                    ?_apInit 0070                      ?___wmul 0020                   __pintentry 0004  
          event_btn_Stop@ret 003E             timerGetTick@time 0020                      _I2CInit 0B45  
                    _I2CSend 17F7                      _I2CWait 0C3F                      ?_millis 0020  
               I2CWait_2@now 0030                      _I2CStop 17BE                    ?_adcTodac 005A  
                  ?___awtoft 0028                    ?___ftpack 0020              _timerEventStart 17EF  
                  ?___lwtoft 0028           __size_of_timerInit 0022           __size_of_timerProc 000C  
                 _get_millis 09C0                      _SSP1ADD 0212                      _SSP2ADD 021A  
                    _SSP1BUF 0211                      _SSP2BUF 0219                 apInit@D_temp 0042  
            __size_of_I2CAck 0040                    _I2CInit_2 0B82                    ?_initPort 0070  
            processButtons@i 00E7                    _I2CSend_2 0803                    _I2CWait_2 0C81  
                  _I2CStop_2 17C8         __end_of_event_expose 0863                      ___aldiv 0E5D  
            __size_of___bmul 0012              __size_of___ftge 003C                      _adcInit 0820  
                    _adcRead 09E9                      ___ftadd 016D              __size_of_apMain 0016  
            __size_of_apInit 00D6                      ___ftdiv 064A              __size_of___wmul 001C  
                    ___ftmul 04E9                      ___ftsub 091B                      ___fttol 0EDF  
                    ___lwdiv 0A9B                      ___lwmod 0A12                   ??_adcTodac 005C  
                 ??___awtoft 002B                   ??___ftpack 0025              __size_of_millis 0019  
                    __ptext1 08D0                      __ptext2 07F3                      __ptext3 0263  
                    __ptext4 0863                      __ptext5 033B                      __ptext6 0855  
                    __ptext7 0883                      __ptext8 0A6C                      __ptext9 0DDC  
                    _disp_kv 0039                   ??___lwtoft 002B            __end_of_initTimer 0839  
          __end_of_event_rst 0872                    _T2CONbits 001C                 __size_of_isr 0020  
                    _buttons 0120             ___aldiv@dividend 002A                    _T4CONbits 0417  
       __end_of_buttons_init 0820  __size_of_timerInterruptProc 007B                      clrloop0 17D4  
            ??_event_display 0062        __end_of_processButton 0E5D         end_of_initialization 0035  
              ?_timerGetTick 0070                   ?_I2CInit_2 0035                   ??_initPort 0020  
                 ?_I2CSend_2 0070                   ?_I2CWait_2 0070                ?_pwmInit_ccp2 005A  
              ?_pwmInit_ccp3 005A                   ?_I2CStop_2 0070            __end_of_timerInit 097A  
          __end_of_timerProc 07FF      __end_of_timerEventStart 17F7             ___aldiv@quotient 0031  
      __end_of_pwmStart_ccp2 0847        __end_of_pwmStart_ccp3 0855                    _PORTFbits 028C  
         _event_timer_Button 0883             __CFG_FOSC$INTOSC 0000            __size_of_I2CAck_2 0040  
                ?_get_millis 0020      __size_of_timerTickClear 0015               _event_btn_Stop 099C  
          ?_I2C_AS1115_Write 0039            ?_event_btn_Expose 0070            __size_of_I2CStart 0005  
             ??_timerGetTick 0020          ?_event_timer_Button 0070            I2C_DAC_Write@data 0039  
        timerInterruptProc@i 007A    __size_of_buttons_setFuncs 0011           ??_I2C_AS1115_Write 003A  
             __end_of_I2CAck 0BFF           ??_event_btn_Expose 0063                ?_pwmStop_ccp2 0070  
              ?_pwmStop_ccp3 0070           get_millis@prev_now 0024                  ___ftdiv@exp 003A  
             ??_pwmInit_ccp2 005F               ??_pwmInit_ccp3 005F                  _CCP2CONbits 029A  
                _CCP3CONbits 0313                  ___ftmul@exp 0046         ??_event_timer_Button 006F  
        timerEventStart@time 0020               __end_of___bmul 08A6               __end_of___ftge 0B45  
             __end_of_apMain 08E6               __end_of_apInit 04E9               __end_of___wmul 091B  
           timerInit@timeSet 0020               __end_of_millis 08FF       __end_of_event_btn_Stop 09C0  
        start_initialization 0026         I2C_AS1115_Write@data 0039        __end_of_I2C_DAC_Write 0B09  
              I2CInit_2@freq 0035                  I2CAck_2@now 0030                  __end_of_isr 0024  
                   ??_I2CAck 0030               ??_pwmStop_ccp2 0020               ??_pwmStop_ccp3 0020  
      __size_of_event_expose 000E                  ??_I2CInit_2 0037                  ??_I2CSend_2 0038  
                ??_I2CWait_2 0030                  ??_I2CStop_2 0038         event_btn_Expose@temp 0065  
             adcRead@channel 0023                     ??___bmul 0021                     ??___ftge 0026  
           ?_timerEventStart 0070          __size_of_get_millis 0029                     ??_apMain 0070  
                   ??_apInit 0041                     ??___wmul 0024                     ?_I2CInit 0035  
                   ?_I2CSend 0070                     ?_I2CWait 0070                     ??_millis 0024  
                   ?_I2CStop 0070        __size_of_buttons_init 000A   __end_of_event_anodeCurrent 033B  
          __size_of_adcTodac 002D            __size_of___awtoft 0022            __size_of___ftpack 0065  
              ??_init_millis 0020              ?_event_btn_Stop 0070      __size_of_processButtons 002F  
               _event_expose 0855                    ___latbits 0003            __size_of___lwtoft 0015  
              __pcstackBANK0 0020                __pcstackBANK1 00E5                  I2CInit@freq 0035  
 pwmInit_ccp2@ccpr1l_ccp1con 0061            __size_of_initPort 0049      __size_of_disp_ma_result 00AD  
           ___lwdiv@dividend 0022                 _buttons_init 0816                     ?___aldiv 0026  
                   ?_adcInit 0070                     ?_adcRead 0020                     ?___ftadd 0028  
                   ?___ftdiv 002C                     ?___ftmul 003C                     ?___ftsub 0035  
                   ?___fttol 004C                     ?___lwdiv 0020         __end_of_timerGetTick 17E0  
                   ?___lwmod 0028                  I2CWait@prev 0034                     ?_disp_kv 005A  
                   _I2CAck_2 0BFF           event_btn_Stop@temp 003F         __end_of_pwmInit_ccp2 1000  
       __end_of_pwmInit_ccp3 078E                     _I2CStart 17B9                I2CWait_2@prev 0034  
             _timerTickClear 08A6                    _initTimer 082B                    _event_rst 0863  
           ___lwdiv@quotient 0025             _buttons_setFuncs 0872          __end_of_init_millis 0816  
            ___aldiv@divisor 0026              ___aldiv@counter 002F               ___wmul@product 0024  
                   _LATBbits 010D                     _LATCbits 010E                     _LATDbits 010F  
                   _LATEbits 0110                    clear_ram0 17D3                     _PIR1bits 0011  
                   _PIR4bits 0014                     _SSP1CON2 0216                    _timerInit 0958  
                   _SSP2CON2 021E                    _timerProc 07F3                     _SSP1STAT 0214  
                   _SSP2STAT 021C         __end_of_pwmStop_ccp2 17D3         __end_of_pwmStop_ccp3 17EF  
           __size_of_I2CInit 003D             __size_of_I2CSend 0009             __size_of_I2CWait 0042  
                 _ADCON0bits 009D                   _ADCON1bits 009E             __size_of_I2CStop 0005  
          ___wmul@multiplier 0020       __end_of_timerTickClear 08BB   __end_of_timerInterruptProc 0DDC  
               ??_get_millis 0028                   ?_initTimer 0070                   ?_event_rst 0070  
              _timer0_millis 00B1        __end_of_event_display 0413                   _I2CStart_2 17C3  
           pwmInit_ccp2@freq 005A             pwmInit_ccp3@freq 005A             pwmInit_ccp2@duty 005C  
           pwmInit_ccp3@duty 005C    __size_of_I2C_AS1115_Write 001F    __size_of_event_btn_Expose 0055  
                 _APFCONbits 011D                   ?_timerInit 0020                   ?_timerProc 0070  
         __end_of_get_millis 09E9             __size_of___aldiv 0082             __size_of_adcInit 000B  
           __size_of_adcRead 0029             __size_of___ftadd 00F6             __size_of___ftdiv 00A9  
           __size_of___ftmul 00B4             __size_of___ftsub 001E             __size_of___fttol 0087  
           __size_of___lwdiv 0035       __size_of_processButton 0081             __size_of___lwmod 002D  
                   _adcTodac 0A3F                     ___awtoft 097A                     ___ftpack 078E  
                   ___lwtoft 08BB              ?_timerTickClear 0020             __size_of_disp_kv 0134  
             _processButtons 0A6C                  _init_millis 080C              ___lwdiv@divisor 0020  
            ___lwdiv@counter 0027                     __ptext10 099C                     __ptext11 0D0C  
                   __ptext20 0A12                     __ptext12 0847                     __ptext21 0A9B  
                   __ptext13 0839                     __ptext30 016D                     __ptext22 09E9  
                   __ptext14 06F3                     __ptext31 078E                     __ptext23 17D9  
                   __ptext15 0A3F                     __ptext40 17CD                     __ptext32 0B09  
                   __ptext24 0F66                     __ptext16 0894                     __ptext41 0AD0  
                   __ptext33 0413                     __ptext25 0EDF                     __ptext17 059D  
                   __ptext50 0939                     __ptext42 17C8                     __ptext34 0958  
                   __ptext26 04E9                     __ptext18 0039                     __ptext51 17BE  
                   __ptext43 17C3                     __ptext35 17EF                     __ptext27 064A  
                   __ptext19 08BB                     __ptext60 0B45                     __ptext52 17B9  
                   __ptext44 0803                     __ptext36 082B                     __ptext28 097A  
                   __ptext61 08FF                     __ptext53 17F7                     __ptext45 0C81  
                   __ptext37 0CC3                     __ptext29 091B                     __ptext62 0E5D  
                   __ptext54 0C3F                     __ptext46 0BFF                     __ptext38 08A6  
                   __ptext55 0BBF                     __ptext47 0872                     __ptext39 17E7  
                   __ptext64 0D61                     __ptext56 08E6                     __ptext48 0816  
                   __ptext57 080C                     __ptext49 0820                     __ptext58 09C0  
                   __ptext59 0B82                 _SSP1CON1bits 0215                 _SSP1CON2bits 0216  
               _SSP2CON1bits 021D                 _SSP2CON2bits 021E                     _initPort 0CC3  
              __size_of_main 0007       __size_of_pwmStart_ccp2 000E       __size_of_pwmStart_ccp3 000E  
             _disp_ma_result 059D        __size_of_timerGetTick 0007                     int$flags 007E  
__size_of_event_timer_Button 0011        __size_of_pwmInit_ccp2 009A        __size_of_pwmInit_ccp3 009B  
           ??_event_btn_Stop 003D                 _SSP1STATbits 0214                 _SSP2STATbits 021C  
     __end_of_processButtons 0A9B                   _INTCONbits 000B                  ??_initTimer 0020  
                ??_event_rst 0023                     millis@ms 0024          timerTickClear@start 0020  
                   intlevel1 0000                 _timerGetTick 17D9                _processButton 0DDC  
         _event_anodeCurrent 0263                  ?_I2CStart_2 0070       __end_of_disp_ma_result 064A  
           ___lwmod@dividend 002A            __CFG_CLKOUTEN$OFF 0000                 _pwmInit_ccp2 0F66  
               _pwmInit_ccp3 06F3          ?_event_anodeCurrent 0070                   _OSCCONbits 0099  
      __size_of_pwmStop_ccp2 0006        __size_of_pwmStop_ccp3 0008       __size_of_I2C_DAC_Write 0039  
                ??_timerInit 0024                  ??_timerProc 006F                timerInit@func 0022  
              timerInit@time 0024     __end_of_buttons_setFuncs 0883              ?_processButtons 0070  
              _pwmStart_ccp2 0839                _pwmStart_ccp3 0847           timerTickClear@time 0022  
   __size_of_timerEventStart 0008              ___lwmod@divisor 0028         ??_event_anodeCurrent 0063  
            ___lwmod@counter 002D                 ___aldiv@sign 0030                   _WDTCONbits 0097  
             ?_processButton 0067                timerProc@time 006F              ?_disp_ma_result 005A  
               _pwmStop_ccp2 17CD                 _pwmStop_ccp3 17E7             _I2C_AS1115_Write 0939  
           _event_btn_Expose 0D0C  
